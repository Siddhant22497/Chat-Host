{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Siddhant\\\\OneDrive\\\\Something\\\\chat_app\\\\src\\\\Homescreen.js\",\n  _s = $RefreshSig$();\nimport { React, useState, useRef, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  io\n} = require(\"socket.io-client\");\nconst socket = io.connect(\"http://localhost:5100\");\nexport default function Homescreen() {\n  _s();\n  const location = useLocation();\n  const inputRef = useRef(null);\n  const [groupMessages, setGroupMessage] = useState(false);\n  const {\n    username,\n    password\n  } = location.state || {};\n  const [searchusersgroup, setSearchUsersgroup] = useState([]);\n  const [searchusers, setSearchsUsers] = useState([]);\n  const [searchgroupMessages, setsearchGroupMessages] = useState([]);\n  const [searchbool, setSearchbool] = useState(false);\n  const [mscreen, setMscreen] = useState(true);\n  const [senderGroupName, setSenderGroupName] = useState(\"\");\n  const [currsendmessage, setCurrsendmessage] = useState(\"\");\n  const [groupmessage, setGroupmessage] = useState(\"\");\n  const [addgroupModal, setAddgroupModal] = useState(false);\n  const [messagetext, setmessagetext] = useState(\"Type message here\");\n  const [intial_user_group, setIntial_user_group] = useState([]);\n  const [usersingroups, setUsersingroups] = useState([]);\n  const [groupmember, setGroupmember] = useState([]);\n  const switchModal = () => {\n    setAddgroupModal(!addgroupModal);\n    let to_add_group = document.getElementById(\"to_add_group\");\n    if (addgroupModal) {\n      to_add_group.classList.remove(\"invisible\");\n      to_add_group.classList.add(\"visible\");\n    } else {\n      to_add_group.classList.remove(\"visible\");\n      to_add_group.classList.add(\"invisible\");\n    }\n  };\n  const clickOnImage = event => {\n    const searchimage = document.getElementById('search_image');\n    let a = searchimage.attributes['src'];\n    if (a.nodeValue == '/leftArrow.png') {\n      fetchintialusergroup();\n      a.nodeValue = '/searchIcon.png';\n      setSearchbool(false);\n      setMscreen(true);\n      setmessagetext(\"Type message here\");\n    } else {\n      a.nodeValue = '/leftArrow.png';\n      setSearchbool(true);\n      if (inputRef.current) {\n        inputRef.current.focus();\n      }\n    }\n    event.stopPropagation();\n  };\n  const handleContainerClick = event => {\n    const target = event.target;\n    const searchimage = document.getElementById('search_image');\n    let a = searchimage.attributes['src'];\n    const flag = target.classList.contains('searchnot');\n  };\n  const oninput = async e => {\n    const value = e.target.value;\n    setSearchbool(true);\n    if (value.length > 0) {\n      const response = await fetch('http://localhost:5010/tofetch', {\n        method: 'POST',\n        body: JSON.stringify({\n          \"username\": value\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      const data_users = data.users;\n      const data_group = data.groupMessages;\n      setSearchsUsers(data_users || []);\n      setsearchGroupMessages(data_group || []);\n    } else {\n      setSearchsUsers([]);\n      setsearchGroupMessages([]);\n    }\n  };\n  useEffect(() => {\n    const handleReceiveMessage = data => {\n      const currentDate = data.currentDate;\n      const currentTime = data.currentTime;\n      const sender = data.sender;\n      const receiver = data.receiver;\n      const textToSend = data.textToSend;\n      if (currsendmessage == \"\") {\n        setCurrsendmessage({\n          \"currentDate\": currentDate,\n          \"currentTime\": currentTime,\n          \"sender\": sender,\n          \"receiver\": receiver,\n          \"textToSend\": textToSend\n        });\n        fetchintialusergroup();\n        if (senderGroupName == receiver) {\n          loadindimess(sender, receiver);\n        }\n      } else if (currsendmessage[\"currentTime\"] != currentTime) {\n        setCurrsendmessage({\n          \"currentDate\": currentDate,\n          \"currentTime\": currentTime,\n          \"sender\": sender,\n          \"receiver\": receiver,\n          \"textToSend\": textToSend\n        });\n        fetchintialusergroup();\n        if (senderGroupName == receiver) {\n          loadindimess(sender, receiver);\n        }\n      }\n    };\n    const handleGroupReceiveMessage = data => {\n      const currentDate = data.currentDate;\n      const currentTime = data.currentTime;\n      const groupreceivename = data.sender;\n      const receiver = data.receiver;\n      const chat = data.textToSend;\n      if (currsendmessage == \"\") {\n        setGroupMessage({\n          \"currentDate\": currentDate,\n          \"currentTime\": currentTime,\n          \"groupname\": groupreceivename,\n          \"receiver\": receiver,\n          \"chat\": chat\n        });\n        fetchintialusergroup();\n        // console.log(\"If \",receiver);\n        // if (senderGroupName == groupreceivename) {\n        loadgroupmess(receiver, senderGroupName);\n        // }\n      } else if (groupmessage[\"currentTime\"] != currentTime) {\n        setGroupMessage({\n          \"currentDate\": currentDate,\n          \"currentTime\": currentTime,\n          \"groupname\": groupreceivename,\n          \"receiver\": receiver,\n          \"chat\": chat\n        });\n        fetchintialusergroup();\n        // if (senderGroupName == groupreceivename) {\n        loadgroupmess(receiver, senderGroupName);\n        // }\n      }\n    };\n    socket.on(\"receive_message\", handleReceiveMessage);\n    socket.on(\"receive_group_message\", handleGroupReceiveMessage);\n    return () => {\n      socket.off(\"receive_message\", handleReceiveMessage);\n    };\n  });\n  const startindivimessage = async (e, u2) => {\n    setMscreen(false);\n    const receiver = username;\n    const sender = u2;\n    setGroupMessage(false);\n    if (sender == receiver) {\n      const t1 = receiver + ' (Self)';\n      setSenderGroupName(t1);\n      socket.emit(\"join_room\", t1);\n    } else {\n      setSenderGroupName(sender);\n      const identifier1 = receiver + '#' + sender;\n      const identifier2 = sender + '#' + receiver;\n      socket.emit(\"join_room\", identifier1);\n      socket.emit(\"join_room\", identifier2);\n    }\n    setmessagetext(\"Type message here\");\n    loadindimess(receiver, sender);\n  };\n  const startgroupmessage = async (e, groupname) => {\n    setMscreen(false);\n    setGroupMessage(true);\n    setmessagetext(\"Type message here\");\n    const receiver = username;\n    socket.emit(\"join_room_group\", groupname);\n    setSenderGroupName(groupname);\n    loadgroupmess(receiver, groupname);\n  };\n  const loadgroupmess = async (receiver, groupname) => {\n    const response = await fetch('http://localhost:5200/loadgroupmessage', {\n      method: 'POST',\n      body: JSON.stringify({\n        \"groupname\": groupname\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const messageDisplayContainer = document.getElementById(\"messageDisplay\");\n    if (messageDisplayContainer != null) {\n      messageDisplayContainer.innerHTML = \"\";\n    }\n    const result = await response.json();\n    if (result.length === 0) {\n      messageDisplayContainer.innerHTML = \"\";\n      return;\n    }\n    let lastDate = \"28/12/2024\";\n    result.forEach(currentEle => {\n      const {\n        receiver: messageReceiver,\n        chat,\n        currentDate,\n        currentTime\n      } = currentEle;\n      if (currentDate !== lastDate) {\n        lastDate = currentDate;\n        const dateHeader = document.createElement(\"h1\");\n        dateHeader.className = \"flex justify-center items-center h-12\";\n        const dateContainer = document.createElement(\"span\");\n        dateContainer.className = \"bg-red-700 border border-yellow-700 text-white px-4 py-2 rounded-md\";\n        dateContainer.innerText = currentDate;\n        dateHeader.append(dateContainer);\n        messageDisplayContainer.appendChild(dateHeader);\n      }\n\n      // Create a message bubble\n      const messageBubble = document.createElement(\"div\");\n      messageBubble.className = `p-3 rounded-lg m-2 max-w-xs ${username === messageReceiver ? \"bg-blue-500 text-white self-end ml-auto\" // Right side for the current user\n      : \"bg-gray-200 text-black self-start mr-auto\" // Left side for others\n      }`;\n      messageBubble.style.marginBottom = \"1rem\"; // Add spacing between messages\n\n      // Create a wrapper to hold message text, receiver, date, and time\n      const messageWrapper = document.createElement(\"div\");\n      messageWrapper.className = \"flex flex-col h-auto\"; // Stack elements vertically\n\n      // Receiver name\n      const receiverText = document.createElement(\"p\");\n      receiverText.className = \"text-[1.1vw] font-semibold mb-1 text-gray-700 break-words\"; // Ensure wrapping\n      receiverText.innerText = `From: ${messageReceiver}`;\n\n      // Message text\n      const messageText = document.createElement(\"p\");\n      messageText.className = \"text-[1.3vw] mb-1 break-words\"; // Ensure wrapping for long messages\n      messageText.innerText = chat;\n\n      // Message date and time\n      const messageDateTime = document.createElement(\"span\");\n      messageDateTime.className = \"text-[1vw] text-gray-600 self-end break-words\"; // Ensure wrapping\n      messageDateTime.innerHTML = `${currentDate}<br>${currentTime}`; // Display date and time on separate lines\n\n      // Append receiver, text, and date-time to the wrapper\n      messageWrapper.appendChild(receiverText);\n      messageWrapper.appendChild(messageText);\n      messageWrapper.appendChild(messageDateTime);\n\n      // Append the wrapper to the message bubble\n      messageBubble.appendChild(messageWrapper);\n\n      // Append the bubble to the message container\n      messageDisplayContainer.appendChild(messageBubble);\n    });\n    messageDisplayContainer.scrollTop = messageDisplayContainer.scrollHeight;\n  };\n  const loadindimess = async (receiver, sender) => {\n    const response = await fetch('http://localhost:5100/tofetchindichat', {\n      method: 'POST',\n      body: JSON.stringify({\n        \"receiver\": receiver,\n        \"sender\": sender\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    let messageDisplayContainer = document.getElementById(\"messageDisplay\");\n    if (messageDisplayContainer != null) messageDisplayContainer.innerHTML = \"\";\n    const result = await response.json();\n    if (result.length == 0) {\n      messageDisplayContainer.innerHTML = \"\";\n      return;\n    }\n    result.sort((a, b) => {\n      // Parse dates (currentDate is in DD/MM/YYYY format)\n      const [dayA, monthA, yearA] = a.currentDate.split('/').map(Number);\n      const [dayB, monthB, yearB] = b.currentDate.split('/').map(Number);\n\n      // Compare years, months, days first\n      if (yearA !== yearB) return yearA - yearB;\n      if (monthA !== monthB) return monthA - monthB;\n      if (dayA !== dayB) return dayA - dayB;\n\n      // If the dates are the same, compare times\n      const timeA = a.currentTime.split(':').map(Number); // [hours, minutes, seconds]\n      const timeB = b.currentTime.split(':').map(Number);\n\n      // Compare hours, minutes, seconds\n      if (timeA[0] !== timeB[0]) return timeA[0] - timeB[0];\n      if (timeA[1] !== timeB[1]) return timeA[1] - timeB[1];\n      return timeA[2] - timeB[2];\n    });\n    let lastDate = \"10/12/2024\";\n    result.forEach(currentEle => {\n      const {\n        chat,\n        currentDate,\n        currentTime,\n        receiver,\n        sender,\n        whichuser\n      } = currentEle;\n\n      // Add a date header if the date changes\n      if (currentDate !== lastDate) {\n        lastDate = currentDate;\n        const dateHeader = document.createElement(\"h1\");\n        dateHeader.className = \"flex justify-center items-center h-12\";\n        const dateContainer = document.createElement(\"span\");\n        dateContainer.className = \"bg-red-700 border border-yellow-700 text-white px-4 py-2 rounded-md\";\n        dateContainer.innerText = currentDate;\n        dateHeader.append(dateContainer);\n        messageDisplayContainer.appendChild(dateHeader);\n      }\n\n      // Create a message bubble\n      const messageBubble = document.createElement(\"div\");\n      messageBubble.className = `p-3 rounded-lg m-2 max-w-xs ${whichuser === receiver ? \"bg-blue-500 text-white self-end ml-auto\" : \"bg-gray-200 text-black self-start mr-auto\"}`;\n      messageBubble.style.marginBottom = \"1rem\";\n\n      // Create a wrapper to hold both the message and the time\n      const messageWrapper = document.createElement(\"div\");\n      messageWrapper.className = \"flex flex-col\"; // Removed fixed height to allow dynamic sizing\n\n      // Message text\n      const messageText = document.createElement(\"p\");\n      messageText.className = \"text-[1.3vw] mb-1 break-words\"; // Use 'break-words' to wrap text on overflow\n      messageText.innerText = chat;\n\n      // Message time\n      const messageTime = document.createElement(\"span\");\n      messageTime.className = \"text-[1vw] text-gray-600 self-end\";\n      messageTime.innerText = currentTime;\n\n      // Append text and time to the wrapper\n      messageWrapper.appendChild(messageText);\n      messageWrapper.appendChild(messageTime);\n\n      // Append the wrapper to the message bubble\n      messageBubble.appendChild(messageWrapper);\n\n      // Append bubble to container\n      messageDisplayContainer.appendChild(messageBubble);\n    });\n    messageDisplayContainer.scrollTop = messageDisplayContainer.scrollHeight;\n  };\n\n  // When click on send message arrow\n  const messageBox = async (e, flag = true) => {\n    e.stopPropagation();\n    if (flag == true) {\n      if (messagetext == \"Type message here\") {\n        const d = e.target.value;\n        const i = d.indexOf('Type message here');\n        const m1 = d.substring(i + 'Type message here'.length);\n        setmessagetext(m1);\n      } else if (e.target.value && e.target.value.length > 0) {\n        setmessagetext(e.target.value);\n      } else {\n        setmessagetext(\"Type message here\");\n      }\n    } else {\n      if (messagetext == \"Type message here\") {\n        e.target.value = \"\";\n        setmessagetext(e.target.value);\n      }\n    }\n  };\n  const sendGroupmessage = async e => {\n    const chat = messagetext;\n    const groupname = senderGroupName;\n    const receiver = username;\n    const now = new Date(); // Create a new Date object with the current date and time\n\n    // Get the date components\n    const day = now.getDate(); // Day of the month (1-31)\n    const month = now.getMonth() + 1; // Month (0-11), so add 1 for 1-12\n    const year = now.getFullYear(); // Full year (e.g., 2024)\n\n    const hours = now.getHours(); // Hours (0-23)\n    const minutes = now.getMinutes(); // Minutes (0-59)\n    const seconds = now.getSeconds(); // Seconds (0-59)\n\n    const currentDate = `${day}/${month}/${year}`;\n    const currentTime = `${hours}:${minutes}:${seconds}`;\n    setmessagetext(\"Type message here\");\n    const response = await fetch('http://localhost:5200/savegroupmessage', {\n      method: 'POST',\n      body: JSON.stringify({\n        \"receiver\": receiver,\n        \"groupname\": groupname,\n        \"chat\": chat,\n        \"currentDate\": currentDate,\n        \"currentTime\": currentTime\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    socket.emit('send_message_group', {\n      receiver,\n      groupname,\n      chat,\n      currentDate,\n      currentTime\n    });\n    setSearchbool(false);\n    fetchintialusergroup();\n    loadgroupmess(receiver, senderGroupName);\n  };\n  const sendMessage = async e => {\n    const textToSend = messagetext;\n    const receiver = username;\n    const sender = senderGroupName;\n    if (textToSend.length == 0) {\n      setmessagetext(\"Type message here\");\n      return;\n    }\n    if (groupMessages == false) {\n      const identifier = receiver + ' (Self)';\n      if (senderGroupName == identifier) {\n        // Coming soon\n        // const identifier1 = receiver + '#' + sender;\n        // const identifier2 = sender + '#' + receiver;\n        const now = new Date(); // Create a new Date object with the current date and time\n\n        // Get the date components\n        const day = now.getDate(); // Day of the month (1-31)\n        const month = now.getMonth() + 1; // Month (0-11), so add 1 for 1-12\n        const year = now.getFullYear(); // Full year (e.g., 2024)\n\n        const hours = now.getHours(); // Hours (0-23)\n        const minutes = now.getMinutes(); // Minutes (0-59)\n        const seconds = now.getSeconds(); // Seconds (0-59)\n\n        const currentDate = `${day}/${month}/${year}`;\n        const currentTime = `${hours}:${minutes}:${seconds}`;\n        setmessagetext(\"Type message here\");\n        const response = await fetch('http://localhost:5100/saveindichat', {\n          method: 'POST',\n          body: JSON.stringify({\n            \"receiver\": receiver,\n            \"sender\": receiver,\n            \"whichuser\": receiver,\n            \"textToSend\": textToSend,\n            \"currentDate\": currentDate,\n            \"currentTime\": currentTime\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        setSearchbool(false);\n        fetchintialusergroup();\n        loadindimess(receiver, receiver);\n      } else {\n        const identifier1 = receiver + '#' + sender;\n        const identifier2 = sender + '#' + receiver;\n        const now = new Date(); // Create a new Date object with the current date and time\n\n        // Get the date components\n        const day = now.getDate(); // Day of the month (1-31)\n        const month = now.getMonth() + 1; // Month (0-11), so add 1 for 1-12\n        const year = now.getFullYear(); // Full year (e.g., 2024)\n\n        const hours = now.getHours(); // Hours (0-23)\n        const minutes = now.getMinutes(); // Minutes (0-59)\n        const seconds = now.getSeconds(); // Seconds (0-59)\n\n        const currentDate = `${day}/${month}/${year}`;\n        const currentTime = `${hours}:${minutes}:${seconds}`;\n        setmessagetext(\"Type message here\");\n        const response = await fetch('http://localhost:5100/saveindichat', {\n          method: 'POST',\n          body: JSON.stringify({\n            \"receiver\": receiver,\n            \"sender\": sender,\n            \"whichuser\": receiver,\n            \"textToSend\": textToSend,\n            \"currentDate\": currentDate,\n            \"currentTime\": currentTime\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const result = await response.json();\n        const response2 = await fetch('http://localhost:5100/saveindichat', {\n          method: 'POST',\n          body: JSON.stringify({\n            \"receiver\": sender,\n            \"sender\": receiver,\n            \"whichuser\": receiver,\n            \"textToSend\": textToSend,\n            \"currentDate\": currentDate,\n            \"currentTime\": currentTime\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const result2 = await response2.json();\n        socket.emit('send_message', {\n          identifier1,\n          identifier2,\n          receiver,\n          sender,\n          textToSend,\n          currentDate,\n          currentTime\n        });\n        setSearchbool(false);\n        fetchintialusergroup();\n        loadindimess(receiver, senderGroupName);\n      }\n    } else {\n      //For group chat coming soon\n    }\n  };\n  const submitNewGroup = async () => {\n    let group_name = document.getElementById(\"group_name\");\n    const val = group_name.value;\n    if (val.length == 0) {\n      let display_res = document.getElementById(\"display_res\");\n      display_res.textContent = \"Enter Group Name\";\n      return;\n    } else {\n      let display_res = document.getElementById(\"display_res\");\n      display_res.textContent = \"\";\n    }\n    if (usersingroups.length <= 1) {\n      let display_res = document.getElementById(\"display_res\");\n      display_res.textContent = \"Atleast 2 users are required\";\n      return;\n    } else {\n      let display_res = document.getElementById(\"display_res\");\n      display_res.textContent = \"\";\n    }\n    const response = await fetch('http://localhost:4000/signup', {\n      method: 'POST',\n      body: JSON.stringify({\n        \"username\": val\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    const length = data.length;\n    if (length == 1) {\n      let display_res = document.getElementById(\"display_res\");\n      display_res.textContent = \"Group name matches with username\";\n      return;\n    }\n    const res = await fetch(\"http://localhost:5200/checkgroupexist\", {\n      method: 'POST',\n      body: JSON.stringify({\n        \"groupname\": val\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const res2 = await res.json();\n    if (res2.flag == \"true\") {\n      let display_res = document.getElementById(\"display_res\");\n      display_res.textContent = \"Group name already exists\";\n      return;\n    } else {\n      let display_res = document.getElementById(\"display_res\");\n      display_res.textContent = \"\";\n    }\n    let groupmember = [];\n    groupmember = usersingroups.map(user => user.username);\n    groupmember.push(username);\n    const now = new Date(); // Create a new Date object with the current date and time\n\n    // Get the date components\n    const day = now.getDate(); // Day of the month (1-31)\n    const month = now.getMonth() + 1; // Month (0-11), so add 1 for 1-12\n    const year = now.getFullYear(); // Full year (e.g., 2024)\n\n    const hours = now.getHours(); // Hours (0-23)\n    const minutes = now.getMinutes(); // Minutes (0-59)\n    const seconds = now.getSeconds(); // Seconds (0-59)\n\n    const currentDate = `${day}/${month}/${year}`;\n    const currentTime = `${hours}:${minutes}:${seconds}`;\n    const response2 = await fetch('http://localhost:5200/savegroupinfo', {\n      method: 'POST',\n      body: JSON.stringify({\n        \"receiver\": username,\n        \"groupname\": val,\n        \"groupmember\": groupmember,\n        \"currentDate\": currentDate,\n        \"currentTime\": currentTime\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    let display_res = document.getElementById(\"display_res\");\n    display_res.textContent = \"Group created successfully\";\n    setTimeout(() => {\n      switchModal();\n      setSearchUsersgroup([]);\n      setUsersingroups([]);\n    }, 2000);\n  };\n  const searchusersforgroup = async e => {\n    const sender = e.target.value;\n    if (sender.length > 0) {\n      const response = await fetch('http://localhost:5010/tofetch', {\n        method: 'POST',\n        body: JSON.stringify({\n          \"username\": sender\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      const data_users = data.users;\n      const data_group = data.groupMessages;\n      setSearchUsersgroup(data_users || []);\n    } else {\n      setSearchUsersgroup([]);\n    }\n  };\n  const addingroup = (e, user) => {\n    e.preventDefault();\n    const alreadyAdded = usersingroups.some(element => element._id === user._id);\n    if (alreadyAdded) return;\n    setUsersingroups(prev => [...prev, user]);\n  };\n  const removeingroup = (e, user) => {\n    e.preventDefault();\n    setUsersingroups(prev => prev.filter(element => element._id !== user._id));\n  };\n  const fetchintialusergroup = async () => {\n    const res1 = await fetch('http://localhost:5100/intialindires', {\n      method: 'POST',\n      body: JSON.stringify({\n        receiver: username\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data1 = await res1.json();\n    const res2 = await fetch('http://localhost:5200/intialresultgroup', {\n      method: 'POST',\n      body: JSON.stringify({\n        receiver: username\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data2 = await res2.json();\n\n    // Process data2 to include a default message if none exists\n    const processedData2 = await Promise.all(data2.map(async group => {\n      var _data3$, _data3$2, _data3$3;\n      const {\n        groupname,\n        currentDate,\n        currentTime,\n        groupmember\n      } = group;\n\n      // Fetch the latest message for the group\n      const res3 = await fetch('http://localhost:5200/intialgroupres', {\n        method: 'POST',\n        body: JSON.stringify({\n          groupname\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data3 = await res3.json();\n\n      // Extract the latest message or set default chat\n      const latestMessage = ((_data3$ = data3[0]) === null || _data3$ === void 0 ? void 0 : _data3$.latestMessage) || \"Start your messaging\";\n      const n1currentDate = ((_data3$2 = data3[0]) === null || _data3$2 === void 0 ? void 0 : _data3$2.currentDate) || currentDate;\n      const n1currentTime = ((_data3$3 = data3[0]) === null || _data3$3 === void 0 ? void 0 : _data3$3.currentTime) || currentTime;\n      return {\n        groupname,\n        groupmember,\n        \"currentDate\": n1currentDate,\n        \"currentTime\": n1currentTime,\n        chat: latestMessage\n      };\n    }));\n\n    // Combine results\n    let tresult = [...data1, ...processedData2];\n    let temp = tresult.sort((b, a) => {\n      // Parse dates (currentDate is in DD/MM/YYYY format)\n      const [dayA, monthA, yearA] = a.currentDate.split('/').map(Number);\n      const [dayB, monthB, yearB] = b.currentDate.split('/').map(Number);\n\n      // Compare years, months, days first\n      if (yearA !== yearB) return yearA - yearB;\n      if (monthA !== monthB) return monthA - monthB;\n      if (dayA !== dayB) return dayA - dayB;\n\n      // If the dates are the same, compare times\n      const timeA = a.currentTime.split(':').map(Number); // [hours, minutes, seconds]\n      const timeB = b.currentTime.split(':').map(Number);\n\n      // Compare hours, minutes, seconds\n      if (timeA[0] !== timeB[0]) return timeA[0] - timeB[0];\n      if (timeA[1] !== timeB[1]) return timeA[1] - timeB[1];\n      return timeA[2] - timeB[2];\n    });\n\n    // Update the state with sorted entries\n    setIntial_user_group([...temp]); // Create a new array to ensure immutability\n  };\n  useEffect(() => {\n    fetchintialusergroup();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // <>\n    //   {addgroupModal &&\n    //     <div className='bg-gray-300 fixed top-10 left-[25vw] h-[80vh] w-[50vw] z-20 '>\n    //       <button onClick={switchModal} className='bg-red-500  hover:bg-red-600 rounded mt-[1vh] mr-[0.5vw] float-right text-[1.5vw] h-[8vh] w-[5vw]' >Close</button>\n    //       <input type=\"text\" id=\"group_name\" name=\"\" placeholder='Enter Group Name: ' className='relative top-4 left-4 w-[30vw] h-[6vh] p-2 border-black' />\n    //       <input type=\"text\" id=\"search_user\" onChange={e => searchusersforgroup(e)} name=\"\" placeholder='Search User: ' className='relative top-7 left-4 w-[30vw] h-[6vh] p-2 border-black' />\n    //       <div className='bg-white h-[45vh] mt-[7vh] w-[23vw] ml-[1vw] float-left overflow-y-auto class=\"[&::-webkit-scrollbar]:hidden [-ms-overflow-style:none] [scrollbar-width:none]'>\n    //         {searchusersgroup.length > 0 ? (\n    //           <ul className='text-2xl mt-2  searchnot'>\n    //             {searchusersgroup.map((user) => (user.username != username &&\n    //               <li key={user._id} style={{ width: '90%', marginLeft: '5%' }} className='border-8 cursor-pointer mt-2 border-gray-700 pl-2  h-[9vh]  w-88  searchnot text-[2vw]'>{user.username} <button type=\"button\" onClick={e => addingroup(e, user)} className='bg-green-300 hover:bg-green-600 h-[5vh] float-right mt-1 mr-1 rounded w-[6vw]'>ADD</button> </li>\n    //             ))}\n    //           </ul>\n    //         ) : (<ul className='text-[1.8vw] mt-2 ml-7 searchnot'> No Users found</ul>)}\n    //       </div>\n    //       <div className='bg-white h-[45vh] mt-[7vh] w-[23vw] mr-[1vw] float-right'>\n    //         {usersingroups.length > 0 ? (\n    //           <ul className='text-2xl mt-2  searchnot'>\n    //             {usersingroups.map((user) => (\n    //               <li key={user._id} style={{ width: '90%', marginLeft: '5%' }} className='border-8 cursor-pointer mt-2 border-gray-700 pl-2  h-[9vh]  w-88  searchnot text-[2vw]'>{user.username} <button type=\"button\" onClick={e => removeingroup(e, user)} className='bg-red-500 hover:bg-red-600 h-[5vh] float-right mt-1 mr-1 rounded w-[8vw]'>Remove</button> </li>\n    //             ))}\n    //           </ul>\n    //         ) : (<ul className='text-[1.8vw] mt-2 ml-7 searchnot'> No Users is added</ul>)}\n    //       </div>\n    //       <div id='display_res' className='text-red-500 h-[5vh] mt-[54vh] mx-auto w-[30vw] text-center'></div>\n    //       <button className='bg-green-500  hover:bg-green-600 rounded ml-[20vw]  mt-[1vh] text-[1.5vw] h-[6vh] w-[8vw]' onClick={e => submitNewGroup(e)} >Submit</button>\n    //     </div>}\n    //   <div className='flex flex-row h-screen' onClick={handleContainerClick} >\n    //     <div className=' bg-gray-400' style={{ width: '5%', height: '100%' }}>\n    //     </div>\n    //     <div style={{ width: '40%', height: \"100%\" }}>\n    //       <div className='bg-fixed'>\n    //         <span className='text-[2vw] font-bold relative top-3 pl-[2vw]'>\n    //           Chats\n    //         </span>\n    //         <button type=\"button\" id=\"to_add_group\" className='relative left-[13vw] text-[2vw] top-3 font-bold border-gray-500 rounded-lg border-[0.5vw] border-solid visible' onClick={switchModal}>New Group Chat</button>\n    //         <br />\n    //         <div className='mt-10 flex items-center' id='search_container' style={{ marginLeft: '5%' }}>\n    //           <span className='rounded-l-md bg-gray-200 h-10 pl-3 hover:cursor-pointer' onClick={(e) => clickOnImage(e)}><img src=\"/searchIcon.png\" alt=\"\" style={{ height: '30px', width: '25px' }} id='search_image' className='inline-block h-10 w-3 pt-2' /></span>\n    //           <input type=\"text\" ref={inputRef} placeholder='Search' id=\"search_user\" className=' h-10 rounded-r-md inline bg-gray-200' onChange={(e) => oninput(e)}\n    //             style={{ outline: 'None', width: '90%', paddingLeft: '10%', marginRight: '5%' }} onClick={(e) => clickOnImage(e)} />\n    //         </div>\n    //       </div>\n    //       {searchbool ? (\n    //         <div id='search_panel' className='searchnot overflow-auto' style={{ maxHeight: '480px', overflowY: 'auto' }}>\n    //           {searchusers.length > 0 ? (\n    //             <ul className='text-2xl mt-2  searchnot'>\n    //               <span className='ml-[2.2vw] text-[2vw] searchnot'>Search User</span>\n    //               {searchusers.map((user) => (\n    //                 <li key={user._id} onClick={(e) => startindivimessage(e, user.username)} className='border-8 cursor-pointer mt-[2vh] ml-[2vw] border-gray-700 pl-[1vw] pt-[1vh]  h-[10vh]  w-[36vw]  searchnot text-[2vw]'>{user.username}</li>\n    //               ))}\n    //             </ul>\n    //           ) : <div className='ml-[2.2vw] mt-[0.5vh] text-[2vw] searchnot'>Search User not Found</div>}\n    //         </div>) :\n    //         (<div className='overflow-auto h-[78vh] class=\"[&::-webkit-scrollbar]:hidden [-ms-overflow-style:none] [scrollbar-width:none]'  >\n    //           {intial_user_group.length > 0 && (\n    //             <ul className=''>\n    //               <div >\n    //                 {intial_user_group.map((item, index) => (\n    //                   <li key={index} className='border-8 cursor-pointer mt-[2vh] ml-[2vw] border-gray-700 pl-[1vw] pt-[1vh]   w-[36vw]  searchnot text-[2vw]'>\n    //                     {/* Group Box */}\n    //                     {item.groupname ? (\n    //                       <div className='h-[15vh] relative' onClick={(e) => startgroupmessage(e, item.groupname)} rig>\n    //                         <p className=\"text-[3vh] font-bold text-blue-800\">{item.groupname}</p>\n    //                         <p className=\"text-[2vh] text-gray-600 overflow-hidden text-ellipsis whitespace-nowrap\">Message: {item.chat}</p>\n    //                         <p className=\"text-[2vh] text-gray-600 float-right mr-2\">Date: {item.currentDate}</p>\n    //                         <p className=\"text-[2vh] text-gray-600 float-right absolute bottom-0 right-2\">Time: {item.currentTime}</p>\n    //                       </div>\n    //                     ) : (\n    //                       /* Individual Message Box */\n    //                       <div onClick={(e) => startindivimessage(e, item.sender)} className='h-[15vh] relative'>\n    //                         <p className=\"text-[3vh] font-bold text-green-800\">From: {item.sender}</p>\n    //                         <p className=\"text-[2vh] text-gray-600 overflow-hidden text-ellipsis whitespace-nowrap\">Message: {item.latestMessage}</p>\n    //                         <p className=\"text-[2vh] text-gray-600 float-right mr-2\">Date: {item.currentDate}</p>\n    //                         <p className=\"text-[2vh] text-gray-600 float-right absolute bottom-0  right-2\">Time: {item.currentTime}</p>\n    //                       </div>\n    //                     )}\n    //                   </li>\n    //                 ))}\n    //               </div>\n    //             </ul>\n    //           )}\n    //         </div>)}\n    //     </div>\n    //     {mscreen ? (\n    //       <div className='h-screen text-[2vw] bg-gray-200 flex justify-center items-center' style={{ width: '55%' }}>\n    //         <div>\n    //           Start Messaging\n    //         </div>\n    //       </div>) :\n    //       (<div className='h-screen' style={{ width: '55%' }} >\n    //         <div className='bg-gray-500 pt-1 pl-10 text-[3vw]' style={{ height: '10%' }}>{senderGroupName}</div>\n    //         <div className='bg-gray-300 flex-1 overflow-y-auto' id=\"messageDisplay\" style={{ height: '80%' }} ></div>\n    //         <div className='bg-red-300 ' style={{ height: '10%' }}><input type=\"text\" value={messagetext} onChange={e => messageBox(e)} onClick={e => messageBox(e, false)} name=\"\" id=\"\" className='inline-block ' style={{ width: '75%', paddingLeft: '1%', marginLeft: '10%', height: '70%', marginTop: '1%' }} /> <button style={{ width: '10%', height: '50%' }}><img src=\"/rightarrow.png\" onClick={groupMessages == false ? (e) => sendMessage(e) : (e) => sendGroupmessage(e)} style={{ width: \"50%\", height: '150%', paddingTop: '5%' }} /></button></div>\n    //       </div>)}\n    //   </div>\n    // </>\n    _jsxDEV(_Fragment, {\n      children: [addgroupModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-background fixed top-0 left-0 w-full h-full z-10 bg-black bg-opacity-50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 938,\n        columnNumber: 5\n      }, this), addgroupModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-300 fixed top-10 left-[25vw] h-[80vh] w-[50vw] z-20\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: switchModal,\n          className: \"bg-red-500 hover:bg-red-600 rounded mt-[1vh] mr-[0.5vw] float-right text-[1.5vw] h-[8vh] w-[5vw]\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 944,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"group_name\",\n          name: \"\",\n          placeholder: \"Enter Group Name: \",\n          className: \"relative top-4 left-4 w-[30vw] h-[6vh] p-2 border-black\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 945,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"search_user\",\n          onChange: e => searchusersforgroup(e),\n          name: \"\",\n          placeholder: \"Search User: \",\n          className: \"relative top-7 left-4 w-[30vw] h-[6vh] p-2 border-black\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 946,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white h-[45vh] mt-[7vh] w-[23vw] ml-[1vw] float-left overflow-y-auto class='[&::-webkit-scrollbar]:hidden [-ms-overflow-style:none] [scrollbar-width:none]'\",\n          children: searchusersgroup.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"text-2xl mt-2 searchnot\",\n            children: searchusersgroup.map(user => user.username !== username && /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"border-8 cursor-pointer mt-2 border-gray-700 pl-2 h-[9vh] w-88 searchnot text-[2vw]\",\n              children: [user.username, /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: e => addingroup(e, user),\n                className: \"bg-green-300 hover:bg-green-600 h-[5vh] float-right mt-1 mr-1 rounded w-[6vw]\",\n                children: \"ADD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 956,\n                columnNumber: 19\n              }, this)]\n            }, user._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 954,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 951,\n            columnNumber: 11\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"text-[1.8vw] mt-2 ml-7 searchnot\",\n            children: \" No Users found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 962,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 949,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white h-[45vh] mt-[7vh] w-[23vw] mr-[1vw] float-right\",\n          children: usersingroups.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"text-2xl mt-2 searchnot\",\n            children: usersingroups.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"border-8 cursor-pointer mt-2 border-gray-700 pl-2 h-[9vh] w-88 searchnot text-[2vw]\",\n              children: [user.username, /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: e => removeingroup(e, user),\n                className: \"bg-red-500 hover:bg-red-600 h-[5vh] float-right mt-1 mr-1 rounded w-[8vw]\",\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 973,\n                columnNumber: 17\n              }, this)]\n            }, user._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 971,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 969,\n            columnNumber: 11\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"text-[1.8vw] mt-2 ml-7 searchnot\",\n            children: \" No Users is added\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 978,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 967,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"display_res\",\n          className: \"text-red-500 h-[5vh] mt-[54vh] mx-auto w-[30vw] text-center\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 983,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-green-500 hover:bg-green-600 rounded ml-[20vw] mt-[1vh] text-[1.5vw] h-[6vh] w-[8vw]\",\n          onClick: e => submitNewGroup(e),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 986,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 943,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row h-screen\",\n        onClick: handleContainerClick,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-400\",\n          style: {\n            width: '5%',\n            height: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 993,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '40%',\n            height: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-fixed\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-[2vw] font-bold relative top-3 pl-[2vw]\",\n              children: \"Chats\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 998,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              id: \"to_add_group\",\n              className: \"relative left-[13vw] text-[2vw] top-3 font-bold border-gray-500 rounded-lg border-[0.5vw] border-solid visible\",\n              onClick: switchModal,\n              children: \"New Group Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1001,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1009,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-10 flex items-center\",\n              id: \"search_container\",\n              style: {\n                marginLeft: '5%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"rounded-l-md bg-gray-200 h-10 pl-3 hover:cursor-pointer\",\n                onClick: e => clickOnImage(e),\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"/searchIcon.png\",\n                  alt: \"\",\n                  style: {\n                    height: '30px',\n                    width: '25px'\n                  },\n                  id: \"search_image\",\n                  className: \"inline-block h-10 w-3 pt-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1014,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1013,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                ref: inputRef,\n                placeholder: \"Search\",\n                id: \"search_user\",\n                className: \"h-10 rounded-r-md inline bg-gray-200\",\n                onChange: e => oninput(e),\n                style: {\n                  outline: 'None',\n                  width: '90%',\n                  paddingLeft: '10%',\n                  marginRight: '5%'\n                },\n                onClick: e => clickOnImage(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1016,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1012,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 997,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 996,\n          columnNumber: 5\n        }, this), mscreen ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-screen text-[2vw] bg-gray-200 flex justify-center items-center\",\n          style: {\n            width: '55%'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Start Messaging\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1034,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1033,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-screen\",\n          style: {\n            width: '55%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-500 pt-1 pl-10 text-[3vw]\",\n            style: {\n              height: '10%'\n            },\n            children: senderGroupName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1040,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-300 flex-1 overflow-y-auto\",\n            id: \"messageDisplay\",\n            style: {\n              height: '80%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1041,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-red-300\",\n            style: {\n              height: '10%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: messagetext,\n              onChange: e => messageBox(e),\n              onClick: e => messageBox(e, false),\n              className: \"inline-block\",\n              style: {\n                width: '75%',\n                paddingLeft: '1%',\n                marginLeft: '10%',\n                height: '70%',\n                marginTop: '1%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1043,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                width: '10%',\n                height: '50%'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/rightarrow.png\",\n                onClick: groupMessages === false ? e => sendMessage(e) : e => sendGroupmessage(e),\n                style: {\n                  width: \"50%\",\n                  height: '150%',\n                  paddingTop: '5%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1052,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1051,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1042,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1039,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 991,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true)\n  );\n}\n_s(Homescreen, \"VSTqRQ5a9+hfRvx/kUeAJPRhu+Q=\", false, function () {\n  return [useLocation];\n});\n_c = Homescreen;\nvar _c;\n$RefreshReg$(_c, \"Homescreen\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","io","require","socket","connect","Homescreen","_s","location","inputRef","groupMessages","setGroupMessage","username","password","state","searchusersgroup","setSearchUsersgroup","searchusers","setSearchsUsers","searchgroupMessages","setsearchGroupMessages","searchbool","setSearchbool","mscreen","setMscreen","senderGroupName","setSenderGroupName","currsendmessage","setCurrsendmessage","groupmessage","setGroupmessage","addgroupModal","setAddgroupModal","messagetext","setmessagetext","intial_user_group","setIntial_user_group","usersingroups","setUsersingroups","groupmember","setGroupmember","switchModal","to_add_group","document","getElementById","classList","remove","add","clickOnImage","event","searchimage","a","attributes","nodeValue","fetchintialusergroup","current","focus","stopPropagation","handleContainerClick","target","flag","contains","oninput","e","value","length","response","fetch","method","body","JSON","stringify","headers","data","json","data_users","users","data_group","handleReceiveMessage","currentDate","currentTime","sender","receiver","textToSend","loadindimess","handleGroupReceiveMessage","groupreceivename","chat","loadgroupmess","on","off","startindivimessage","u2","t1","emit","identifier1","identifier2","startgroupmessage","groupname","messageDisplayContainer","innerHTML","result","lastDate","forEach","currentEle","messageReceiver","dateHeader","createElement","className","dateContainer","innerText","append","appendChild","messageBubble","style","marginBottom","messageWrapper","receiverText","messageText","messageDateTime","scrollTop","scrollHeight","sort","b","dayA","monthA","yearA","split","map","Number","dayB","monthB","yearB","timeA","timeB","whichuser","messageTime","messageBox","d","i","indexOf","m1","substring","sendGroupmessage","now","Date","day","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","sendMessage","identifier","response2","result2","submitNewGroup","group_name","val","display_res","textContent","res","res2","user","push","setTimeout","searchusersforgroup","addingroup","preventDefault","alreadyAdded","some","element","_id","prev","removeingroup","filter","res1","data1","data2","processedData2","Promise","all","group","_data3$","_data3$2","_data3$3","res3","data3","latestMessage","n1currentDate","n1currentTime","tresult","temp","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","id","name","placeholder","onChange","width","height","marginLeft","src","alt","ref","outline","paddingLeft","marginRight","marginTop","paddingTop","_c","$RefreshReg$"],"sources":["C:/Users/Siddhant/OneDrive/Something/chat_app/src/Homescreen.js"],"sourcesContent":["import { React, useState, useRef, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nconst { io } = require(\"socket.io-client\");\r\n\r\n\r\nconst socket = io.connect(\"http://localhost:5100\")\r\n\r\nexport default function Homescreen() {\r\n  const location = useLocation();\r\n\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  const [groupMessages, setGroupMessage] = useState(false);\r\n\r\n  const { username, password } = location.state || {};\r\n\r\n  const [searchusersgroup, setSearchUsersgroup] = useState([]);\r\n\r\n  const [searchusers, setSearchsUsers] = useState([]);\r\n  const [searchgroupMessages, setsearchGroupMessages] = useState([]);\r\n\r\n  const [searchbool, setSearchbool] = useState(false);\r\n\r\n  const [mscreen, setMscreen] = useState(true);\r\n\r\n  const [senderGroupName, setSenderGroupName] = useState(\"\");\r\n\r\n  const [currsendmessage, setCurrsendmessage] = useState(\"\");\r\n\r\n\r\n  const [groupmessage, setGroupmessage] = useState(\"\");\r\n\r\n  const [addgroupModal, setAddgroupModal] = useState(false);\r\n\r\n\r\n  const [messagetext, setmessagetext] = useState(\"Type message here\");\r\n\r\n  const [intial_user_group, setIntial_user_group] = useState([]);\r\n\r\n  const [usersingroups, setUsersingroups] = useState([])\r\n\r\n  const [groupmember, setGroupmember] = useState([]);\r\n\r\n\r\n\r\n  const switchModal = () => {\r\n    setAddgroupModal(!addgroupModal);\r\n    let to_add_group = document.getElementById(\"to_add_group\");\r\n    if (addgroupModal) {\r\n\r\n      to_add_group.classList.remove(\"invisible\");\r\n      to_add_group.classList.add(\"visible\");\r\n    } else {\r\n\r\n      to_add_group.classList.remove(\"visible\");\r\n      to_add_group.classList.add(\"invisible\");\r\n    }\r\n  }\r\n\r\n\r\n  const clickOnImage = (event) => {\r\n    const searchimage = document.getElementById('search_image');\r\n    let a = searchimage.attributes['src']\r\n    if (a.nodeValue == '/leftArrow.png') {\r\n      fetchintialusergroup();\r\n      a.nodeValue = '/searchIcon.png';\r\n      setSearchbool(false);\r\n      setMscreen(true);\r\n      setmessagetext(\"Type message here\");\r\n    }\r\n    else {\r\n      a.nodeValue = '/leftArrow.png';\r\n      setSearchbool(true);\r\n\r\n      if (inputRef.current) {\r\n        inputRef.current.focus();\r\n      }\r\n\r\n    }\r\n    event.stopPropagation();\r\n\r\n  }\r\n\r\n  const handleContainerClick = (event) => {\r\n    const target = event.target;\r\n    const searchimage = document.getElementById('search_image');\r\n    let a = searchimage.attributes['src']\r\n    const flag = target.classList.contains('searchnot');\r\n  }\r\n\r\n  const oninput = async (e) => {\r\n    const value = e.target.value;\r\n    setSearchbool(true);\r\n    if (value.length > 0) {\r\n      const response = await fetch('http://localhost:5010/tofetch', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ \"username\": value }),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n      const data = await response.json();\r\n      const data_users = data.users\r\n      const data_group = data.groupMessages;\r\n\r\n      setSearchsUsers(data_users || []);\r\n      setsearchGroupMessages(data_group || []);\r\n    }\r\n    else {\r\n      setSearchsUsers([]);\r\n      setsearchGroupMessages([]);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const handleReceiveMessage = (data) => {\r\n\r\n      const currentDate = data.currentDate;\r\n      const currentTime = data.currentTime;\r\n      const sender = data.sender;\r\n      const receiver = data.receiver;\r\n      const textToSend = data.textToSend;\r\n\r\n      if (currsendmessage == \"\") {\r\n        setCurrsendmessage({\r\n          \"currentDate\": currentDate,\r\n          \"currentTime\": currentTime,\r\n          \"sender\": sender,\r\n          \"receiver\": receiver,\r\n          \"textToSend\": textToSend\r\n        });\r\n\r\n        fetchintialusergroup();\r\n        if (senderGroupName == receiver) {\r\n\r\n          loadindimess(sender, receiver);\r\n        }\r\n\r\n      }\r\n      else if (currsendmessage[\"currentTime\"] != currentTime) {\r\n        setCurrsendmessage({\r\n          \"currentDate\": currentDate,\r\n          \"currentTime\": currentTime,\r\n          \"sender\": sender,\r\n          \"receiver\": receiver,\r\n          \"textToSend\": textToSend\r\n        });\r\n        fetchintialusergroup();\r\n        if (senderGroupName == receiver) {\r\n\r\n          loadindimess(sender, receiver);\r\n        }\r\n      }\r\n\r\n\r\n\r\n    };\r\n\r\n    const handleGroupReceiveMessage = (data) => {\r\n\r\n      const currentDate = data.currentDate;\r\n      const currentTime = data.currentTime;\r\n      const groupreceivename = data.sender;\r\n      const receiver = data.receiver;\r\n      const chat = data.textToSend;\r\n\r\n      if (currsendmessage == \"\") {\r\n        setGroupMessage({\r\n          \"currentDate\": currentDate,\r\n          \"currentTime\": currentTime,\r\n          \"groupname\": groupreceivename,\r\n          \"receiver\": receiver,\r\n          \"chat\": chat\r\n        })\r\n\r\n        fetchintialusergroup();\r\n        // console.log(\"If \",receiver);\r\n        // if (senderGroupName == groupreceivename) {\r\n        loadgroupmess(receiver, senderGroupName);\r\n        // }\r\n\r\n      }\r\n      else if (groupmessage[\"currentTime\"] != currentTime) {\r\n        setGroupMessage({\r\n          \"currentDate\": currentDate,\r\n          \"currentTime\": currentTime,\r\n          \"groupname\": groupreceivename,\r\n          \"receiver\": receiver,\r\n          \"chat\": chat\r\n        })\r\n        fetchintialusergroup();\r\n        // if (senderGroupName == groupreceivename) {\r\n        loadgroupmess(receiver, senderGroupName);\r\n        // }\r\n      }\r\n\r\n\r\n\r\n    };\r\n\r\n    socket.on(\"receive_message\", handleReceiveMessage);\r\n\r\n\r\n    socket.on(\"receive_group_message\", handleGroupReceiveMessage);\r\n    return () => {\r\n      socket.off(\"receive_message\", handleReceiveMessage);\r\n    };\r\n  });\r\n\r\n\r\n\r\n\r\n\r\n  const startindivimessage = async (e, u2) => {\r\n    setMscreen(false);\r\n    const receiver = username;\r\n    const sender = u2;\r\n    setGroupMessage(false);\r\n    if (sender == receiver) {\r\n      const t1 = receiver + ' (Self)';\r\n      setSenderGroupName(t1);\r\n      socket.emit(\"join_room\", t1);\r\n    }\r\n    else {\r\n      setSenderGroupName(sender);\r\n      const identifier1 = receiver + '#' + sender;\r\n      const identifier2 = sender + '#' + receiver;\r\n      socket.emit(\"join_room\", identifier1);\r\n      socket.emit(\"join_room\", identifier2);\r\n    }\r\n    setmessagetext(\"Type message here\");\r\n    loadindimess(receiver, sender);\r\n  }\r\n\r\n  const startgroupmessage = async (e, groupname) => {\r\n    setMscreen(false);\r\n    setGroupMessage(true);\r\n    setmessagetext(\"Type message here\");\r\n    const receiver = username;\r\n    socket.emit(\"join_room_group\", groupname);\r\n    setSenderGroupName(groupname);\r\n    loadgroupmess(receiver, groupname);\r\n\r\n  }\r\n  const loadgroupmess = async (receiver, groupname) => {\r\n    const response = await fetch('http://localhost:5200/loadgroupmessage', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ \"groupname\": groupname }),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    const messageDisplayContainer = document.getElementById(\"messageDisplay\");\r\n    if (messageDisplayContainer != null) {\r\n      messageDisplayContainer.innerHTML = \"\";\r\n    }\r\n\r\n    const result = await response.json();\r\n\r\n    if (result.length === 0) {\r\n      messageDisplayContainer.innerHTML = \"\";\r\n      return;\r\n    }\r\n    let lastDate=\"28/12/2024\";\r\n\r\n    result.forEach((currentEle) => {\r\n      const { receiver: messageReceiver, chat, currentDate, currentTime } = currentEle;\r\n\r\n\r\n      if (currentDate !== lastDate) {\r\n        lastDate = currentDate;\r\n        const dateHeader = document.createElement(\"h1\");\r\n        dateHeader.className = \"flex justify-center items-center h-12\";\r\n    \r\n        const dateContainer = document.createElement(\"span\");\r\n        dateContainer.className = \"bg-red-700 border border-yellow-700 text-white px-4 py-2 rounded-md\";\r\n        dateContainer.innerText = currentDate;\r\n    \r\n        dateHeader.append(dateContainer);\r\n        messageDisplayContainer.appendChild(dateHeader);\r\n      }\r\n\r\n      // Create a message bubble\r\n      const messageBubble = document.createElement(\"div\");\r\n      messageBubble.className = `p-3 rounded-lg m-2 max-w-xs ${username === messageReceiver\r\n        ? \"bg-blue-500 text-white self-end ml-auto\" // Right side for the current user\r\n        : \"bg-gray-200 text-black self-start mr-auto\" // Left side for others\r\n        }`;\r\n\r\n      messageBubble.style.marginBottom = \"1rem\"; // Add spacing between messages\r\n\r\n      // Create a wrapper to hold message text, receiver, date, and time\r\n      const messageWrapper = document.createElement(\"div\");\r\n      messageWrapper.className = \"flex flex-col h-auto\"; // Stack elements vertically\r\n\r\n      // Receiver name\r\n      const receiverText = document.createElement(\"p\");\r\n      receiverText.className = \"text-[1.1vw] font-semibold mb-1 text-gray-700 break-words\"; // Ensure wrapping\r\n      receiverText.innerText = `From: ${messageReceiver}`;\r\n\r\n      // Message text\r\n      const messageText = document.createElement(\"p\");\r\n      messageText.className = \"text-[1.3vw] mb-1 break-words\"; // Ensure wrapping for long messages\r\n      messageText.innerText = chat;\r\n\r\n      // Message date and time\r\n      const messageDateTime = document.createElement(\"span\");\r\n      messageDateTime.className = \"text-[1vw] text-gray-600 self-end break-words\"; // Ensure wrapping\r\n      messageDateTime.innerHTML = `${currentDate}<br>${currentTime}`; // Display date and time on separate lines\r\n\r\n      // Append receiver, text, and date-time to the wrapper\r\n      messageWrapper.appendChild(receiverText);\r\n      messageWrapper.appendChild(messageText);\r\n      messageWrapper.appendChild(messageDateTime);\r\n\r\n      // Append the wrapper to the message bubble\r\n      messageBubble.appendChild(messageWrapper);\r\n\r\n      // Append the bubble to the message container\r\n      messageDisplayContainer.appendChild(messageBubble);\r\n    });\r\n\r\n    messageDisplayContainer.scrollTop = messageDisplayContainer.scrollHeight;\r\n\r\n  };\r\n\r\n  const loadindimess = async (receiver, sender) => {\r\n\r\n\r\n    const response = await fetch('http://localhost:5100/tofetchindichat', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ \"receiver\": receiver, \"sender\": sender }),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    let messageDisplayContainer = document.getElementById(\"messageDisplay\");\r\n    if (messageDisplayContainer != null)\r\n      messageDisplayContainer.innerHTML = \"\";\r\n    const result = await response.json();\r\n    if (result.length == 0) {\r\n\r\n      messageDisplayContainer.innerHTML = \"\";\r\n      return;\r\n    }\r\n\r\n    result.sort((a, b) => {\r\n      // Parse dates (currentDate is in DD/MM/YYYY format)\r\n      const [dayA, monthA, yearA] = a.currentDate.split('/').map(Number);\r\n      const [dayB, monthB, yearB] = b.currentDate.split('/').map(Number);\r\n\r\n      // Compare years, months, days first\r\n      if (yearA !== yearB) return yearA - yearB;\r\n      if (monthA !== monthB) return monthA - monthB;\r\n      if (dayA !== dayB) return dayA - dayB;\r\n\r\n      // If the dates are the same, compare times\r\n      const timeA = a.currentTime.split(':').map(Number); // [hours, minutes, seconds]\r\n      const timeB = b.currentTime.split(':').map(Number);\r\n\r\n      // Compare hours, minutes, seconds\r\n      if (timeA[0] !== timeB[0]) return timeA[0] - timeB[0];\r\n      if (timeA[1] !== timeB[1]) return timeA[1] - timeB[1];\r\n      return timeA[2] - timeB[2];\r\n    });\r\n\r\n    let lastDate = \"10/12/2024\";\r\n\r\n    result.forEach((currentEle) => {\r\n      const { chat, currentDate, currentTime, receiver, sender, whichuser } = currentEle;\r\n\r\n      // Add a date header if the date changes\r\n      if (currentDate !== lastDate) {\r\n        lastDate = currentDate;\r\n        const dateHeader = document.createElement(\"h1\");\r\n        dateHeader.className = \"flex justify-center items-center h-12\";\r\n\r\n        const dateContainer = document.createElement(\"span\");\r\n        dateContainer.className = \"bg-red-700 border border-yellow-700 text-white px-4 py-2 rounded-md\";\r\n        dateContainer.innerText = currentDate;\r\n\r\n        dateHeader.append(dateContainer);\r\n        messageDisplayContainer.appendChild(dateHeader);\r\n      }\r\n\r\n      // Create a message bubble\r\n      const messageBubble = document.createElement(\"div\");\r\n      messageBubble.className = `p-3 rounded-lg m-2 max-w-xs ${whichuser === receiver\r\n        ? \"bg-blue-500 text-white self-end ml-auto\"\r\n        : \"bg-gray-200 text-black self-start mr-auto\"\r\n        }`;\r\n\r\n      messageBubble.style.marginBottom = \"1rem\";\r\n\r\n      // Create a wrapper to hold both the message and the time\r\n      const messageWrapper = document.createElement(\"div\");\r\n      messageWrapper.className = \"flex flex-col\"; // Removed fixed height to allow dynamic sizing\r\n\r\n      // Message text\r\n      const messageText = document.createElement(\"p\");\r\n      messageText.className = \"text-[1.3vw] mb-1 break-words\"; // Use 'break-words' to wrap text on overflow\r\n      messageText.innerText = chat;\r\n\r\n      // Message time\r\n      const messageTime = document.createElement(\"span\");\r\n      messageTime.className = \"text-[1vw] text-gray-600 self-end\";\r\n      messageTime.innerText = currentTime;\r\n\r\n      // Append text and time to the wrapper\r\n      messageWrapper.appendChild(messageText);\r\n      messageWrapper.appendChild(messageTime);\r\n\r\n      // Append the wrapper to the message bubble\r\n      messageBubble.appendChild(messageWrapper);\r\n\r\n      // Append bubble to container\r\n      messageDisplayContainer.appendChild(messageBubble);\r\n    });\r\n\r\n    messageDisplayContainer.scrollTop = messageDisplayContainer.scrollHeight;\r\n\r\n\r\n  }\r\n    ;\r\n\r\n  // When click on send message arrow\r\n  const messageBox = async (e, flag = true) => {\r\n    e.stopPropagation();\r\n    if (flag == true) {\r\n      if (messagetext == \"Type message here\") {\r\n        const d = e.target.value;\r\n        const i = d.indexOf('Type message here')\r\n        const m1 = d.substring(i + ('Type message here'.length));\r\n        setmessagetext(m1);\r\n      }\r\n      else if (e.target.value && e.target.value.length > 0) {\r\n\r\n        setmessagetext(e.target.value);\r\n      }\r\n      else {\r\n\r\n        setmessagetext(\"Type message here\");\r\n      }\r\n    }\r\n    else {\r\n      if (messagetext == \"Type message here\") {\r\n        e.target.value = \"\";\r\n        setmessagetext(e.target.value);\r\n      }\r\n    }\r\n\r\n  }\r\n  const sendGroupmessage = async (e) => {\r\n    const chat = messagetext;\r\n    const groupname = senderGroupName;\r\n\r\n    const receiver = username;\r\n\r\n    const now = new Date(); // Create a new Date object with the current date and time\r\n\r\n    // Get the date components\r\n    const day = now.getDate(); // Day of the month (1-31)\r\n    const month = now.getMonth() + 1; // Month (0-11), so add 1 for 1-12\r\n    const year = now.getFullYear(); // Full year (e.g., 2024)\r\n\r\n    const hours = now.getHours(); // Hours (0-23)\r\n    const minutes = now.getMinutes(); // Minutes (0-59)\r\n    const seconds = now.getSeconds(); // Seconds (0-59)\r\n\r\n\r\n    const currentDate = `${day}/${month}/${year}`;\r\n    const currentTime = `${hours}:${minutes}:${seconds}`;\r\n\r\n    setmessagetext(\"Type message here\");\r\n    const response = await fetch('http://localhost:5200/savegroupmessage', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        \"receiver\": receiver,\r\n        \"groupname\": groupname,\r\n        \"chat\": chat,\r\n        \"currentDate\": currentDate,\r\n        \"currentTime\": currentTime\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    socket.emit('send_message_group', { receiver, groupname, chat, currentDate, currentTime });\r\n\r\n    setSearchbool(false);\r\n    fetchintialusergroup();\r\n    loadgroupmess(receiver, senderGroupName);\r\n  }\r\n\r\n  const sendMessage = async (e) => {\r\n    const textToSend = messagetext;\r\n    const receiver = username;\r\n    const sender = senderGroupName;\r\n\r\n    if (textToSend.length == 0) {\r\n      setmessagetext(\"Type message here\");\r\n      return;\r\n    }\r\n    if (groupMessages == false) {\r\n      const identifier = receiver + ' (Self)';\r\n      if (senderGroupName == identifier) {\r\n\r\n        // Coming soon\r\n        // const identifier1 = receiver + '#' + sender;\r\n        // const identifier2 = sender + '#' + receiver;\r\n        const now = new Date(); // Create a new Date object with the current date and time\r\n\r\n        // Get the date components\r\n        const day = now.getDate(); // Day of the month (1-31)\r\n        const month = now.getMonth() + 1; // Month (0-11), so add 1 for 1-12\r\n        const year = now.getFullYear(); // Full year (e.g., 2024)\r\n\r\n        const hours = now.getHours(); // Hours (0-23)\r\n        const minutes = now.getMinutes(); // Minutes (0-59)\r\n        const seconds = now.getSeconds(); // Seconds (0-59)\r\n\r\n\r\n        const currentDate = `${day}/${month}/${year}`;\r\n        const currentTime = `${hours}:${minutes}:${seconds}`;\r\n\r\n        setmessagetext(\"Type message here\");\r\n        const response = await fetch('http://localhost:5100/saveindichat', {\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            \"receiver\": receiver,\r\n            \"sender\": receiver,\r\n            \"whichuser\": receiver,\r\n            \"textToSend\": textToSend,\r\n            \"currentDate\": currentDate,\r\n            \"currentTime\": currentTime\r\n          }),\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n        setSearchbool(false);\r\n        fetchintialusergroup();\r\n\r\n        loadindimess(receiver, receiver);\r\n\r\n\r\n\r\n      }\r\n      else {\r\n        const identifier1 = receiver + '#' + sender;\r\n        const identifier2 = sender + '#' + receiver;\r\n        const now = new Date(); // Create a new Date object with the current date and time\r\n\r\n        // Get the date components\r\n        const day = now.getDate(); // Day of the month (1-31)\r\n        const month = now.getMonth() + 1; // Month (0-11), so add 1 for 1-12\r\n        const year = now.getFullYear(); // Full year (e.g., 2024)\r\n\r\n        const hours = now.getHours(); // Hours (0-23)\r\n        const minutes = now.getMinutes(); // Minutes (0-59)\r\n        const seconds = now.getSeconds(); // Seconds (0-59)\r\n\r\n\r\n        const currentDate = `${day}/${month}/${year}`;\r\n        const currentTime = `${hours}:${minutes}:${seconds}`;\r\n\r\n        setmessagetext(\"Type message here\");\r\n        const response = await fetch('http://localhost:5100/saveindichat', {\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            \"receiver\": receiver,\r\n            \"sender\": sender,\r\n            \"whichuser\": receiver,\r\n            \"textToSend\": textToSend,\r\n            \"currentDate\": currentDate,\r\n            \"currentTime\": currentTime\r\n          }),\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n        const result = await response.json();\r\n        const response2 = await fetch('http://localhost:5100/saveindichat', {\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            \"receiver\": sender,\r\n            \"sender\": receiver,\r\n            \"whichuser\": receiver,\r\n            \"textToSend\": textToSend,\r\n            \"currentDate\": currentDate,\r\n            \"currentTime\": currentTime\r\n          }),\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n        const result2 = await response2.json();\r\n        socket.emit('send_message', { identifier1, identifier2, receiver, sender, textToSend, currentDate, currentTime });\r\n\r\n        setSearchbool(false);\r\n        fetchintialusergroup();\r\n        loadindimess(receiver, senderGroupName);\r\n\r\n      }\r\n    }\r\n    else {\r\n      //For group chat coming soon\r\n    }\r\n\r\n  }\r\n  const submitNewGroup = async () => {\r\n    let group_name = document.getElementById(\"group_name\");\r\n    const val = group_name.value;\r\n    if (val.length == 0) {\r\n      let display_res = document.getElementById(\"display_res\");\r\n      display_res.textContent = \"Enter Group Name\";\r\n      return;\r\n    }\r\n    else {\r\n      let display_res = document.getElementById(\"display_res\");\r\n      display_res.textContent = \"\";\r\n    }\r\n\r\n    if (usersingroups.length <= 1) {\r\n      let display_res = document.getElementById(\"display_res\");\r\n      display_res.textContent = \"Atleast 2 users are required\";\r\n      return;\r\n    }\r\n    else {\r\n      let display_res = document.getElementById(\"display_res\");\r\n      display_res.textContent = \"\";\r\n    }\r\n\r\n    const response = await fetch('http://localhost:4000/signup', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ \"username\": val }),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    const data = await response.json();\r\n    const length = data.length;\r\n    if (length == 1) {\r\n      let display_res = document.getElementById(\"display_res\");\r\n      display_res.textContent = \"Group name matches with username\";\r\n      return;\r\n    }\r\n\r\n\r\n\r\n    const res = await fetch(\"http://localhost:5200/checkgroupexist\", {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        \"groupname\": val\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    const res2 = await res.json();\r\n    if (res2.flag == \"true\") {\r\n      let display_res = document.getElementById(\"display_res\");\r\n      display_res.textContent = \"Group name already exists\";\r\n      return;\r\n    }\r\n    else {\r\n      let display_res = document.getElementById(\"display_res\");\r\n      display_res.textContent = \"\";\r\n    }\r\n    let groupmember = [];\r\n    groupmember = usersingroups.map((user) => user.username);\r\n    groupmember.push(username);\r\n    const now = new Date(); // Create a new Date object with the current date and time\r\n\r\n    // Get the date components\r\n    const day = now.getDate(); // Day of the month (1-31)\r\n    const month = now.getMonth() + 1; // Month (0-11), so add 1 for 1-12\r\n    const year = now.getFullYear(); // Full year (e.g., 2024)\r\n\r\n    const hours = now.getHours(); // Hours (0-23)\r\n    const minutes = now.getMinutes(); // Minutes (0-59)\r\n    const seconds = now.getSeconds(); // Seconds (0-59)\r\n\r\n    const currentDate = `${day}/${month}/${year}`;\r\n    const currentTime = `${hours}:${minutes}:${seconds}`;\r\n    const response2 = await fetch('http://localhost:5200/savegroupinfo', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        \"receiver\": username,\r\n        \"groupname\": val,\r\n        \"groupmember\": groupmember,\r\n        \"currentDate\": currentDate,\r\n        \"currentTime\": currentTime\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    let display_res = document.getElementById(\"display_res\");\r\n    display_res.textContent = \"Group created successfully\";\r\n    setTimeout(() => {\r\n      switchModal();\r\n      setSearchUsersgroup([]);\r\n      setUsersingroups([]);\r\n    }, 2000);\r\n\r\n  }\r\n\r\n  const searchusersforgroup = async (e) => {\r\n    const sender = e.target.value;\r\n\r\n    if (sender.length > 0) {\r\n      const response = await fetch('http://localhost:5010/tofetch', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ \"username\": sender }),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n      const data = await response.json();\r\n      const data_users = data.users\r\n      const data_group = data.groupMessages;\r\n\r\n      setSearchUsersgroup(data_users || []);\r\n\r\n    }\r\n    else {\r\n      setSearchUsersgroup([]);\r\n    }\r\n  }\r\n\r\n  const addingroup = (e, user) => {\r\n    e.preventDefault();\r\n    const alreadyAdded = usersingroups.some((element) => element._id === user._id);\r\n    if (alreadyAdded) return;\r\n\r\n    setUsersingroups((prev) => [...prev, user]);\r\n\r\n  }\r\n  const removeingroup = (e, user) => {\r\n    e.preventDefault();\r\n    setUsersingroups((prev) => prev.filter((element) => element._id !== user._id))\r\n  }\r\n  const fetchintialusergroup = async () => {\r\n    const res1 = await fetch('http://localhost:5100/intialindires', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ receiver: username }),\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const data1 = await res1.json();\r\n\r\n    const res2 = await fetch('http://localhost:5200/intialresultgroup', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ receiver: username }),\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const data2 = await res2.json();\r\n\r\n\r\n\r\n\r\n\r\n    // Process data2 to include a default message if none exists\r\n    const processedData2 = await Promise.all(\r\n      data2.map(async (group) => {\r\n\r\n        const { groupname, currentDate, currentTime, groupmember } = group;\r\n    \r\n        // Fetch the latest message for the group\r\n        const res3 = await fetch('http://localhost:5200/intialgroupres', {\r\n          method: 'POST',\r\n          body: JSON.stringify({ groupname }),\r\n          headers: { 'Content-Type': 'application/json' }\r\n        });\r\n        const data3 = await res3.json();\r\n    \r\n        // Extract the latest message or set default chat\r\n        const latestMessage = data3[0]?.latestMessage || \"Start your messaging\";\r\n        const n1currentDate=data3[0]?.currentDate || currentDate;\r\n        const n1currentTime=data3[0]?.currentTime || currentTime;\r\n    \r\n        return {\r\n          groupname,\r\n          groupmember,\r\n          \"currentDate\":n1currentDate,\r\n          \"currentTime\":n1currentTime,\r\n          chat: latestMessage\r\n        };\r\n      })\r\n    );\r\n    \r\n\r\n\r\n    // Combine results\r\n    let tresult = [...data1, ...processedData2];\r\n\r\n\r\n    let temp = tresult.sort((b, a) => {\r\n      // Parse dates (currentDate is in DD/MM/YYYY format)\r\n      const [dayA, monthA, yearA] = a.currentDate.split('/').map(Number);\r\n      const [dayB, monthB, yearB] = b.currentDate.split('/').map(Number);\r\n\r\n      // Compare years, months, days first\r\n      if (yearA !== yearB) return yearA - yearB;\r\n      if (monthA !== monthB) return monthA - monthB;\r\n      if (dayA !== dayB) return dayA - dayB;\r\n\r\n      // If the dates are the same, compare times\r\n      const timeA = a.currentTime.split(':').map(Number); // [hours, minutes, seconds]\r\n      const timeB = b.currentTime.split(':').map(Number);\r\n\r\n      // Compare hours, minutes, seconds\r\n      if (timeA[0] !== timeB[0]) return timeA[0] - timeB[0];\r\n      if (timeA[1] !== timeB[1]) return timeA[1] - timeB[1];\r\n      return timeA[2] - timeB[2];\r\n    });\r\n\r\n    // Update the state with sorted entries\r\n    setIntial_user_group([...temp]); // Create a new array to ensure immutability\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchintialusergroup();\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    // <>\r\n    //   {addgroupModal &&\r\n    //     <div className='bg-gray-300 fixed top-10 left-[25vw] h-[80vh] w-[50vw] z-20 '>\r\n    //       <button onClick={switchModal} className='bg-red-500  hover:bg-red-600 rounded mt-[1vh] mr-[0.5vw] float-right text-[1.5vw] h-[8vh] w-[5vw]' >Close</button>\r\n    //       <input type=\"text\" id=\"group_name\" name=\"\" placeholder='Enter Group Name: ' className='relative top-4 left-4 w-[30vw] h-[6vh] p-2 border-black' />\r\n    //       <input type=\"text\" id=\"search_user\" onChange={e => searchusersforgroup(e)} name=\"\" placeholder='Search User: ' className='relative top-7 left-4 w-[30vw] h-[6vh] p-2 border-black' />\r\n    //       <div className='bg-white h-[45vh] mt-[7vh] w-[23vw] ml-[1vw] float-left overflow-y-auto class=\"[&::-webkit-scrollbar]:hidden [-ms-overflow-style:none] [scrollbar-width:none]'>\r\n    //         {searchusersgroup.length > 0 ? (\r\n    //           <ul className='text-2xl mt-2  searchnot'>\r\n    //             {searchusersgroup.map((user) => (user.username != username &&\r\n    //               <li key={user._id} style={{ width: '90%', marginLeft: '5%' }} className='border-8 cursor-pointer mt-2 border-gray-700 pl-2  h-[9vh]  w-88  searchnot text-[2vw]'>{user.username} <button type=\"button\" onClick={e => addingroup(e, user)} className='bg-green-300 hover:bg-green-600 h-[5vh] float-right mt-1 mr-1 rounded w-[6vw]'>ADD</button> </li>\r\n    //             ))}\r\n    //           </ul>\r\n    //         ) : (<ul className='text-[1.8vw] mt-2 ml-7 searchnot'> No Users found</ul>)}\r\n    //       </div>\r\n    //       <div className='bg-white h-[45vh] mt-[7vh] w-[23vw] mr-[1vw] float-right'>\r\n    //         {usersingroups.length > 0 ? (\r\n    //           <ul className='text-2xl mt-2  searchnot'>\r\n    //             {usersingroups.map((user) => (\r\n    //               <li key={user._id} style={{ width: '90%', marginLeft: '5%' }} className='border-8 cursor-pointer mt-2 border-gray-700 pl-2  h-[9vh]  w-88  searchnot text-[2vw]'>{user.username} <button type=\"button\" onClick={e => removeingroup(e, user)} className='bg-red-500 hover:bg-red-600 h-[5vh] float-right mt-1 mr-1 rounded w-[8vw]'>Remove</button> </li>\r\n    //             ))}\r\n    //           </ul>\r\n    //         ) : (<ul className='text-[1.8vw] mt-2 ml-7 searchnot'> No Users is added</ul>)}\r\n    //       </div>\r\n    //       <div id='display_res' className='text-red-500 h-[5vh] mt-[54vh] mx-auto w-[30vw] text-center'></div>\r\n    //       <button className='bg-green-500  hover:bg-green-600 rounded ml-[20vw]  mt-[1vh] text-[1.5vw] h-[6vh] w-[8vw]' onClick={e => submitNewGroup(e)} >Submit</button>\r\n    //     </div>}\r\n    //   <div className='flex flex-row h-screen' onClick={handleContainerClick} >\r\n    //     <div className=' bg-gray-400' style={{ width: '5%', height: '100%' }}>\r\n\r\n    //     </div>\r\n    //     <div style={{ width: '40%', height: \"100%\" }}>\r\n    //       <div className='bg-fixed'>\r\n    //         <span className='text-[2vw] font-bold relative top-3 pl-[2vw]'>\r\n    //           Chats\r\n    //         </span>\r\n\r\n    //         <button type=\"button\" id=\"to_add_group\" className='relative left-[13vw] text-[2vw] top-3 font-bold border-gray-500 rounded-lg border-[0.5vw] border-solid visible' onClick={switchModal}>New Group Chat</button>\r\n\r\n\r\n    //         <br />\r\n    //         <div className='mt-10 flex items-center' id='search_container' style={{ marginLeft: '5%' }}>\r\n    //           <span className='rounded-l-md bg-gray-200 h-10 pl-3 hover:cursor-pointer' onClick={(e) => clickOnImage(e)}><img src=\"/searchIcon.png\" alt=\"\" style={{ height: '30px', width: '25px' }} id='search_image' className='inline-block h-10 w-3 pt-2' /></span>\r\n    //           <input type=\"text\" ref={inputRef} placeholder='Search' id=\"search_user\" className=' h-10 rounded-r-md inline bg-gray-200' onChange={(e) => oninput(e)}\r\n    //             style={{ outline: 'None', width: '90%', paddingLeft: '10%', marginRight: '5%' }} onClick={(e) => clickOnImage(e)} />\r\n    //         </div>\r\n    //       </div>\r\n    //       {searchbool ? (\r\n    //         <div id='search_panel' className='searchnot overflow-auto' style={{ maxHeight: '480px', overflowY: 'auto' }}>\r\n\r\n    //           {searchusers.length > 0 ? (\r\n    //             <ul className='text-2xl mt-2  searchnot'>\r\n    //               <span className='ml-[2.2vw] text-[2vw] searchnot'>Search User</span>\r\n    //               {searchusers.map((user) => (\r\n    //                 <li key={user._id} onClick={(e) => startindivimessage(e, user.username)} className='border-8 cursor-pointer mt-[2vh] ml-[2vw] border-gray-700 pl-[1vw] pt-[1vh]  h-[10vh]  w-[36vw]  searchnot text-[2vw]'>{user.username}</li>\r\n    //               ))}\r\n    //             </ul>\r\n    //           ) : <div className='ml-[2.2vw] mt-[0.5vh] text-[2vw] searchnot'>Search User not Found</div>}\r\n    //         </div>) :\r\n    //         (<div className='overflow-auto h-[78vh] class=\"[&::-webkit-scrollbar]:hidden [-ms-overflow-style:none] [scrollbar-width:none]'  >\r\n    //           {intial_user_group.length > 0 && (\r\n    //             <ul className=''>\r\n    //               <div >\r\n    //                 {intial_user_group.map((item, index) => (\r\n    //                   <li key={index} className='border-8 cursor-pointer mt-[2vh] ml-[2vw] border-gray-700 pl-[1vw] pt-[1vh]   w-[36vw]  searchnot text-[2vw]'>\r\n    //                     {/* Group Box */}\r\n    //                     {item.groupname ? (\r\n    //                       <div className='h-[15vh] relative' onClick={(e) => startgroupmessage(e, item.groupname)} rig>\r\n    //                         <p className=\"text-[3vh] font-bold text-blue-800\">{item.groupname}</p>\r\n    //                         <p className=\"text-[2vh] text-gray-600 overflow-hidden text-ellipsis whitespace-nowrap\">Message: {item.chat}</p>\r\n    //                         <p className=\"text-[2vh] text-gray-600 float-right mr-2\">Date: {item.currentDate}</p>\r\n    //                         <p className=\"text-[2vh] text-gray-600 float-right absolute bottom-0 right-2\">Time: {item.currentTime}</p>\r\n    //                       </div>\r\n    //                     ) : (\r\n    //                       /* Individual Message Box */\r\n    //                       <div onClick={(e) => startindivimessage(e, item.sender)} className='h-[15vh] relative'>\r\n    //                         <p className=\"text-[3vh] font-bold text-green-800\">From: {item.sender}</p>\r\n    //                         <p className=\"text-[2vh] text-gray-600 overflow-hidden text-ellipsis whitespace-nowrap\">Message: {item.latestMessage}</p>\r\n    //                         <p className=\"text-[2vh] text-gray-600 float-right mr-2\">Date: {item.currentDate}</p>\r\n    //                         <p className=\"text-[2vh] text-gray-600 float-right absolute bottom-0  right-2\">Time: {item.currentTime}</p>\r\n    //                       </div>\r\n    //                     )}\r\n    //                   </li>\r\n    //                 ))}\r\n    //               </div>\r\n    //             </ul>\r\n    //           )}\r\n\r\n    //         </div>)}\r\n    //     </div>\r\n    //     {mscreen ? (\r\n    //       <div className='h-screen text-[2vw] bg-gray-200 flex justify-center items-center' style={{ width: '55%' }}>\r\n    //         <div>\r\n    //           Start Messaging\r\n    //         </div>\r\n    //       </div>) :\r\n    //       (<div className='h-screen' style={{ width: '55%' }} >\r\n    //         <div className='bg-gray-500 pt-1 pl-10 text-[3vw]' style={{ height: '10%' }}>{senderGroupName}</div>\r\n    //         <div className='bg-gray-300 flex-1 overflow-y-auto' id=\"messageDisplay\" style={{ height: '80%' }} ></div>\r\n    //         <div className='bg-red-300 ' style={{ height: '10%' }}><input type=\"text\" value={messagetext} onChange={e => messageBox(e)} onClick={e => messageBox(e, false)} name=\"\" id=\"\" className='inline-block ' style={{ width: '75%', paddingLeft: '1%', marginLeft: '10%', height: '70%', marginTop: '1%' }} /> <button style={{ width: '10%', height: '50%' }}><img src=\"/rightarrow.png\" onClick={groupMessages == false ? (e) => sendMessage(e) : (e) => sendGroupmessage(e)} style={{ width: \"50%\", height: '150%', paddingTop: '5%' }} /></button></div>\r\n    //       </div>)}\r\n    //   </div>\r\n\r\n    // </>\r\n    <>\r\n  {/* Overlay for blurred background */}\r\n  {addgroupModal && (\r\n    <div className=\"modal-background fixed top-0 left-0 w-full h-full z-10 bg-black bg-opacity-50\" />\r\n  )}\r\n\r\n  {/* Modal Content */}\r\n  {addgroupModal && (\r\n    <div className=\"bg-gray-300 fixed top-10 left-[25vw] h-[80vh] w-[50vw] z-20\">\r\n      <button onClick={switchModal} className=\"bg-red-500 hover:bg-red-600 rounded mt-[1vh] mr-[0.5vw] float-right text-[1.5vw] h-[8vh] w-[5vw]\">Close</button>\r\n      <input type=\"text\" id=\"group_name\" name=\"\" placeholder=\"Enter Group Name: \" className=\"relative top-4 left-4 w-[30vw] h-[6vh] p-2 border-black\" />\r\n      <input type=\"text\" id=\"search_user\" onChange={e => searchusersforgroup(e)} name=\"\" placeholder=\"Search User: \" className=\"relative top-7 left-4 w-[30vw] h-[6vh] p-2 border-black\" />\r\n      \r\n      {/* User list */}\r\n      <div className=\"bg-white h-[45vh] mt-[7vh] w-[23vw] ml-[1vw] float-left overflow-y-auto class='[&::-webkit-scrollbar]:hidden [-ms-overflow-style:none] [scrollbar-width:none]'\">\r\n        {searchusersgroup.length > 0 ? (\r\n          <ul className=\"text-2xl mt-2 searchnot\">\r\n            {searchusersgroup.map((user) => (\r\n              user.username !== username && (\r\n                <li key={user._id} className=\"border-8 cursor-pointer mt-2 border-gray-700 pl-2 h-[9vh] w-88 searchnot text-[2vw]\">\r\n                  {user.username}\r\n                  <button type=\"button\" onClick={e => addingroup(e, user)} className=\"bg-green-300 hover:bg-green-600 h-[5vh] float-right mt-1 mr-1 rounded w-[6vw]\">ADD</button>\r\n                </li>\r\n              )\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <ul className=\"text-[1.8vw] mt-2 ml-7 searchnot\"> No Users found</ul>\r\n        )}\r\n      </div>\r\n      \r\n      {/* Users in Group */}\r\n      <div className=\"bg-white h-[45vh] mt-[7vh] w-[23vw] mr-[1vw] float-right\">\r\n        {usersingroups.length > 0 ? (\r\n          <ul className=\"text-2xl mt-2 searchnot\">\r\n            {usersingroups.map((user) => (\r\n              <li key={user._id} className=\"border-8 cursor-pointer mt-2 border-gray-700 pl-2 h-[9vh] w-88 searchnot text-[2vw]\">\r\n                {user.username}\r\n                <button type=\"button\" onClick={e => removeingroup(e, user)} className=\"bg-red-500 hover:bg-red-600 h-[5vh] float-right mt-1 mr-1 rounded w-[8vw]\">Remove</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <ul className=\"text-[1.8vw] mt-2 ml-7 searchnot\"> No Users is added</ul>\r\n        )}\r\n      </div>\r\n\r\n      {/* Error message */}\r\n      <div id=\"display_res\" className=\"text-red-500 h-[5vh] mt-[54vh] mx-auto w-[30vw] text-center\"></div>\r\n\r\n      {/* Submit Button */}\r\n      <button className=\"bg-green-500 hover:bg-green-600 rounded ml-[20vw] mt-[1vh] text-[1.5vw] h-[6vh] w-[8vw]\" onClick={e => submitNewGroup(e)}>Submit</button>\r\n    </div>\r\n  )}\r\n\r\n  {/* Main Content */}\r\n  <div className=\"flex flex-row h-screen\" onClick={handleContainerClick}>\r\n    {/* Sidebar */}\r\n    <div className=\"bg-gray-400\" style={{ width: '5%', height: '100%' }}></div>\r\n    \r\n    {/* Main chat and search */}\r\n    <div style={{ width: '40%', height: \"100%\" }}>\r\n      <div className=\"bg-fixed\">\r\n        <span className=\"text-[2vw] font-bold relative top-3 pl-[2vw]\">\r\n          Chats\r\n        </span>\r\n        <button\r\n          type=\"button\"\r\n          id=\"to_add_group\"\r\n          className=\"relative left-[13vw] text-[2vw] top-3 font-bold border-gray-500 rounded-lg border-[0.5vw] border-solid visible\"\r\n          onClick={switchModal}\r\n        >\r\n          New Group Chat\r\n        </button>\r\n        <br />\r\n        \r\n        {/* Search Bar */}\r\n        <div className=\"mt-10 flex items-center\" id=\"search_container\" style={{ marginLeft: '5%' }}>\r\n          <span className=\"rounded-l-md bg-gray-200 h-10 pl-3 hover:cursor-pointer\" onClick={(e) => clickOnImage(e)}>\r\n            <img src=\"/searchIcon.png\" alt=\"\" style={{ height: '30px', width: '25px' }} id=\"search_image\" className=\"inline-block h-10 w-3 pt-2\" />\r\n          </span>\r\n          <input\r\n            type=\"text\"\r\n            ref={inputRef}\r\n            placeholder=\"Search\"\r\n            id=\"search_user\"\r\n            className=\"h-10 rounded-r-md inline bg-gray-200\"\r\n            onChange={(e) => oninput(e)}\r\n            style={{ outline: 'None', width: '90%', paddingLeft: '10%', marginRight: '5%' }}\r\n            onClick={(e) => clickOnImage(e)}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* More content here... */}\r\n    </div>\r\n\r\n    {/* Messaging Screen */}\r\n    {mscreen ? (\r\n      <div className=\"h-screen text-[2vw] bg-gray-200 flex justify-center items-center\" style={{ width: '55%' }}>\r\n        <div>\r\n          Start Messaging\r\n        </div>\r\n      </div>\r\n    ) : (\r\n      <div className=\"h-screen\" style={{ width: '55%' }}>\r\n        <div className=\"bg-gray-500 pt-1 pl-10 text-[3vw]\" style={{ height: '10%' }}>{senderGroupName}</div>\r\n        <div className=\"bg-gray-300 flex-1 overflow-y-auto\" id=\"messageDisplay\" style={{ height: '80%' }}></div>\r\n        <div className=\"bg-red-300\" style={{ height: '10%' }}>\r\n          <input\r\n            type=\"text\"\r\n            value={messagetext}\r\n            onChange={e => messageBox(e)}\r\n            onClick={e => messageBox(e, false)}\r\n            className=\"inline-block\"\r\n            style={{ width: '75%', paddingLeft: '1%', marginLeft: '10%', height: '70%', marginTop: '1%' }}\r\n          />\r\n          <button style={{ width: '10%', height: '50%' }}>\r\n            <img\r\n              src=\"/rightarrow.png\"\r\n              onClick={groupMessages === false ? (e) => sendMessage(e) : (e) => sendGroupmessage(e)}\r\n              style={{ width: \"50%\", height: '150%', paddingTop: '5%' }}\r\n            />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )}\r\n  </div>\r\n</>\r\n\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}