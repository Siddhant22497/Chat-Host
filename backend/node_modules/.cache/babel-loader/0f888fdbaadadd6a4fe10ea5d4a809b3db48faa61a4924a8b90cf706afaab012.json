{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Siddhant\\\\OneDrive\\\\Something\\\\chat_app\\\\src\\\\Homescreen.js\",\n  _s = $RefreshSig$();\nimport { React, useState, useRef, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  io\n} = require(\"socket.io-client\");\nconst socket = io.connect(\"http://localhost:5100\");\nexport default function Homescreen() {\n  _s();\n  const location = useLocation();\n  const inputRef = useRef(null);\n  const [groupMessages, setGroupMessage] = useState(false);\n  const {\n    username,\n    password\n  } = location.state || {};\n  const [searchusersgroup, setSearchUsersgroup] = useState([]);\n  const [searchusers, setSearchsUsers] = useState([]);\n  const [searchgroupMessages, setsearchGroupMessages] = useState([]);\n  const [searchbool, setSearchbool] = useState(false);\n  const [mscreen, setMscreen] = useState(true);\n  const [senderGroupName, setSenderGroupName] = useState(\"\");\n  const [currsendmessage, setCurrsendmessage] = useState(\"\");\n  const [addgroupModal, setAddgroupModal] = useState(false);\n  const [messagetext, setmessagetext] = useState(\"Type message here\");\n  const [intial_user_group, setIntial_user_group] = useState([]);\n  const [usersingroups, setUsersingroups] = useState([]);\n  const [groupmember, setGroupmember] = useState([]);\n  const switchModal = () => {\n    setAddgroupModal(!addgroupModal);\n    let to_add_group = document.getElementById(\"to_add_group\");\n    if (addgroupModal) {\n      console.log(\"If\");\n      to_add_group.classList.remove(\"invisible\");\n      to_add_group.classList.add(\"visible\");\n    } else {\n      console.log(\"Else\");\n      to_add_group.classList.remove(\"visible\");\n      to_add_group.classList.add(\"invisible\");\n    }\n  };\n  const clickOnImage = event => {\n    const searchimage = document.getElementById('search_image');\n    let a = searchimage.attributes['src'];\n    if (a.nodeValue == '/leftArrow.png') {\n      fetchintialusergroup();\n      a.nodeValue = '/searchIcon.png';\n      setSearchbool(false);\n      setMscreen(true);\n      setmessagetext(\"Type message here\");\n    } else {\n      a.nodeValue = '/leftArrow.png';\n      setSearchbool(true);\n      if (inputRef.current) {\n        inputRef.current.focus();\n      }\n    }\n    event.stopPropagation();\n  };\n  const handleContainerClick = event => {\n    const target = event.target;\n    const searchimage = document.getElementById('search_image');\n    let a = searchimage.attributes['src'];\n    const flag = target.classList.contains('searchnot');\n  };\n  const oninput = async e => {\n    const value = e.target.value;\n    setSearchbool(true);\n    if (value.length > 0) {\n      const response = await fetch('http://localhost:5010/tofetch', {\n        method: 'POST',\n        body: JSON.stringify({\n          \"username\": value\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      const data_users = data.users;\n      const data_group = data.groupMessages;\n      setSearchsUsers(data_users || []);\n      setsearchGroupMessages(data_group || []);\n    } else {\n      setSearchsUsers([]);\n      setsearchGroupMessages([]);\n    }\n  };\n  useEffect(() => {\n    const handleReceiveMessage = data => {\n      // console.log(\"In the receive message\");\n      console.log(data);\n      const currentDate = data.currentDate;\n      const currentTime = data.currentTime;\n      const sender = data.sender;\n      const receiver = data.receiver;\n      const textToSend = data.textToSend;\n      if (currsendmessage == \"\") {\n        setCurrsendmessage({\n          \"currentDate\": currentDate,\n          \"currentTime\": currentTime,\n          \"sender\": sender,\n          \"receiver\": receiver,\n          \"textToSend\": textToSend\n        });\n        fetchintialusergroup();\n        if (senderGroupName == receiver) {\n          loadindimess(sender, receiver);\n        }\n      } else if (currsendmessage[\"currentTime\"] != currentTime) {\n        setCurrsendmessage({\n          \"currentDate\": currentDate,\n          \"currentTime\": currentTime,\n          \"sender\": sender,\n          \"receiver\": receiver,\n          \"textToSend\": textToSend\n        });\n        fetchintialusergroup();\n        if (senderGroupName == receiver) {\n          loadindimess(sender, receiver);\n        }\n      }\n    };\n    socket.on(\"receive_message\", handleReceiveMessage);\n    return () => {\n      socket.off(\"receive_message\", handleReceiveMessage);\n    };\n  });\n  const startindivimessage = async (e, u2) => {\n    setMscreen(false);\n    const receiver = username;\n    const sender = u2;\n    setGroupMessage(false);\n    if (sender == receiver) {\n      const t1 = receiver + ' (Self)';\n      setSenderGroupName(t1);\n      socket.emit(\"join_room\", t1);\n    } else {\n      setSenderGroupName(sender);\n      const identifier1 = receiver + '#' + sender;\n      const identifier2 = sender + '#' + receiver;\n      socket.emit(\"join_room\", identifier1);\n      socket.emit(\"join_room\", identifier2);\n    }\n    setmessagetext(\"Type message here\");\n    loadindimess(receiver, sender);\n  };\n  const startgroupmessage = async (e, groupname) => {\n    setMscreen(false);\n    setGroupMessage(true);\n    setmessagetext(\"Type message here\");\n    const receiver = username;\n    socket.emit(\"join_room_group\", groupname);\n    setSenderGroupName(groupname);\n    loadgroupmess(receiver, groupname);\n  };\n  const loadgroupmess = async (receiver, groupname) => {\n    const response = await fetch('http://localhost:5200/loadgroupmessage', {\n      method: 'POST',\n      body: JSON.stringify({\n        \"groupname\": groupname\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    let messageDisplayContainer = document.getElementById(\"messageDisplay\");\n    if (messageDisplayContainer != null) messageDisplayContainer.innerHTML = \"\";\n    const result = await response.json();\n    if (result.length == 0) {\n      console.log(\"No message is there\");\n      messageDisplayContainer.innerHTML = \"\";\n      return;\n    }\n    result.forEach(currentEle => {\n      const {\n        receiver,\n        groupname,\n        chat,\n        currentDate,\n        currentTime\n      } = currentEle;\n\n      // Create a message bubble\n      const messageBubble = document.createElement(\"div\");\n      messageBubble.className = `p-3 rounded-lg m-2 max-w-xs ${username === receiver ? \"bg-gray-200 text-black self-start mr-auto\" // Left side for receiver\n      : \"bg-blue-500 text-white self-end ml-auto\" // Right side for others\n      }`;\n      messageBubble.style.marginBottom = \"1rem\"; // Add spacing between messages\n\n      // Create a wrapper to hold message text, date, and time\n      const messageWrapper = document.createElement(\"div\");\n      messageWrapper.className = \"flex flex-col h-auto\"; // Stack elements vertically\n\n      // Message text\n      const messageText = document.createElement(\"p\");\n      messageText.className = \"text-[1.3vw] mb-1\"; // Add spacing below message text\n      messageText.innerText = chat;\n\n      // Message date and time\n      const messageDateTime = document.createElement(\"span\");\n      messageDateTime.className = \"text-[1vw] text-gray-600 self-end\"; // Align to the bottom-right\n      messageDateTime.innerText = `${currentDate} at ${currentTime}`; // Combine date and time\n\n      // Append text and date-time to the wrapper\n      messageWrapper.appendChild(messageText);\n      messageWrapper.appendChild(messageDateTime);\n\n      // Append the wrapper to the message bubble\n      messageBubble.appendChild(messageWrapper);\n\n      // Append the bubble to the message container\n      messageDisplayContainer.appendChild(messageBubble);\n    });\n  };\n  const loadindimess = async (receiver, sender) => {\n    const response = await fetch('http://localhost:5100/tofetchindichat', {\n      method: 'POST',\n      body: JSON.stringify({\n        \"receiver\": receiver,\n        \"sender\": sender\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    let messageDisplayContainer = document.getElementById(\"messageDisplay\");\n    if (messageDisplayContainer != null) messageDisplayContainer.innerHTML = \"\";\n    const result = await response.json();\n    if (result.length == 0) {\n      messageDisplayContainer.innerHTML = \"\";\n      return;\n    }\n    result.sort((a, b) => {\n      // Parse dates (currentDate is in DD/MM/YYYY format)\n      const [dayA, monthA, yearA] = a.currentDate.split('/').map(Number);\n      const [dayB, monthB, yearB] = b.currentDate.split('/').map(Number);\n\n      // Compare years, months, days first\n      if (yearA !== yearB) return yearA - yearB;\n      if (monthA !== monthB) return monthA - monthB;\n      if (dayA !== dayB) return dayA - dayB;\n\n      // If the dates are the same, compare times\n      const timeA = a.currentTime.split(':').map(Number); // [hours, minutes, seconds]\n      const timeB = b.currentTime.split(':').map(Number);\n\n      // Compare hours, minutes, seconds\n      if (timeA[0] !== timeB[0]) return timeA[0] - timeB[0];\n      if (timeA[1] !== timeB[1]) return timeA[1] - timeB[1];\n      return timeA[2] - timeB[2];\n    });\n    let lastDate = \"10/12/2024\";\n    result.forEach(currentEle => {\n      const {\n        chat,\n        currentDate,\n        currentTime,\n        receiver,\n        sender,\n        whichuser\n      } = currentEle;\n\n      // Add a date header if the date changes\n      if (currentDate !== lastDate) {\n        lastDate = currentDate;\n        const dateHeader = document.createElement(\"h1\"); // Change 'h' to 'h1'\n        dateHeader.className = \"flex justify-center items-center h-12\"; // Flexbox for centering\n\n        const dateContainer = document.createElement(\"span\");\n        dateContainer.className = \"bg-red-700 border border-yellow-700 text-white px-4 py-2 rounded-md\";\n        dateContainer.innerText = currentDate;\n        dateHeader.append(dateContainer);\n        messageDisplayContainer.appendChild(dateHeader);\n      }\n\n      // Create a message bubble\n      const messageBubble = document.createElement(\"div\");\n      messageBubble.className = `p-3 rounded-lg m-2 max-w-xs ${whichuser === receiver ? \"bg-blue-500 text-white self-end ml-auto\" : \"bg-gray-200 text-black self-start mr-auto\"}`;\n      messageBubble.style.marginBottom = \"1rem\"; // This adds some space between messages\n\n      // Create a wrapper to hold both the message and the time\n      const messageWrapper = document.createElement(\"div\");\n      messageWrapper.className = \"flex flex-col h-[7vh]\"; // Stack the message and time vertically\n\n      // Message text\n      const messageText = document.createElement(\"p\");\n      messageText.className = \"text-[1.3vw] mb-1\"; // Add some bottom margin between message and time\n      messageText.innerText = chat;\n\n      // Message time\n      const messageTime = document.createElement(\"span\");\n      messageTime.className = \"text-[1vw] text-gray-600 self-end\"; // Align time to the bottom-right\n      messageTime.innerText = currentTime;\n\n      // Append text and time to the wrapper\n      messageWrapper.appendChild(messageText);\n      messageWrapper.appendChild(messageTime);\n\n      // Append the wrapper to the message bubble\n      messageBubble.appendChild(messageWrapper);\n\n      // Append bubble to container\n      messageDisplayContainer.appendChild(messageBubble);\n    });\n    messageDisplayContainer.scrollTop = messageDisplayContainer.scrollHeight;\n  };\n\n  // When click on send message arrow\n  const messageBox = async (e, flag = true) => {\n    e.stopPropagation();\n    if (flag == true) {\n      if (messagetext == \"Type message here\") {\n        const d = e.target.value;\n        const i = d.indexOf('Type message here');\n        const m1 = d.substring(i + 'Type message here'.length);\n        setmessagetext(m1);\n      } else if (e.target.value && e.target.value.length > 0) {\n        setmessagetext(e.target.value);\n      } else {\n        setmessagetext(\"Type message here\");\n      }\n    } else {\n      if (messagetext == \"Type message here\") {\n        e.target.value = \"\";\n        setmessagetext(e.target.value);\n      }\n    }\n  };\n  const sendGroupmessage = async e => {\n    const chat = e.target.value;\n    const groupname = senderGroupName;\n    const groupmember = groupmember;\n    console.log(\"Chat: \", chat);\n    console.log(\"Here is it: \", groupmember);\n    const receiver = username;\n    const now = new Date(); // Create a new Date object with the current date and time\n\n    // Get the date components\n    const day = now.getDate(); // Day of the month (1-31)\n    const month = now.getMonth() + 1; // Month (0-11), so add 1 for 1-12\n    const year = now.getFullYear(); // Full year (e.g., 2024)\n\n    const hours = now.getHours(); // Hours (0-23)\n    const minutes = now.getMinutes(); // Minutes (0-59)\n    const seconds = now.getSeconds(); // Seconds (0-59)\n\n    const currentDate = `${day}/${month}/${year}`;\n    const currentTime = `${hours}:${minutes}:${seconds}`;\n    setmessagetext(\"Type message here\");\n    const response = await fetch('http://localhost:5200/savegroupmessage', {\n      method: 'POST',\n      body: JSON.stringify({\n        \"receiver\": receiver,\n        \"groupname\": groupname,\n        \"groupmember\": groupmember,\n        \"chat\": chat,\n        \"currentDate\": currentDate,\n        \"currentTime\": currentTime\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    socket.emit('send_message_group', {\n      receiver,\n      groupname,\n      groupmember,\n      chat,\n      currentDate,\n      currentTime\n    });\n    setSearchbool(false);\n    fetchintialusergroup();\n    loadindimess(receiver, senderGroupName);\n  };\n  const sendMessage = async e => {\n    const textToSend = messagetext;\n    const receiver = username;\n    const sender = senderGroupName;\n    if (textToSend.length == 0) {\n      setmessagetext(\"Type message here\");\n      return;\n    }\n    if (groupMessages == false) {\n      const identifier = receiver + ' (Self)';\n      if (senderGroupName == identifier) {\n        // Coming soon\n        // const identifier1 = receiver + '#' + sender;\n        // const identifier2 = sender + '#' + receiver;\n        const now = new Date(); // Create a new Date object with the current date and time\n\n        // Get the date components\n        const day = now.getDate(); // Day of the month (1-31)\n        const month = now.getMonth() + 1; // Month (0-11), so add 1 for 1-12\n        const year = now.getFullYear(); // Full year (e.g., 2024)\n\n        const hours = now.getHours(); // Hours (0-23)\n        const minutes = now.getMinutes(); // Minutes (0-59)\n        const seconds = now.getSeconds(); // Seconds (0-59)\n\n        const currentDate = `${day}/${month}/${year}`;\n        const currentTime = `${hours}:${minutes}:${seconds}`;\n        setmessagetext(\"Type message here\");\n        const response = await fetch('http://localhost:5100/saveindichat', {\n          method: 'POST',\n          body: JSON.stringify({\n            \"receiver\": receiver,\n            \"sender\": receiver,\n            \"whichuser\": receiver,\n            \"textToSend\": textToSend,\n            \"currentDate\": currentDate,\n            \"currentTime\": currentTime\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        setSearchbool(false);\n        fetchintialusergroup();\n        loadindimess(receiver, receiver);\n      } else {\n        const identifier1 = receiver + '#' + sender;\n        const identifier2 = sender + '#' + receiver;\n        const now = new Date(); // Create a new Date object with the current date and time\n\n        // Get the date components\n        const day = now.getDate(); // Day of the month (1-31)\n        const month = now.getMonth() + 1; // Month (0-11), so add 1 for 1-12\n        const year = now.getFullYear(); // Full year (e.g., 2024)\n\n        const hours = now.getHours(); // Hours (0-23)\n        const minutes = now.getMinutes(); // Minutes (0-59)\n        const seconds = now.getSeconds(); // Seconds (0-59)\n\n        const currentDate = `${day}/${month}/${year}`;\n        const currentTime = `${hours}:${minutes}:${seconds}`;\n        setmessagetext(\"Type message here\");\n        const response = await fetch('http://localhost:5100/saveindichat', {\n          method: 'POST',\n          body: JSON.stringify({\n            \"receiver\": receiver,\n            \"sender\": sender,\n            \"whichuser\": receiver,\n            \"textToSend\": textToSend,\n            \"currentDate\": currentDate,\n            \"currentTime\": currentTime\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const result = await response.json();\n        const response2 = await fetch('http://localhost:5100/saveindichat', {\n          method: 'POST',\n          body: JSON.stringify({\n            \"receiver\": sender,\n            \"sender\": receiver,\n            \"whichuser\": receiver,\n            \"textToSend\": textToSend,\n            \"currentDate\": currentDate,\n            \"currentTime\": currentTime\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const result2 = await response2.json();\n        socket.emit('send_message', {\n          identifier1,\n          identifier2,\n          receiver,\n          sender,\n          textToSend,\n          currentDate,\n          currentTime\n        });\n        setSearchbool(false);\n        fetchintialusergroup();\n        loadindimess(receiver, senderGroupName);\n      }\n    } else {\n      //For group chat coming soon\n    }\n  };\n  const submitNewGroup = async () => {\n    let group_name = document.getElementById(\"group_name\");\n    const val = group_name.value;\n    if (val.length == 0) {\n      let display_res = document.getElementById(\"display_res\");\n      display_res.textContent = \"Enter Group Name\";\n      return;\n    } else {\n      let display_res = document.getElementById(\"display_res\");\n      display_res.textContent = \"\";\n    }\n    if (usersingroups.length <= 1) {\n      let display_res = document.getElementById(\"display_res\");\n      display_res.textContent = \"Atleast 2 users are required\";\n      return;\n    } else {\n      let display_res = document.getElementById(\"display_res\");\n      display_res.textContent = \"\";\n    }\n    const response = await fetch('http://localhost:4000/signup', {\n      method: 'POST',\n      body: JSON.stringify({\n        \"username\": val\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    const length = data.length;\n    if (length == 1) {\n      let display_res = document.getElementById(\"display_res\");\n      display_res.textContent = \"Group name matches with username\";\n      return;\n    }\n    const res = await fetch(\"http://localhost:5200/checkgroupexist\", {\n      method: 'POST',\n      body: JSON.stringify({\n        \"groupname\": val\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const res2 = await res.json();\n    if (res2.flag == \"true\") {\n      let display_res = document.getElementById(\"display_res\");\n      display_res.textContent = \"Group name already exists\";\n      return;\n    } else {\n      let display_res = document.getElementById(\"display_res\");\n      display_res.textContent = \"\";\n    }\n    let groupmember = [];\n    groupmember = usersingroups.map(user => user.username);\n    groupmember.push(username);\n    const now = new Date(); // Create a new Date object with the current date and time\n\n    // Get the date components\n    const day = now.getDate(); // Day of the month (1-31)\n    const month = now.getMonth() + 1; // Month (0-11), so add 1 for 1-12\n    const year = now.getFullYear(); // Full year (e.g., 2024)\n\n    const hours = now.getHours(); // Hours (0-23)\n    const minutes = now.getMinutes(); // Minutes (0-59)\n    const seconds = now.getSeconds(); // Seconds (0-59)\n\n    const currentDate = `${day}/${month}/${year}`;\n    const currentTime = `${hours}:${minutes}:${seconds}`;\n    const response2 = await fetch('http://localhost:5200/savegroupinfo', {\n      method: 'POST',\n      body: JSON.stringify({\n        \"receiver\": username,\n        \"groupname\": val,\n        \"groupmember\": groupmember,\n        \"currentDate\": currentDate,\n        \"currentTime\": currentTime\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    let display_res = document.getElementById(\"display_res\");\n    display_res.textContent = \"Group created successfully\";\n    setTimeout(() => {\n      switchModal();\n      setSearchUsersgroup([]);\n      setUsersingroups([]);\n    }, 2000);\n  };\n  const searchusersforgroup = async e => {\n    const sender = e.target.value;\n    if (sender.length > 0) {\n      const response = await fetch('http://localhost:5010/tofetch', {\n        method: 'POST',\n        body: JSON.stringify({\n          \"username\": sender\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      const data_users = data.users;\n      const data_group = data.groupMessages;\n      setSearchUsersgroup(data_users || []);\n    } else {\n      setSearchUsersgroup([]);\n    }\n  };\n  const addingroup = (e, user) => {\n    e.preventDefault();\n    const alreadyAdded = usersingroups.some(element => element._id === user._id);\n    if (alreadyAdded) return;\n    setUsersingroups(prev => [...prev, user]);\n  };\n  const removeingroup = (e, user) => {\n    e.preventDefault();\n    setUsersingroups(prev => prev.filter(element => element._id !== user._id));\n  };\n  const fetchintialusergroup = async () => {\n    const res1 = await fetch('http://localhost:5100/intialindires', {\n      method: 'POST',\n      body: JSON.stringify({\n        receiver: username\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data1 = await res1.json();\n    const res2 = await fetch('http://localhost:5200/intialresultgroup', {\n      method: 'POST',\n      body: JSON.stringify({\n        receiver: username\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data2 = await res2.json();\n    let tresult = [...data1, ...data2];\n    let temp = tresult.sort((b, a) => {\n      // Parse dates (currentDate is in DD/MM/YYYY format)\n      const [dayA, monthA, yearA] = a.currentDate.split('/').map(Number);\n      const [dayB, monthB, yearB] = b.currentDate.split('/').map(Number);\n\n      // Compare years, months, days first\n      if (yearA !== yearB) return yearA - yearB;\n      if (monthA !== monthB) return monthA - monthB;\n      if (dayA !== dayB) return dayA - dayB;\n\n      // If the dates are the same, compare times\n      const timeA = a.currentTime.split(':').map(Number); // [hours, minutes, seconds]\n      const timeB = b.currentTime.split(':').map(Number);\n\n      // Compare hours, minutes, seconds\n      if (timeA[0] !== timeB[0]) return timeA[0] - timeB[0];\n      if (timeA[1] !== timeB[1]) return timeA[1] - timeB[1];\n      return timeA[2] - timeB[2];\n    });\n    console.log(data2);\n    let tempdata = data2.flatMap(user => user.groupmember);\n    console.log(tempdata);\n    setGroupmember(tempdata);\n\n    // Update the state with sorted entries\n    setIntial_user_group([...temp]); // Create a new array to ensure immutability\n  };\n  useEffect(() => {\n    fetchintialusergroup();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [addgroupModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-300 fixed top-10 left-[25vw] h-[80vh] w-[50vw] z-20\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: switchModal,\n        className: \"bg-red-500  hover:bg-red-600 rounded mt-[1vh] mr-[0.5vw] float-right text-[1.5vw] h-[8vh] w-[5vw]\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 742,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"group_name\",\n        name: \"\",\n        placeholder: \"Enter Group Name: \",\n        className: \"relative top-4 left-4 w-[30vw] h-[6vh] p-2 border-black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 743,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"search_user\",\n        onChange: e => searchusersforgroup(e),\n        name: \"\",\n        placeholder: \"Search User: \",\n        className: \"relative top-7 left-4 w-[30vw] h-[6vh] p-2 border-black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white h-[45vh] mt-[7vh] w-[23vw] ml-[1vw] float-left overflow-y-auto class=\\\"[&::-webkit-scrollbar]:hidden [-ms-overflow-style:none] [scrollbar-width:none]\",\n        children: searchusersgroup.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"text-2xl mt-2  searchnot\",\n          children: searchusersgroup.map(user => user.username != username && /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              width: '90%',\n              marginLeft: '5%'\n            },\n            className: \"border-8 cursor-pointer mt-2 border-gray-700 pl-2  h-[9vh]  w-88  searchnot text-[2vw]\",\n            children: [user.username, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: e => addingroup(e, user),\n              className: \"bg-green-300 hover:bg-green-600 h-[5vh] float-right mt-1 mr-1 rounded w-[6vw]\",\n              children: \"ADD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 749,\n              columnNumber: 196\n            }, this), \" \"]\n          }, user._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 749,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"text-[1.8vw] mt-2 ml-7 searchnot\",\n          children: \" No Users found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white h-[45vh] mt-[7vh] w-[23vw] mr-[1vw] float-right\",\n        children: usersingroups.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"text-2xl mt-2  searchnot\",\n          children: usersingroups.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              width: '90%',\n              marginLeft: '5%'\n            },\n            className: \"border-8 cursor-pointer mt-2 border-gray-700 pl-2  h-[9vh]  w-88  searchnot text-[2vw]\",\n            children: [user.username, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: e => removeingroup(e, user),\n              className: \"bg-red-500 hover:bg-red-600 h-[5vh] float-right mt-1 mr-1 rounded w-[8vw]\",\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 758,\n              columnNumber: 196\n            }, this), \" \"]\n          }, user._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 758,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"text-[1.8vw] mt-2 ml-7 searchnot\",\n          children: \" No Users is added\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 761,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"display_res\",\n        className: \"text-red-500 h-[5vh] mt-[54vh] mx-auto w-[30vw] text-center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 763,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-green-500  hover:bg-green-600 rounded ml-[20vw]  mt-[1vh] text-[1.5vw] h-[6vh] w-[8vw]\",\n        onClick: e => submitNewGroup(e),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 764,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 741,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row h-screen\",\n      onClick: handleContainerClick,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" bg-gray-400\",\n        style: {\n          width: '5%',\n          height: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 767,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '40%',\n          height: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-fixed\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-[2vw] font-bold relative top-3 pl-[2vw]\",\n            children: \"Chats\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 772,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            id: \"to_add_group\",\n            className: \"relative left-[13vw] text-[2vw] top-3 font-bold border-gray-500 rounded-lg border-[0.5vw] border-solid visible\",\n            onClick: switchModal,\n            children: \"New Group Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 776,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 779,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10 flex items-center\",\n            id: \"search_container\",\n            style: {\n              marginLeft: '5%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"rounded-l-md bg-gray-200 h-10 pl-3 hover:cursor-pointer\",\n              onClick: e => clickOnImage(e),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/searchIcon.png\",\n                alt: \"\",\n                style: {\n                  height: '30px',\n                  width: '25px'\n                },\n                id: \"search_image\",\n                className: \"inline-block h-10 w-3 pt-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 781,\n                columnNumber: 122\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 781,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              ref: inputRef,\n              placeholder: \"Search\",\n              id: \"search_user\",\n              className: \" h-10 rounded-r-md inline bg-gray-200\",\n              onChange: e => oninput(e),\n              style: {\n                outline: 'None',\n                width: '90%',\n                paddingLeft: '10%',\n                marginRight: '5%'\n              },\n              onClick: e => clickOnImage(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 782,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 780,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 771,\n          columnNumber: 11\n        }, this), searchbool ? /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"search_panel\",\n          className: \"searchnot overflow-auto\",\n          style: {\n            maxHeight: '480px',\n            overflowY: 'auto'\n          },\n          children: searchusers.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"text-2xl mt-2  searchnot\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ml-[2.2vw] text-[2vw] searchnot\",\n              children: \"Search User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 791,\n              columnNumber: 19\n            }, this), searchusers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: e => startindivimessage(e, user.username),\n              className: \"border-8 cursor-pointer mt-[2vh] ml-[2vw] border-gray-700 pl-[1vw] pt-[1vh]  h-[10vh]  w-[36vw]  searchnot text-[2vw]\",\n              children: user.username\n            }, user._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 793,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 790,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ml-[2.2vw] mt-[0.5vh] text-[2vw] searchnot\",\n            children: \"Search User not Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 796,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overflow-auto h-[78vh] class=\\\"[&::-webkit-scrollbar]:hidden [-ms-overflow-style:none] [scrollbar-width:none]\",\n          children: intial_user_group.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: intial_user_group.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"border-8 cursor-pointer mt-[2vh] ml-[2vw] border-gray-700 pl-[1vw] pt-[1vh]   w-[36vw]  searchnot text-[2vw]\",\n                children: item.groupname ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"h-[12vh] relative\",\n                  onClick: e => startgroupmessage(e, item.groupname),\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-[3vh] font-bold text-blue-800\",\n                    children: item.groupname\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 807,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-[2vh] text-gray-600 float-right mr-2\",\n                    children: [\"Date: \", item.currentDate]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 808,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-[2vh] text-gray-600 float-right absolute bottom-0 right-2\",\n                    children: [\"Time: \", item.currentTime]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 809,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 806,\n                  columnNumber: 27\n                }, this) :\n                /*#__PURE__*/\n                /* Individual Message Box */\n                _jsxDEV(\"div\", {\n                  onClick: e => startindivimessage(e, item.sender),\n                  className: \"h-[15vh] relative\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-[3vh] font-bold text-green-800\",\n                    children: [\"From: \", item.sender]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 814,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-[2vh] text-gray-600\",\n                    children: [\"Message: \", item.latestMessage]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 815,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-[2vh] text-gray-600 float-right mr-2\",\n                    children: [\"Date: \", item.currentDate]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 816,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-[2vh] text-gray-600 float-right absolute bottom-0  right-2\",\n                    children: [\"Time: \", item.currentTime]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 817,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 813,\n                  columnNumber: 27\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 803,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 801,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 800,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 798,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 9\n      }, this), mscreen ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-screen text-[2vw] bg-gray-200 flex justify-center items-center\",\n        style: {\n          width: '55%'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Start Messaging\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 830,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 829,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-screen\",\n        style: {\n          width: '55%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-500 pt-1 pl-10 text-[3vw]\",\n          style: {\n            height: '10%'\n          },\n          children: senderGroupName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-300 flex-1 overflow-y-auto\",\n          id: \"messageDisplay\",\n          style: {\n            height: '80%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-red-300 \",\n          style: {\n            height: '10%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: messagetext,\n            onChange: e => messageBox(e),\n            onClick: e => messageBox(e, false),\n            name: \"\",\n            id: \"\",\n            className: \"inline-block \",\n            style: {\n              width: '75%',\n              paddingLeft: '1%',\n              marginLeft: '10%',\n              height: '70%',\n              marginTop: '1%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 837,\n            columnNumber: 68\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              width: '10%',\n              height: '50%'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/rightarrow.png\",\n              onClick: groupMessages == false ? e => sendMessage(e) : e => sendGroupmessage(e),\n              style: {\n                width: \"50%\",\n                height: '150%',\n                paddingTop: '5%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 837,\n              columnNumber: 359\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 837,\n            columnNumber: 311\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 837,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 766,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Homescreen, \"m5BJLZcrhFYb8M0nxYExPdV5OqI=\", false, function () {\n  return [useLocation];\n});\n_c = Homescreen;\nvar _c;\n$RefreshReg$(_c, \"Homescreen\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","io","require","socket","connect","Homescreen","_s","location","inputRef","groupMessages","setGroupMessage","username","password","state","searchusersgroup","setSearchUsersgroup","searchusers","setSearchsUsers","searchgroupMessages","setsearchGroupMessages","searchbool","setSearchbool","mscreen","setMscreen","senderGroupName","setSenderGroupName","currsendmessage","setCurrsendmessage","addgroupModal","setAddgroupModal","messagetext","setmessagetext","intial_user_group","setIntial_user_group","usersingroups","setUsersingroups","groupmember","setGroupmember","switchModal","to_add_group","document","getElementById","console","log","classList","remove","add","clickOnImage","event","searchimage","a","attributes","nodeValue","fetchintialusergroup","current","focus","stopPropagation","handleContainerClick","target","flag","contains","oninput","e","value","length","response","fetch","method","body","JSON","stringify","headers","data","json","data_users","users","data_group","handleReceiveMessage","currentDate","currentTime","sender","receiver","textToSend","loadindimess","on","off","startindivimessage","u2","t1","emit","identifier1","identifier2","startgroupmessage","groupname","loadgroupmess","messageDisplayContainer","innerHTML","result","forEach","currentEle","chat","messageBubble","createElement","className","style","marginBottom","messageWrapper","messageText","innerText","messageDateTime","appendChild","sort","b","dayA","monthA","yearA","split","map","Number","dayB","monthB","yearB","timeA","timeB","lastDate","whichuser","dateHeader","dateContainer","append","messageTime","scrollTop","scrollHeight","messageBox","d","i","indexOf","m1","substring","sendGroupmessage","now","Date","day","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","sendMessage","identifier","response2","result2","submitNewGroup","group_name","val","display_res","textContent","res","res2","user","push","setTimeout","searchusersforgroup","addingroup","preventDefault","alreadyAdded","some","element","_id","prev","removeingroup","filter","res1","data1","data2","tresult","temp","tempdata","flatMap","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","placeholder","onChange","width","marginLeft","height","src","alt","ref","outline","paddingLeft","marginRight","maxHeight","overflowY","item","index","latestMessage","marginTop","paddingTop","_c","$RefreshReg$"],"sources":["C:/Users/Siddhant/OneDrive/Something/chat_app/src/Homescreen.js"],"sourcesContent":["import { React, useState, useRef, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nconst { io } = require(\"socket.io-client\");\r\n\r\n\r\nconst socket = io.connect(\"http://localhost:5100\")\r\n\r\nexport default function Homescreen() {\r\n  const location = useLocation();\r\n\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  const [groupMessages, setGroupMessage] = useState(false);\r\n\r\n  const { username, password } = location.state || {};\r\n\r\n  const [searchusersgroup, setSearchUsersgroup] = useState([]);\r\n\r\n  const [searchusers, setSearchsUsers] = useState([]);\r\n  const [searchgroupMessages, setsearchGroupMessages] = useState([]);\r\n\r\n  const [searchbool, setSearchbool] = useState(false);\r\n\r\n  const [mscreen, setMscreen] = useState(true);\r\n\r\n  const [senderGroupName, setSenderGroupName] = useState(\"\");\r\n\r\n  const [currsendmessage, setCurrsendmessage] = useState(\"\");\r\n\r\n\r\n  const [addgroupModal, setAddgroupModal] = useState(false);\r\n\r\n\r\n  const [messagetext, setmessagetext] = useState(\"Type message here\");\r\n\r\n  const [intial_user_group, setIntial_user_group] = useState([]);\r\n\r\n  const [usersingroups, setUsersingroups] = useState([])\r\n\r\n  const [groupmember,setGroupmember]=useState([]);\r\n\r\n\r\n\r\n  const switchModal = () => {\r\n    setAddgroupModal(!addgroupModal);\r\n    let to_add_group = document.getElementById(\"to_add_group\");\r\n    if (addgroupModal) {\r\n      console.log(\"If\");\r\n      to_add_group.classList.remove(\"invisible\");\r\n      to_add_group.classList.add(\"visible\");\r\n    } else {\r\n      console.log(\"Else\");\r\n      to_add_group.classList.remove(\"visible\");\r\n      to_add_group.classList.add(\"invisible\");\r\n    }\r\n  }\r\n\r\n\r\n  const clickOnImage = (event) => {\r\n    const searchimage = document.getElementById('search_image');\r\n    let a = searchimage.attributes['src']\r\n    if (a.nodeValue == '/leftArrow.png') {\r\n      fetchintialusergroup();\r\n      a.nodeValue = '/searchIcon.png';\r\n      setSearchbool(false);\r\n      setMscreen(true);\r\n      setmessagetext(\"Type message here\");\r\n    }\r\n    else {\r\n      a.nodeValue = '/leftArrow.png';\r\n      setSearchbool(true);\r\n\r\n      if (inputRef.current) {\r\n        inputRef.current.focus();\r\n      }\r\n\r\n    }\r\n    event.stopPropagation();\r\n\r\n  }\r\n\r\n  const handleContainerClick = (event) => {\r\n    const target = event.target;\r\n    const searchimage = document.getElementById('search_image');\r\n    let a = searchimage.attributes['src']\r\n    const flag = target.classList.contains('searchnot');\r\n  }\r\n\r\n  const oninput = async (e) => {\r\n    const value = e.target.value;\r\n    setSearchbool(true);\r\n    if (value.length > 0) {\r\n      const response = await fetch('http://localhost:5010/tofetch', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ \"username\": value }),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n      const data = await response.json();\r\n      const data_users = data.users\r\n      const data_group = data.groupMessages;\r\n\r\n      setSearchsUsers(data_users || []);\r\n      setsearchGroupMessages(data_group || []);\r\n    }\r\n    else {\r\n      setSearchsUsers([]);\r\n      setsearchGroupMessages([]);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const handleReceiveMessage = (data) => {\r\n      // console.log(\"In the receive message\");\r\n      console.log(data);\r\n      const currentDate = data.currentDate;\r\n      const currentTime = data.currentTime;\r\n      const sender = data.sender;\r\n      const receiver = data.receiver;\r\n      const textToSend = data.textToSend;\r\n\r\n      if (currsendmessage == \"\") {\r\n        setCurrsendmessage({\r\n          \"currentDate\": currentDate,\r\n          \"currentTime\": currentTime,\r\n          \"sender\": sender,\r\n          \"receiver\": receiver,\r\n          \"textToSend\": textToSend\r\n        });\r\n\r\n        fetchintialusergroup();\r\n        if (senderGroupName == receiver) {\r\n\r\n          loadindimess(sender, receiver);\r\n        }\r\n\r\n      }\r\n      else if (currsendmessage[\"currentTime\"] != currentTime) {\r\n        setCurrsendmessage({\r\n          \"currentDate\": currentDate,\r\n          \"currentTime\": currentTime,\r\n          \"sender\": sender,\r\n          \"receiver\": receiver,\r\n          \"textToSend\": textToSend\r\n        });\r\n        fetchintialusergroup();\r\n        if (senderGroupName == receiver) {\r\n\r\n          loadindimess(sender, receiver);\r\n        }\r\n      }\r\n\r\n    };\r\n\r\n    socket.on(\"receive_message\", handleReceiveMessage);\r\n\r\n    return () => {\r\n      socket.off(\"receive_message\", handleReceiveMessage);\r\n    };\r\n  });\r\n\r\n\r\n\r\n\r\n\r\n  const startindivimessage = async (e, u2) => {\r\n    setMscreen(false);\r\n    const receiver = username;\r\n    const sender = u2;\r\n    setGroupMessage(false);\r\n    if (sender == receiver) {\r\n      const t1 = receiver + ' (Self)';\r\n      setSenderGroupName(t1);\r\n      socket.emit(\"join_room\", t1);\r\n    }\r\n    else {\r\n      setSenderGroupName(sender);\r\n      const identifier1 = receiver + '#' + sender;\r\n      const identifier2 = sender + '#' + receiver;\r\n      socket.emit(\"join_room\", identifier1);\r\n      socket.emit(\"join_room\", identifier2);\r\n    }\r\n    setmessagetext(\"Type message here\");\r\n    loadindimess(receiver, sender);\r\n  }\r\n\r\n  const startgroupmessage = async (e, groupname) => {\r\n    setMscreen(false);\r\n    setGroupMessage(true);\r\n    setmessagetext(\"Type message here\");\r\n    const receiver = username;\r\n    socket.emit(\"join_room_group\", groupname);\r\n    setSenderGroupName(groupname);\r\n    loadgroupmess(receiver, groupname);\r\n\r\n  }\r\n  const loadgroupmess = async (receiver, groupname) => {\r\n    const response = await fetch('http://localhost:5200/loadgroupmessage', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ \"groupname\": groupname }),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    let messageDisplayContainer = document.getElementById(\"messageDisplay\");\r\n    if (messageDisplayContainer != null)\r\n      messageDisplayContainer.innerHTML = \"\";\r\n    const result = await response.json();\r\n    if (result.length == 0) {\r\n\r\n      console.log(\"No message is there\");\r\n      messageDisplayContainer.innerHTML = \"\";\r\n      return;\r\n    }\r\n\r\n    result.forEach((currentEle) => {\r\n      const { receiver,groupname,chat,currentDate,currentTime} = currentEle;\r\n    \r\n      // Create a message bubble\r\n      const messageBubble = document.createElement(\"div\");\r\n      messageBubble.className = `p-3 rounded-lg m-2 max-w-xs ${\r\n        username === receiver\r\n          ? \"bg-gray-200 text-black self-start mr-auto\" // Left side for receiver\r\n          : \"bg-blue-500 text-white self-end ml-auto\" // Right side for others\r\n      }`;\r\n    \r\n      messageBubble.style.marginBottom = \"1rem\"; // Add spacing between messages\r\n    \r\n      // Create a wrapper to hold message text, date, and time\r\n      const messageWrapper = document.createElement(\"div\");\r\n      messageWrapper.className = \"flex flex-col h-auto\"; // Stack elements vertically\r\n    \r\n      // Message text\r\n      const messageText = document.createElement(\"p\");\r\n      messageText.className = \"text-[1.3vw] mb-1\"; // Add spacing below message text\r\n      messageText.innerText = chat;\r\n    \r\n      // Message date and time\r\n      const messageDateTime = document.createElement(\"span\");\r\n      messageDateTime.className = \"text-[1vw] text-gray-600 self-end\"; // Align to the bottom-right\r\n      messageDateTime.innerText = `${currentDate} at ${currentTime}`; // Combine date and time\r\n    \r\n      // Append text and date-time to the wrapper\r\n      messageWrapper.appendChild(messageText);\r\n      messageWrapper.appendChild(messageDateTime);\r\n    \r\n      // Append the wrapper to the message bubble\r\n      messageBubble.appendChild(messageWrapper);\r\n    \r\n      // Append the bubble to the message container\r\n      messageDisplayContainer.appendChild(messageBubble);\r\n\r\n    });\r\n    \r\n\r\n  }\r\n  const loadindimess = async (receiver, sender) => {\r\n\r\n\r\n    const response = await fetch('http://localhost:5100/tofetchindichat', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ \"receiver\": receiver, \"sender\": sender }),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    let messageDisplayContainer = document.getElementById(\"messageDisplay\");\r\n    if (messageDisplayContainer != null)\r\n      messageDisplayContainer.innerHTML = \"\";\r\n    const result = await response.json();\r\n    if (result.length == 0) {\r\n\r\n      messageDisplayContainer.innerHTML = \"\";\r\n      return;\r\n    }\r\n\r\n    result.sort((a, b) => {\r\n      // Parse dates (currentDate is in DD/MM/YYYY format)\r\n      const [dayA, monthA, yearA] = a.currentDate.split('/').map(Number);\r\n      const [dayB, monthB, yearB] = b.currentDate.split('/').map(Number);\r\n\r\n      // Compare years, months, days first\r\n      if (yearA !== yearB) return yearA - yearB;\r\n      if (monthA !== monthB) return monthA - monthB;\r\n      if (dayA !== dayB) return dayA - dayB;\r\n\r\n      // If the dates are the same, compare times\r\n      const timeA = a.currentTime.split(':').map(Number); // [hours, minutes, seconds]\r\n      const timeB = b.currentTime.split(':').map(Number);\r\n\r\n      // Compare hours, minutes, seconds\r\n      if (timeA[0] !== timeB[0]) return timeA[0] - timeB[0];\r\n      if (timeA[1] !== timeB[1]) return timeA[1] - timeB[1];\r\n      return timeA[2] - timeB[2];\r\n    });\r\n\r\n    let lastDate = \"10/12/2024\";\r\n\r\n    result.forEach((currentEle) => {\r\n      const { chat, currentDate, currentTime, receiver, sender, whichuser } = currentEle;\r\n\r\n      // Add a date header if the date changes\r\n      if (currentDate !== lastDate) {\r\n        lastDate = currentDate;\r\n        const dateHeader = document.createElement(\"h1\"); // Change 'h' to 'h1'\r\n        dateHeader.className = \"flex justify-center items-center h-12\"; // Flexbox for centering\r\n\r\n        const dateContainer = document.createElement(\"span\");\r\n        dateContainer.className = \"bg-red-700 border border-yellow-700 text-white px-4 py-2 rounded-md\";\r\n        dateContainer.innerText = currentDate;\r\n\r\n        dateHeader.append(dateContainer);\r\n        messageDisplayContainer.appendChild(dateHeader);\r\n      }\r\n\r\n      // Create a message bubble\r\n      const messageBubble = document.createElement(\"div\");\r\n      messageBubble.className = `p-3 rounded-lg m-2 max-w-xs ${whichuser === receiver\r\n        ? \"bg-blue-500 text-white self-end ml-auto\"\r\n        : \"bg-gray-200 text-black self-start mr-auto\"\r\n        }`;\r\n\r\n      messageBubble.style.marginBottom = \"1rem\"; // This adds some space between messages\r\n\r\n      // Create a wrapper to hold both the message and the time\r\n      const messageWrapper = document.createElement(\"div\");\r\n      messageWrapper.className = \"flex flex-col h-[7vh]\"; // Stack the message and time vertically\r\n\r\n      // Message text\r\n      const messageText = document.createElement(\"p\");\r\n      messageText.className = \"text-[1.3vw] mb-1\"; // Add some bottom margin between message and time\r\n      messageText.innerText = chat;\r\n\r\n      // Message time\r\n      const messageTime = document.createElement(\"span\");\r\n      messageTime.className = \"text-[1vw] text-gray-600 self-end\"; // Align time to the bottom-right\r\n      messageTime.innerText = currentTime;\r\n\r\n      // Append text and time to the wrapper\r\n      messageWrapper.appendChild(messageText);\r\n      messageWrapper.appendChild(messageTime);\r\n\r\n      // Append the wrapper to the message bubble\r\n      messageBubble.appendChild(messageWrapper);\r\n\r\n      // Append bubble to container\r\n      messageDisplayContainer.appendChild(messageBubble);\r\n    });\r\n    messageDisplayContainer.scrollTop = messageDisplayContainer.scrollHeight;\r\n\r\n\r\n  }\r\n    ;\r\n\r\n  // When click on send message arrow\r\n  const messageBox = async (e, flag = true) => {\r\n    e.stopPropagation();\r\n    if (flag == true) {\r\n      if (messagetext == \"Type message here\") {\r\n        const d = e.target.value;\r\n        const i = d.indexOf('Type message here')\r\n        const m1 = d.substring(i + ('Type message here'.length));\r\n        setmessagetext(m1);\r\n      }\r\n      else if (e.target.value && e.target.value.length > 0) {\r\n\r\n        setmessagetext(e.target.value);\r\n      }\r\n      else {\r\n\r\n        setmessagetext(\"Type message here\");\r\n      }\r\n    }\r\n    else {\r\n      if (messagetext == \"Type message here\") {\r\n        e.target.value = \"\";\r\n        setmessagetext(e.target.value);\r\n      }\r\n    }\r\n\r\n  }\r\n  const sendGroupmessage=async(e)=>{\r\n    const chat=e.target.value;\r\n    const groupname=senderGroupName;\r\n    const groupmember=groupmember;\r\n    console.log(\"Chat: \",chat);\r\n    console.log(\"Here is it: \",groupmember);\r\n    const receiver=username;\r\n\r\n    const now = new Date(); // Create a new Date object with the current date and time\r\n\r\n    // Get the date components\r\n    const day = now.getDate(); // Day of the month (1-31)\r\n    const month = now.getMonth() + 1; // Month (0-11), so add 1 for 1-12\r\n    const year = now.getFullYear(); // Full year (e.g., 2024)\r\n\r\n    const hours = now.getHours(); // Hours (0-23)\r\n    const minutes = now.getMinutes(); // Minutes (0-59)\r\n    const seconds = now.getSeconds(); // Seconds (0-59)\r\n\r\n\r\n    const currentDate = `${day}/${month}/${year}`;\r\n    const currentTime = `${hours}:${minutes}:${seconds}`;\r\n\r\n    setmessagetext(\"Type message here\");\r\n    const response = await fetch('http://localhost:5200/savegroupmessage', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        \"receiver\": receiver,\r\n        \"groupname\":groupname,\r\n        \"groupmember\":groupmember,\r\n        \"chat\": chat,\r\n        \"currentDate\": currentDate,\r\n        \"currentTime\": currentTime\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    socket.emit('send_message_group', {receiver, groupname,groupmember, chat, currentDate, currentTime });\r\n\r\n    setSearchbool(false);\r\n    fetchintialusergroup();\r\n    loadindimess(receiver, senderGroupName);\r\n  }\r\n\r\n  const sendMessage = async (e) => {\r\n    const textToSend = messagetext;\r\n    const receiver = username;\r\n    const sender = senderGroupName;\r\n\r\n    if (textToSend.length == 0) {\r\n      setmessagetext(\"Type message here\");\r\n      return;\r\n    }\r\n    if (groupMessages == false) {\r\n      const identifier = receiver + ' (Self)';\r\n      if (senderGroupName == identifier) {\r\n\r\n        // Coming soon\r\n        // const identifier1 = receiver + '#' + sender;\r\n        // const identifier2 = sender + '#' + receiver;\r\n        const now = new Date(); // Create a new Date object with the current date and time\r\n\r\n        // Get the date components\r\n        const day = now.getDate(); // Day of the month (1-31)\r\n        const month = now.getMonth() + 1; // Month (0-11), so add 1 for 1-12\r\n        const year = now.getFullYear(); // Full year (e.g., 2024)\r\n\r\n        const hours = now.getHours(); // Hours (0-23)\r\n        const minutes = now.getMinutes(); // Minutes (0-59)\r\n        const seconds = now.getSeconds(); // Seconds (0-59)\r\n\r\n\r\n        const currentDate = `${day}/${month}/${year}`;\r\n        const currentTime = `${hours}:${minutes}:${seconds}`;\r\n\r\n        setmessagetext(\"Type message here\");\r\n        const response = await fetch('http://localhost:5100/saveindichat', {\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            \"receiver\": receiver,\r\n            \"sender\": receiver,\r\n            \"whichuser\": receiver,\r\n            \"textToSend\": textToSend,\r\n            \"currentDate\": currentDate,\r\n            \"currentTime\": currentTime\r\n          }),\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n        setSearchbool(false);\r\n        fetchintialusergroup();\r\n\r\n        loadindimess(receiver, receiver);\r\n\r\n\r\n\r\n      }\r\n      else {\r\n        const identifier1 = receiver + '#' + sender;\r\n        const identifier2 = sender + '#' + receiver;\r\n        const now = new Date(); // Create a new Date object with the current date and time\r\n\r\n        // Get the date components\r\n        const day = now.getDate(); // Day of the month (1-31)\r\n        const month = now.getMonth() + 1; // Month (0-11), so add 1 for 1-12\r\n        const year = now.getFullYear(); // Full year (e.g., 2024)\r\n\r\n        const hours = now.getHours(); // Hours (0-23)\r\n        const minutes = now.getMinutes(); // Minutes (0-59)\r\n        const seconds = now.getSeconds(); // Seconds (0-59)\r\n\r\n\r\n        const currentDate = `${day}/${month}/${year}`;\r\n        const currentTime = `${hours}:${minutes}:${seconds}`;\r\n\r\n        setmessagetext(\"Type message here\");\r\n        const response = await fetch('http://localhost:5100/saveindichat', {\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            \"receiver\": receiver,\r\n            \"sender\": sender,\r\n            \"whichuser\": receiver,\r\n            \"textToSend\": textToSend,\r\n            \"currentDate\": currentDate,\r\n            \"currentTime\": currentTime\r\n          }),\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n        const result = await response.json();\r\n        const response2 = await fetch('http://localhost:5100/saveindichat', {\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            \"receiver\": sender,\r\n            \"sender\": receiver,\r\n            \"whichuser\": receiver,\r\n            \"textToSend\": textToSend,\r\n            \"currentDate\": currentDate,\r\n            \"currentTime\": currentTime\r\n          }),\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n        const result2 = await response2.json();\r\n        socket.emit('send_message', { identifier1, identifier2, receiver, sender, textToSend, currentDate, currentTime });\r\n\r\n        setSearchbool(false);\r\n        fetchintialusergroup();\r\n        loadindimess(receiver, senderGroupName);\r\n\r\n      }\r\n    }\r\n    else {\r\n      //For group chat coming soon\r\n    }\r\n\r\n  }\r\n  const submitNewGroup = async () => {\r\n    let group_name = document.getElementById(\"group_name\");\r\n    const val = group_name.value;\r\n    if (val.length == 0) {\r\n      let display_res = document.getElementById(\"display_res\");\r\n      display_res.textContent = \"Enter Group Name\";\r\n      return;\r\n    }\r\n    else {\r\n      let display_res = document.getElementById(\"display_res\");\r\n      display_res.textContent = \"\";\r\n    }\r\n\r\n    if (usersingroups.length <= 1) {\r\n      let display_res = document.getElementById(\"display_res\");\r\n      display_res.textContent = \"Atleast 2 users are required\";\r\n      return;\r\n    }\r\n    else {\r\n      let display_res = document.getElementById(\"display_res\");\r\n      display_res.textContent = \"\";\r\n    }\r\n\r\n    const response = await fetch('http://localhost:4000/signup', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ \"username\": val }),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    const data = await response.json();\r\n    const length = data.length;\r\n    if (length == 1) {\r\n      let display_res = document.getElementById(\"display_res\");\r\n      display_res.textContent = \"Group name matches with username\";\r\n      return;\r\n    }\r\n\r\n\r\n\r\n    const res = await fetch(\"http://localhost:5200/checkgroupexist\", {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        \"groupname\": val\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    const res2 = await res.json();\r\n    if (res2.flag == \"true\") {\r\n      let display_res = document.getElementById(\"display_res\");\r\n      display_res.textContent = \"Group name already exists\";\r\n      return;\r\n    }\r\n    else {\r\n      let display_res = document.getElementById(\"display_res\");\r\n      display_res.textContent = \"\";\r\n    }\r\n    let groupmember = [];\r\n    groupmember = usersingroups.map((user) => user.username);\r\n    groupmember.push(username);\r\n    const now = new Date(); // Create a new Date object with the current date and time\r\n\r\n    // Get the date components\r\n    const day = now.getDate(); // Day of the month (1-31)\r\n    const month = now.getMonth() + 1; // Month (0-11), so add 1 for 1-12\r\n    const year = now.getFullYear(); // Full year (e.g., 2024)\r\n\r\n    const hours = now.getHours(); // Hours (0-23)\r\n    const minutes = now.getMinutes(); // Minutes (0-59)\r\n    const seconds = now.getSeconds(); // Seconds (0-59)\r\n\r\n    const currentDate = `${day}/${month}/${year}`;\r\n    const currentTime = `${hours}:${minutes}:${seconds}`;\r\n    const response2 = await fetch('http://localhost:5200/savegroupinfo', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        \"receiver\": username,\r\n        \"groupname\": val,\r\n        \"groupmember\": groupmember,\r\n        \"currentDate\": currentDate,\r\n        \"currentTime\": currentTime\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    let display_res = document.getElementById(\"display_res\");\r\n    display_res.textContent = \"Group created successfully\";\r\n    setTimeout(() => {\r\n      switchModal();\r\n      setSearchUsersgroup([]);\r\n      setUsersingroups([]);\r\n    }, 2000);\r\n\r\n  }\r\n\r\n  const searchusersforgroup = async (e) => {\r\n    const sender = e.target.value;\r\n\r\n    if (sender.length > 0) {\r\n      const response = await fetch('http://localhost:5010/tofetch', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ \"username\": sender }),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n      const data = await response.json();\r\n      const data_users = data.users\r\n      const data_group = data.groupMessages;\r\n\r\n      setSearchUsersgroup(data_users || []);\r\n\r\n    }\r\n    else {\r\n      setSearchUsersgroup([]);\r\n    }\r\n  }\r\n\r\n  const addingroup = (e, user) => {\r\n    e.preventDefault();\r\n    const alreadyAdded = usersingroups.some((element) => element._id === user._id);\r\n    if (alreadyAdded) return;\r\n\r\n    setUsersingroups((prev) => [...prev, user]);\r\n\r\n  }\r\n  const removeingroup = (e, user) => {\r\n    e.preventDefault();\r\n    setUsersingroups((prev) => prev.filter((element) => element._id !== user._id))\r\n  }\r\n  const fetchintialusergroup = async () => {\r\n    const res1 = await fetch('http://localhost:5100/intialindires', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ receiver: username }),\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const data1 = await res1.json();\r\n\r\n    const res2 = await fetch('http://localhost:5200/intialresultgroup', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ receiver: username }),\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const data2 = await res2.json();\r\n\r\n\r\n    let tresult = [...data1, ...data2];\r\n\r\n\r\n    let temp = tresult.sort((b, a) => {\r\n      // Parse dates (currentDate is in DD/MM/YYYY format)\r\n      const [dayA, monthA, yearA] = a.currentDate.split('/').map(Number);\r\n      const [dayB, monthB, yearB] = b.currentDate.split('/').map(Number);\r\n\r\n      // Compare years, months, days first\r\n      if (yearA !== yearB) return yearA - yearB;\r\n      if (monthA !== monthB) return monthA - monthB;\r\n      if (dayA !== dayB) return dayA - dayB;\r\n\r\n      // If the dates are the same, compare times\r\n      const timeA = a.currentTime.split(':').map(Number); // [hours, minutes, seconds]\r\n      const timeB = b.currentTime.split(':').map(Number);\r\n\r\n      // Compare hours, minutes, seconds\r\n      if (timeA[0] !== timeB[0]) return timeA[0] - timeB[0];\r\n      if (timeA[1] !== timeB[1]) return timeA[1] - timeB[1];\r\n      return timeA[2] - timeB[2];\r\n    });\r\n\r\n    console.log(data2);\r\n\r\n    let tempdata = data2.flatMap((user) => user.groupmember);\r\n    console.log(tempdata);\r\n\r\n    setGroupmember(tempdata);\r\n\r\n    // Update the state with sorted entries\r\n    setIntial_user_group([...temp]); // Create a new array to ensure immutability\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchintialusergroup();\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {addgroupModal &&\r\n        <div className='bg-gray-300 fixed top-10 left-[25vw] h-[80vh] w-[50vw] z-20'>\r\n          <button onClick={switchModal} className='bg-red-500  hover:bg-red-600 rounded mt-[1vh] mr-[0.5vw] float-right text-[1.5vw] h-[8vh] w-[5vw]' >Close</button>\r\n          <input type=\"text\" id=\"group_name\" name=\"\" placeholder='Enter Group Name: ' className='relative top-4 left-4 w-[30vw] h-[6vh] p-2 border-black' />\r\n          <input type=\"text\" id=\"search_user\" onChange={e => searchusersforgroup(e)} name=\"\" placeholder='Search User: ' className='relative top-7 left-4 w-[30vw] h-[6vh] p-2 border-black' />\r\n          <div className='bg-white h-[45vh] mt-[7vh] w-[23vw] ml-[1vw] float-left overflow-y-auto class=\"[&::-webkit-scrollbar]:hidden [-ms-overflow-style:none] [scrollbar-width:none]'>\r\n            {searchusersgroup.length > 0 ? (\r\n              <ul className='text-2xl mt-2  searchnot'>\r\n                {searchusersgroup.map((user) => (user.username != username &&\r\n                  <li key={user._id} style={{ width: '90%', marginLeft: '5%' }} className='border-8 cursor-pointer mt-2 border-gray-700 pl-2  h-[9vh]  w-88  searchnot text-[2vw]'>{user.username} <button type=\"button\" onClick={e => addingroup(e, user)} className='bg-green-300 hover:bg-green-600 h-[5vh] float-right mt-1 mr-1 rounded w-[6vw]'>ADD</button> </li>\r\n                ))}\r\n              </ul>\r\n            ) : (<ul className='text-[1.8vw] mt-2 ml-7 searchnot'> No Users found</ul>)}\r\n          </div>\r\n          <div className='bg-white h-[45vh] mt-[7vh] w-[23vw] mr-[1vw] float-right'>\r\n            {usersingroups.length > 0 ? (\r\n              <ul className='text-2xl mt-2  searchnot'>\r\n                {usersingroups.map((user) => (\r\n                  <li key={user._id} style={{ width: '90%', marginLeft: '5%' }} className='border-8 cursor-pointer mt-2 border-gray-700 pl-2  h-[9vh]  w-88  searchnot text-[2vw]'>{user.username} <button type=\"button\" onClick={e => removeingroup(e, user)} className='bg-red-500 hover:bg-red-600 h-[5vh] float-right mt-1 mr-1 rounded w-[8vw]'>Remove</button> </li>\r\n                ))}\r\n              </ul>\r\n            ) : (<ul className='text-[1.8vw] mt-2 ml-7 searchnot'> No Users is added</ul>)}\r\n          </div>\r\n          <div id='display_res' className='text-red-500 h-[5vh] mt-[54vh] mx-auto w-[30vw] text-center'></div>\r\n          <button className='bg-green-500  hover:bg-green-600 rounded ml-[20vw]  mt-[1vh] text-[1.5vw] h-[6vh] w-[8vw]' onClick={e => submitNewGroup(e)} >Submit</button>\r\n        </div>}\r\n      <div className='flex flex-row h-screen' onClick={handleContainerClick} >\r\n        <div className=' bg-gray-400' style={{ width: '5%', height: '100%' }}>\r\n\r\n        </div>\r\n        <div style={{ width: '40%', height: \"100%\" }}>\r\n          <div className='bg-fixed'>\r\n            <span className='text-[2vw] font-bold relative top-3 pl-[2vw]'>\r\n              Chats\r\n            </span>\r\n\r\n            <button type=\"button\" id=\"to_add_group\" className='relative left-[13vw] text-[2vw] top-3 font-bold border-gray-500 rounded-lg border-[0.5vw] border-solid visible' onClick={switchModal}>New Group Chat</button>\r\n\r\n\r\n            <br />\r\n            <div className='mt-10 flex items-center' id='search_container' style={{ marginLeft: '5%' }}>\r\n              <span className='rounded-l-md bg-gray-200 h-10 pl-3 hover:cursor-pointer' onClick={(e) => clickOnImage(e)}><img src=\"/searchIcon.png\" alt=\"\" style={{ height: '30px', width: '25px' }} id='search_image' className='inline-block h-10 w-3 pt-2' /></span>\r\n              <input type=\"text\" ref={inputRef} placeholder='Search' id=\"search_user\" className=' h-10 rounded-r-md inline bg-gray-200' onChange={(e) => oninput(e)}\r\n                style={{ outline: 'None', width: '90%', paddingLeft: '10%', marginRight: '5%' }} onClick={(e) => clickOnImage(e)} />\r\n            </div>\r\n          </div>\r\n          {searchbool ? (\r\n            <div id='search_panel' className='searchnot overflow-auto' style={{ maxHeight: '480px', overflowY: 'auto' }}>\r\n\r\n              {searchusers.length > 0 ? (\r\n                <ul className='text-2xl mt-2  searchnot'>\r\n                  <span className='ml-[2.2vw] text-[2vw] searchnot'>Search User</span>\r\n                  {searchusers.map((user) => (\r\n                    <li key={user._id} onClick={(e) => startindivimessage(e, user.username)} className='border-8 cursor-pointer mt-[2vh] ml-[2vw] border-gray-700 pl-[1vw] pt-[1vh]  h-[10vh]  w-[36vw]  searchnot text-[2vw]'>{user.username}</li>\r\n                  ))}\r\n                </ul>\r\n              ) : <div className='ml-[2.2vw] mt-[0.5vh] text-[2vw] searchnot'>Search User not Found</div>}\r\n            </div>) :\r\n            (<div className='overflow-auto h-[78vh] class=\"[&::-webkit-scrollbar]:hidden [-ms-overflow-style:none] [scrollbar-width:none]'  >\r\n              {intial_user_group.length > 0 && (\r\n                <ul className=''>\r\n                  <div >\r\n                    {intial_user_group.map((item, index) => (\r\n                      <li key={index} className='border-8 cursor-pointer mt-[2vh] ml-[2vw] border-gray-700 pl-[1vw] pt-[1vh]   w-[36vw]  searchnot text-[2vw]'>\r\n                        {/* Group Box */}\r\n                        {item.groupname ? (\r\n                          <div className='h-[12vh] relative' onClick={(e) => startgroupmessage(e, item.groupname)}>\r\n                            <p className=\"text-[3vh] font-bold text-blue-800\">{item.groupname}</p>\r\n                            <p className=\"text-[2vh] text-gray-600 float-right mr-2\">Date: {item.currentDate}</p>\r\n                            <p className=\"text-[2vh] text-gray-600 float-right absolute bottom-0 right-2\">Time: {item.currentTime}</p>\r\n                          </div>\r\n                        ) : (\r\n                          /* Individual Message Box */\r\n                          <div onClick={(e) => startindivimessage(e, item.sender)} className='h-[15vh] relative'>\r\n                            <p className=\"text-[3vh] font-bold text-green-800\">From: {item.sender}</p>\r\n                            <p className=\"text-[2vh] text-gray-600\">Message: {item.latestMessage}</p>\r\n                            <p className=\"text-[2vh] text-gray-600 float-right mr-2\">Date: {item.currentDate}</p>\r\n                            <p className=\"text-[2vh] text-gray-600 float-right absolute bottom-0  right-2\">Time: {item.currentTime}</p>\r\n                          </div>\r\n                        )}\r\n                      </li>\r\n                    ))}\r\n                  </div>\r\n                </ul>\r\n              )}\r\n\r\n            </div>)}\r\n        </div>\r\n        {mscreen ? (\r\n          <div className='h-screen text-[2vw] bg-gray-200 flex justify-center items-center' style={{ width: '55%' }}>\r\n            <div>\r\n              Start Messaging\r\n            </div>\r\n          </div>) :\r\n          (<div className='h-screen' style={{ width: '55%' }} >\r\n            <div className='bg-gray-500 pt-1 pl-10 text-[3vw]' style={{ height: '10%' }}>{senderGroupName}</div>\r\n            <div className='bg-gray-300 flex-1 overflow-y-auto' id=\"messageDisplay\" style={{ height: '80%' }} ></div>\r\n            <div className='bg-red-300 ' style={{ height: '10%' }}><input type=\"text\" value={messagetext} onChange={e => messageBox(e)} onClick={e => messageBox(e, false)} name=\"\" id=\"\" className='inline-block ' style={{ width: '75%', paddingLeft: '1%', marginLeft: '10%', height: '70%', marginTop: '1%' }} /> <button style={{ width: '10%', height: '50%' }}><img src=\"/rightarrow.png\" onClick={groupMessages==false?(e) => sendMessage(e):(e)=>sendGroupmessage(e)} style={{ width: \"50%\", height: '150%', paddingTop: '5%' }} /></button></div>\r\n          </div>)}\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}