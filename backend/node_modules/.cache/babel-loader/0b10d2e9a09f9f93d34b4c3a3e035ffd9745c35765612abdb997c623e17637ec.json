{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Siddhant\\\\OneDrive\\\\Something\\\\chat_app\\\\src\\\\Homescreen.js\",\n  _s = $RefreshSig$();\nimport { React, useState, useRef, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  io\n} = require(\"socket.io-client\");\nconst socket = io.connect(\"http://localhost:5100\");\nexport default function Homescreen() {\n  _s();\n  const location = useLocation();\n  const inputRef = useRef(null);\n  const [groupMessages, setGroupMessage] = useState(false);\n  const {\n    username,\n    password\n  } = location.state || {};\n  const [searchusersgroup, setSearchUsersgroup] = useState([]);\n  const [searchusers, setSearchsUsers] = useState([]);\n  const [searchgroupMessages, setsearchGroupMessages] = useState([]);\n  const [searchbool, setSearchbool] = useState(false);\n  const [mscreen, setMscreen] = useState(true);\n  const [senderGroupName, setSenderGroupName] = useState(\"\");\n  const [currsendmessage, setCurrsendmessage] = useState(\"\");\n  const [groupmessage, setGroupmessage] = useState(\"\");\n  const [addgroupModal, setAddgroupModal] = useState(false);\n  const [messagetext, setmessagetext] = useState(\"Type message here\");\n  const [intial_user_group, setIntial_user_group] = useState([]);\n  const [usersingroups, setUsersingroups] = useState([]);\n  const switchModal = () => {\n    setAddgroupModal(!addgroupModal);\n    let to_add_group = document.getElementById(\"to_add_group\");\n    if (addgroupModal) {\n      to_add_group.classList.remove(\"invisible\");\n      to_add_group.classList.add(\"visible\");\n    } else {\n      to_add_group.classList.remove(\"visible\");\n      to_add_group.classList.add(\"invisible\");\n    }\n  };\n  const clickOnImage = event => {\n    const searchimage = document.getElementById('search_image');\n    let a = searchimage.attributes['src'];\n    if (a.nodeValue == '/leftArrow.png') {\n      fetchintialusergroup();\n      a.nodeValue = '/searchIcon.png';\n      setSearchbool(false);\n      setMscreen(true);\n      setmessagetext(\"Type message here\");\n    } else {\n      a.nodeValue = '/leftArrow.png';\n      setSearchbool(true);\n      if (inputRef.current) {\n        inputRef.current.focus();\n      }\n    }\n    event.stopPropagation();\n  };\n  const handleContainerClick = event => {\n    const target = event.target;\n    const searchimage = document.getElementById('search_image');\n    let a = searchimage.attributes['src'];\n    const flag = target.classList.contains('searchnot');\n  };\n  const oninput = async e => {\n    const value = e.target.value;\n    setSearchbool(true);\n    if (value.length > 0) {\n      const response = await fetch('http://localhost:5010/tofetch', {\n        method: 'POST',\n        body: JSON.stringify({\n          \"username\": value\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      const data_users = data.users;\n      const data_group = data.groupMessages;\n      setSearchsUsers(data_users || []);\n      setsearchGroupMessages(data_group || []);\n    } else {\n      setSearchsUsers([]);\n      setsearchGroupMessages([]);\n    }\n  };\n  useEffect(() => {\n    const handleReceiveMessage = data => {\n      const currentDate = data.currentDate;\n      const currentTime = data.currentTime;\n      const sender = data.sender;\n      const receiver = data.receiver;\n      const textToSend = data.textToSend;\n      if (currsendmessage == \"\") {\n        setCurrsendmessage({\n          \"currentDate\": currentDate,\n          \"currentTime\": currentTime,\n          \"sender\": sender,\n          \"receiver\": receiver,\n          \"textToSend\": textToSend\n        });\n        fetchintialusergroup();\n        if (senderGroupName == receiver) {\n          loadindimess(sender, receiver);\n        }\n      } else if (currsendmessage[\"currentTime\"] != currentTime) {\n        setCurrsendmessage({\n          \"currentDate\": currentDate,\n          \"currentTime\": currentTime,\n          \"sender\": sender,\n          \"receiver\": receiver,\n          \"textToSend\": textToSend\n        });\n        fetchintialusergroup();\n        if (senderGroupName == receiver) {\n          loadindimess(sender, receiver);\n        }\n      }\n    };\n    const handleGroupReceiveMessage = data => {\n      const currentDate = data.currentDate;\n      const currentTime = data.currentTime;\n      const groupreceivename = data.sender;\n      const receiver = data.receiver;\n      const chat = data.textToSend;\n      if (currsendmessage == \"\") {\n        setGroupMessage({\n          \"currentDate\": currentDate,\n          \"currentTime\": currentTime,\n          \"groupname\": groupreceivename,\n          \"receiver\": receiver,\n          \"chat\": chat\n        });\n        fetchintialusergroup();\n        loadgroupmess(receiver, senderGroupName);\n      } else if (groupmessage[\"currentTime\"] != currentTime) {\n        setGroupMessage({\n          \"currentDate\": currentDate,\n          \"currentTime\": currentTime,\n          \"groupname\": groupreceivename,\n          \"receiver\": receiver,\n          \"chat\": chat\n        });\n        fetchintialusergroup();\n        loadgroupmess(receiver, senderGroupName);\n      }\n    };\n    socket.on(\"receive_message\", handleReceiveMessage);\n    socket.on(\"receive_group_message\", handleGroupReceiveMessage);\n    return () => {\n      socket.off(\"receive_message\", handleReceiveMessage);\n    };\n  });\n  const startindivimessage = async (e, u2) => {\n    setMscreen(false);\n    const receiver = username;\n    const sender = u2;\n    setGroupMessage(false);\n    if (sender == receiver) {\n      const t1 = receiver + ' (Self)';\n      setSenderGroupName(t1);\n      socket.emit(\"join_room\", t1);\n    } else {\n      setSenderGroupName(sender);\n      const identifier1 = receiver + '#' + sender;\n      const identifier2 = sender + '#' + receiver;\n      socket.emit(\"join_room\", identifier1);\n      socket.emit(\"join_room\", identifier2);\n    }\n    setmessagetext(\"Type message here\");\n    loadindimess(receiver, sender);\n  };\n  const startgroupmessage = async (e, groupname) => {\n    setMscreen(false);\n    setGroupMessage(true);\n    setmessagetext(\"Type message here\");\n    const receiver = username;\n    socket.emit(\"join_room_group\", groupname);\n    setSenderGroupName(groupname);\n    loadgroupmess(receiver, groupname);\n  };\n  const loadgroupmess = async (receiver, groupname) => {\n    const response = await fetch('http://localhost:5200/loadgroupmessage', {\n      method: 'POST',\n      body: JSON.stringify({\n        \"groupname\": groupname\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const messageDisplayContainer = document.getElementById(\"messageDisplay\");\n    if (messageDisplayContainer != null) {\n      messageDisplayContainer.innerHTML = \"\";\n    }\n    const result = await response.json();\n    if (result.length === 0) {\n      messageDisplayContainer.innerHTML = \"\";\n      return;\n    }\n    let lastDate = \"28/12/2024\";\n    result.forEach(currentEle => {\n      const {\n        receiver: messageReceiver,\n        chat,\n        currentDate,\n        currentTime\n      } = currentEle;\n      if (currentDate !== lastDate) {\n        lastDate = currentDate;\n        const dateHeader = document.createElement(\"h1\");\n        dateHeader.className = \"flex justify-center items-center h-12\";\n        const dateContainer = document.createElement(\"span\");\n        dateContainer.className = \"bg-white border-3  border-yellow-700  text-[1.3vw] text-black h-[6vh] w-[6.5vw] py-[1vh] text-center rounded-md\";\n        dateContainer.innerText = currentDate;\n        dateHeader.append(dateContainer);\n        messageDisplayContainer.appendChild(dateHeader);\n      }\n      const messageBubble = document.createElement(\"div\");\n      messageBubble.className = `p-3 rounded-lg m-2 max-w-xs w-[20vw] ${username === messageReceiver ? \"bg-blue-500 text-white self-end ml-auto\" : \"bg-gray-200 text-black self-start mr-auto\"}`;\n      messageBubble.style.marginBottom = \"1rem\";\n      messageBubble.style.minHeight = \"10vh\";\n      messageBubble.style.height = \"auto\";\n      messageBubble.style.display = \"flex\";\n      messageBubble.style.flexDirection = \"column\";\n      const messageWrapper = document.createElement(\"div\");\n      messageWrapper.className = \"flex flex-col h-auto\";\n      const receiverText = document.createElement(\"p\");\n      receiverText.className = \"text-[1.1vw] font-semibold mb-1 text-gray-700 break-words\";\n      receiverText.innerText = `From: ${messageReceiver}`;\n      const messageText = document.createElement(\"p\");\n      messageText.className = \"text-[1.3vw] mb-1 break-words\";\n      messageText.innerText = chat;\n      const messageDateTime = document.createElement(\"span\");\n      messageDateTime.className = \"text-[1vw] text-white self-end break-words\";\n      messageDateTime.innerHTML = `${currentDate}<br>${currentTime}`;\n      messageWrapper.appendChild(receiverText);\n      messageWrapper.appendChild(messageText);\n      messageWrapper.appendChild(messageDateTime);\n      messageBubble.appendChild(messageWrapper);\n      messageDisplayContainer.appendChild(messageBubble);\n    });\n    messageDisplayContainer.scrollTop = messageDisplayContainer.scrollHeight;\n  };\n  const loadindimess = async (receiver, sender) => {\n    const response = await fetch('http://localhost:5100/tofetchindichat', {\n      method: 'POST',\n      body: JSON.stringify({\n        \"receiver\": receiver,\n        \"sender\": sender\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    let messageDisplayContainer = document.getElementById(\"messageDisplay\");\n    if (messageDisplayContainer != null) messageDisplayContainer.innerHTML = \"\";\n    const result = await response.json();\n    if (result.length == 0) {\n      messageDisplayContainer.innerHTML = \"\";\n      return;\n    }\n    result.sort((a, b) => {\n      const [dayA, monthA, yearA] = a.currentDate.split('/').map(Number);\n      const [dayB, monthB, yearB] = b.currentDate.split('/').map(Number);\n      if (yearA !== yearB) return yearA - yearB;\n      if (monthA !== monthB) return monthA - monthB;\n      if (dayA !== dayB) return dayA - dayB;\n      const timeA = a.currentTime.split(':').map(Number);\n      const timeB = b.currentTime.split(':').map(Number);\n      if (timeA[0] !== timeB[0]) return timeA[0] - timeB[0];\n      if (timeA[1] !== timeB[1]) return timeA[1] - timeB[1];\n      return timeA[2] - timeB[2];\n    });\n    let lastDate = \"10/12/2024\";\n    result.forEach(currentEle => {\n      const {\n        chat,\n        currentDate,\n        currentTime,\n        receiver,\n        sender,\n        whichuser\n      } = currentEle;\n      if (currentDate !== lastDate) {\n        lastDate = currentDate;\n        const dateHeader = document.createElement(\"h1\");\n        dateHeader.className = \"flex justify-center items-center h-12\";\n        const dateContainer = document.createElement(\"span\");\n        dateContainer.className = \"bg-white border-3  border-yellow-700  text-[1.3vw] text-black h-[6vh] w-[6.5vw] py-[1vh] text-center rounded-md\";\n        dateContainer.innerText = currentDate;\n        dateHeader.append(dateContainer);\n        messageDisplayContainer.appendChild(dateHeader);\n      }\n      const messageBubble = document.createElement(\"div\");\n      messageBubble.className = `p-3 rounded-lg m-2 max-w-xs w-[20vw] ${whichuser === receiver ? \"bg-blue-500 text-black self-end ml-auto\" : \"bg-gray-200 text-black self-start mr-auto\"}`;\n      messageBubble.style.marginBottom = \"1rem\";\n      messageBubble.style.minHeight = \"10vh\";\n      messageBubble.style.height = \"auto\";\n      messageBubble.style.display = \"flex\";\n      messageBubble.style.flexDirection = \"column\";\n      const messageWrapper = document.createElement(\"div\");\n      messageWrapper.className = \"flex flex-col\";\n      const messageText = document.createElement(\"p\");\n      messageText.className = \"text-[1.3vw] mb-1 break-words\";\n      messageText.innerText = chat;\n      const messageTime = document.createElement(\"span\");\n      messageTime.className = \"text-[1vw] text-white self-end\";\n      messageTime.innerText = currentTime;\n      messageWrapper.appendChild(messageText);\n      messageWrapper.appendChild(messageTime);\n      messageBubble.appendChild(messageWrapper);\n      messageDisplayContainer.appendChild(messageBubble);\n    });\n    messageDisplayContainer.scrollTop = messageDisplayContainer.scrollHeight;\n  };\n  const messageBox = async (e, flag = \"true\") => {\n    e.stopPropagation();\n    if (flag == \"true\") {\n      if (messagetext == \"Type message here\") {\n        const d = e.target.value;\n        const i = d.indexOf('Type message here');\n        const m1 = d.substring(i + 'Type message here'.length);\n        setmessagetext(m1);\n      } else if (e.target.value && e.target.value.length > 0) {\n        setmessagetext(e.target.value);\n      } else {\n        setmessagetext(\"Type message here\");\n      }\n    } else {\n      if (messagetext == \"Type message here\") {\n        e.target.value = \"\";\n        setmessagetext(e.target.value);\n      }\n    }\n  };\n  const sendGroupmessage = async e => {\n    const chat = messagetext;\n    const groupname = senderGroupName;\n    const receiver = username;\n    const now = new Date();\n    const day = now.getDate();\n    const month = now.getMonth() + 1;\n    const year = now.getFullYear();\n    const hours = now.getHours();\n    const minutes = now.getMinutes();\n    const seconds = now.getSeconds();\n    const currentDate = `${day}/${month}/${year}`;\n    const currentTime = `${hours}:${minutes}:${seconds}`;\n    setmessagetext(\"Type message here\");\n    const response = await fetch('http://localhost:5200/savegroupmessage', {\n      method: 'POST',\n      body: JSON.stringify({\n        \"receiver\": receiver,\n        \"groupname\": groupname,\n        \"chat\": chat,\n        \"currentDate\": currentDate,\n        \"currentTime\": currentTime\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    socket.emit('send_message_group', {\n      receiver,\n      groupname,\n      chat,\n      currentDate,\n      currentTime\n    });\n    setSearchbool(false);\n    fetchintialusergroup();\n    loadgroupmess(receiver, senderGroupName);\n  };\n  const sendMessage = async e => {\n    const textToSend = messagetext;\n    const receiver = username;\n    const sender = senderGroupName;\n    if (textToSend.length == 0) {\n      setmessagetext(\"Type message here\");\n      return;\n    }\n    if (groupMessages == false) {\n      const identifier = receiver + ' (Self)';\n      if (senderGroupName == identifier) {\n        const now = new Date();\n        const day = now.getDate();\n        const month = now.getMonth() + 1;\n        const year = now.getFullYear();\n        const hours = now.getHours();\n        const minutes = now.getMinutes();\n        const seconds = now.getSeconds();\n        const currentDate = `${day}/${month}/${year}`;\n        const currentTime = `${hours}:${minutes}:${seconds}`;\n        setmessagetext(\"Type message here\");\n        const response = await fetch('http://localhost:5100/saveindichat', {\n          method: 'POST',\n          body: JSON.stringify({\n            \"receiver\": receiver,\n            \"sender\": receiver,\n            \"whichuser\": receiver,\n            \"textToSend\": textToSend,\n            \"currentDate\": currentDate,\n            \"currentTime\": currentTime\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        setSearchbool(false);\n        fetchintialusergroup();\n        loadindimess(receiver, receiver);\n      } else {\n        const identifier1 = receiver + '#' + sender;\n        const identifier2 = sender + '#' + receiver;\n        const now = new Date();\n        const day = now.getDate();\n        const month = now.getMonth() + 1;\n        const year = now.getFullYear();\n        const hours = now.getHours();\n        const minutes = now.getMinutes();\n        const seconds = now.getSeconds();\n        const currentDate = `${day}/${month}/${year}`;\n        const currentTime = `${hours}:${minutes}:${seconds}`;\n        setmessagetext(\"Type message here\");\n        const response = await fetch('http://localhost:5100/saveindichat', {\n          method: 'POST',\n          body: JSON.stringify({\n            \"receiver\": receiver,\n            \"sender\": sender,\n            \"whichuser\": receiver,\n            \"textToSend\": textToSend,\n            \"currentDate\": currentDate,\n            \"currentTime\": currentTime\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const result = await response.json();\n        const response2 = await fetch('http://localhost:5100/saveindichat', {\n          method: 'POST',\n          body: JSON.stringify({\n            \"receiver\": sender,\n            \"sender\": receiver,\n            \"whichuser\": receiver,\n            \"textToSend\": textToSend,\n            \"currentDate\": currentDate,\n            \"currentTime\": currentTime\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const result2 = await response2.json();\n        socket.emit('send_message', {\n          identifier1,\n          identifier2,\n          receiver,\n          sender,\n          textToSend,\n          currentDate,\n          currentTime\n        });\n        setSearchbool(false);\n        fetchintialusergroup();\n        loadindimess(receiver, senderGroupName);\n      }\n    }\n  };\n  const submitNewGroup = async () => {\n    let group_name = document.getElementById(\"group_name\");\n    const val = group_name.value;\n    if (val.length == 0) {\n      let display_res = document.getElementById(\"display_res\");\n      display_res.textContent = \"Enter Group Name\";\n      return;\n    } else {\n      let display_res = document.getElementById(\"display_res\");\n      display_res.textContent = \"\";\n    }\n    if (usersingroups.length <= 1) {\n      let display_res = document.getElementById(\"display_res\");\n      display_res.textContent = \"Atleast 2 users are required\";\n      return;\n    } else {\n      let display_res = document.getElementById(\"display_res\");\n      display_res.textContent = \"\";\n    }\n    const response = await fetch('http://localhost:4000/signup', {\n      method: 'POST',\n      body: JSON.stringify({\n        \"username\": val\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    const length = data.length;\n    if (length == 1) {\n      let display_res = document.getElementById(\"display_res\");\n      display_res.textContent = \"Group name matches with username\";\n      return;\n    }\n    const res = await fetch(\"http://localhost:5200/checkgroupexist\", {\n      method: 'POST',\n      body: JSON.stringify({\n        \"groupname\": val\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const res2 = await res.json();\n    if (res2.flag == \"true\") {\n      let display_res = document.getElementById(\"display_res\");\n      display_res.textContent = \"Group name already exists\";\n      return;\n    } else {\n      let display_res = document.getElementById(\"display_res\");\n      display_res.textContent = \"\";\n    }\n    let groupmember = [];\n    groupmember = usersingroups.map(user => user.username);\n    groupmember.push(username);\n    const now = new Date();\n    const day = now.getDate();\n    const month = now.getMonth() + 1;\n    const year = now.getFullYear();\n    const hours = now.getHours();\n    const minutes = now.getMinutes();\n    const seconds = now.getSeconds();\n    const currentDate = `${day}/${month}/${year}`;\n    const currentTime = `${hours}:${minutes}:${seconds}`;\n    const response2 = await fetch('http://localhost:5200/savegroupinfo', {\n      method: 'POST',\n      body: JSON.stringify({\n        \"receiver\": username,\n        \"groupname\": val,\n        \"groupmember\": groupmember,\n        \"currentDate\": currentDate,\n        \"currentTime\": currentTime\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    let display_res = document.getElementById(\"display_res\");\n    display_res.textContent = \"Group created successfully\";\n    setTimeout(() => {\n      switchModal();\n      setSearchUsersgroup([]);\n      setUsersingroups([]);\n      fetchintialusergroup();\n    }, 2000);\n  };\n  const searchusersforgroup = async e => {\n    const sender = e.target.value;\n    if (sender.length > 0) {\n      const response = await fetch('http://localhost:5010/tofetch', {\n        method: 'POST',\n        body: JSON.stringify({\n          \"username\": sender\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      const data_users = data.users;\n      const data_group = data.groupMessages;\n      setSearchUsersgroup(data_users || []);\n    } else {\n      setSearchUsersgroup([]);\n    }\n  };\n  const addingroup = (e, user) => {\n    e.preventDefault();\n    const alreadyAdded = usersingroups.some(element => element._id === user._id);\n    if (alreadyAdded) return;\n    setUsersingroups(prev => [...prev, user]);\n  };\n  const removeingroup = (e, user) => {\n    e.preventDefault();\n    setUsersingroups(prev => prev.filter(element => element._id !== user._id));\n  };\n  const fetchintialusergroup = async () => {\n    const res1 = await fetch('http://localhost:5100/intialindires', {\n      method: 'POST',\n      body: JSON.stringify({\n        receiver: username\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data1 = await res1.json();\n    const res2 = await fetch('http://localhost:5200/intialresultgroup', {\n      method: 'POST',\n      body: JSON.stringify({\n        receiver: username\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data2 = await res2.json();\n    const processedData2 = await Promise.all(data2.map(async group => {\n      var _data3$, _data3$2, _data3$3;\n      const {\n        groupname,\n        currentDate,\n        currentTime,\n        groupmember\n      } = group;\n      const res3 = await fetch('http://localhost:5200/intialgroupres', {\n        method: 'POST',\n        body: JSON.stringify({\n          groupname\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data3 = await res3.json();\n      const latestMessage = ((_data3$ = data3[0]) === null || _data3$ === void 0 ? void 0 : _data3$.latestMessage) || \"Start your messaging\";\n      const n1currentDate = ((_data3$2 = data3[0]) === null || _data3$2 === void 0 ? void 0 : _data3$2.currentDate) || currentDate;\n      const n1currentTime = ((_data3$3 = data3[0]) === null || _data3$3 === void 0 ? void 0 : _data3$3.currentTime) || currentTime;\n      return {\n        groupname,\n        groupmember,\n        \"currentDate\": n1currentDate,\n        \"currentTime\": n1currentTime,\n        chat: latestMessage\n      };\n    }));\n    let tresult = [...data1, ...processedData2];\n    let temp = tresult.sort((b, a) => {\n      const [dayA, monthA, yearA] = a.currentDate.split('/').map(Number);\n      const [dayB, monthB, yearB] = b.currentDate.split('/').map(Number);\n      if (yearA !== yearB) return yearA - yearB;\n      if (monthA !== monthB) return monthA - monthB;\n      if (dayA !== dayB) return dayA - dayB;\n      const timeA = a.currentTime.split(':').map(Number);\n      const timeB = b.currentTime.split(':').map(Number);\n      if (timeA[0] !== timeB[0]) return timeA[0] - timeB[0];\n      if (timeA[1] !== timeB[1]) return timeA[1] - timeB[1];\n      return timeA[2] - timeB[2];\n    });\n    setIntial_user_group([...temp]);\n  };\n  useEffect(() => {\n    fetchintialusergroup();\n  }, []);\n  const [deleleCHAT, setDeleteChat] = useState(false);\n  const toggleExit = () => {\n    setDeleteChat(!deleleCHAT);\n    if (deleleCHAT == false) {}\n  };\n  const deletechat = async () => {\n    const receiver = username;\n    const sender = senderGroupName;\n    let delele_result = document.getElementById(\"delete_result\");\n    if (groupMessages == true) {\n      delele_result.innerHTML = \"Group Chat is deleted\";\n      const response = await fetch('http://localhost:5200/getgroupmember', {\n        method: 'POST',\n        body: JSON.stringify({\n          \"groupname\": senderGroupName\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const res = await response.json();\n      let groupmember = res[0].groupmember;\n      let newgroupmember = [];\n      groupmember.forEach(user => {\n        if (user != username) {\n          newgroupmember.push(user);\n        }\n      });\n      const response2 = await fetch('http://localhost:5200/updategroupmember', {\n        method: 'POST',\n        body: JSON.stringify({\n          \"groupname\": senderGroupName,\n          \"groupmember\": newgroupmember\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    } else {\n      delele_result.innerHTML = \"Individual Chat is deleted\";\n      const response = await fetch('http://localhost:5100/deleteindichat', {\n        method: 'DELETE',\n        body: JSON.stringify({\n          \"receiver\": receiver,\n          \"sender\": sender\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    }\n    setTimeout(() => {\n      delele_result.innerHTML = \"\";\n      setDeleteChat(false);\n      setMscreen(true);\n      setSenderGroupName(\"\");\n      fetchintialusergroup();\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"100vh overflow-scroll class=\\\"[&::-webkit-scrollbar]:hidden [-ms-overflow-style:none] [scrollbar-width:none]\",\n      children: [addgroupModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-background fixed top-0 left-0 w-full h-full border-3 border-black  z-10 bg-black bg-opacity-50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 880,\n        columnNumber: 11\n      }, this), addgroupModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-300 border-4 border-black fixed top-10 left-[25vw] h-[80vh] w-[50vw] z-20 \",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: switchModal,\n          className: \"bg-red-500  hover:bg-red-600 border-4 border-black rounded mt-[1vh] mr-[0.5vw] float-right text-[1.5vw] h-[8vh] w-[5vw]\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 884,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"group_name\",\n          name: \"\",\n          placeholder: \"Enter Group Name: \",\n          className: \"relative top-4 left-4 w-[30vw] h-[6vh] p-2 border-black border-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 885,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"search_user\",\n          onChange: e => searchusersforgroup(e),\n          name: \"\",\n          placeholder: \"Search User: \",\n          className: \"relative top-7 left-4 w-[30vw] h-[6vh] p-2 border-black border-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 886,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white h-[45vh] mt-[7vh] w-[23vw] ml-[1vw] border-4 border-black float-left overflow-y-auto class=\\\"[&::-webkit-scrollbar]:hidden [-ms-overflow-style:none] [scrollbar-width:none]\",\n          children: searchusersgroup.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"text-2xl mt-2  searchnot\",\n            children: searchusersgroup.map(user => user.username != username && /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                width: '90%',\n                marginLeft: '5%'\n              },\n              className: \"border-4 cursor-pointer mt-2 border-black pl-2  h-[10vh]  w-88  searchnot text-[2vw]\",\n              children: [user.username, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: e => addingroup(e, user),\n                className: \"bg-green-300 hover:bg-green-600 h-[6vh] border-4 border-black float-right mt-[1.3vh] mr-1 rounded w-[6vw]\",\n                children: \"ADD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 891,\n                columnNumber: 196\n              }, this), \" \"]\n            }, user._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 891,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 889,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"text-[1.8vw] mt-2 ml-7 searchnot\",\n            children: \" No Users found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 894,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 887,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white h-[45vh] border-4 border-black mt-[7vh] w-[23vw] mr-[1vw] float-right\",\n          children: usersingroups.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"text-2xl mt-2  searchnot\",\n            children: usersingroups.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                width: '90%',\n                marginLeft: '5%'\n              },\n              className: \"border-4 cursor-pointer mt-2 border-black pl-2  h-[10vh]  w-88  searchnot text-[2vw]\",\n              children: [user.username, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: e => removeingroup(e, user),\n                className: \"bg-red-500 hover:bg-red-600 border-4 border-black h-[6vh] float-right mt-[1.3vh] mr-1 rounded w-[8vw]\",\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 900,\n                columnNumber: 196\n              }, this), \" \"]\n            }, user._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 900,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 898,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"text-[1.8vw] mt-2 ml-7 searchnot\",\n            children: \" No Users is added\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 903,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 896,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"display_res\",\n          className: \"text-red-500 h-[6vh] mt-[54vh] mx-auto w-[30vw] text-center\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 905,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-green-500  hover:bg-green-600 rounded ml-[20vw] border-4 border-black mt-[0.5vh] text-[1.5vw] h-[6vh] w-[8vw]\",\n          onClick: e => submitNewGroup(e),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 906,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 883,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row h-screen\",\n        onClick: handleContainerClick,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-400 flex items-center justify-center\",\n          style: {\n            width: '5vw',\n            height: '100vh'\n          },\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            className: \"inline mt-[85vh]\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-white rounded-xl h-[9vh] w-[4.8vw] border-4 text-[1.1vw] border-black hover:bg-gray-500\",\n              children: \"Log Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 912,\n              columnNumber: 55\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 912,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 909,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '40vw',\n            height: \"100vh\",\n            overflow: \"scroll\"\n          },\n          className: \"class=\\\"[&::-webkit-scrollbar]:hidden [-ms-overflow-style:none] [scrollbar-width:none]\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-fixed\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-[2vw] font-bold relative top-3 pl-[2vw]\",\n              children: \"Chats\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 917,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              id: \"to_add_group\",\n              className: \"relative left-[13vw] text-[2vw] top-3 font-bold border-black rounded-lg border-4 border-solid visible\",\n              onClick: switchModal,\n              children: \"New Group Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 921,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-[8vh] flex justify-center  ml-[2vw]\",\n              id: \"search_container\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"rounded-l-md bg-gray-200 inline-block h-[10vh] pl-[1vw] hover:cursor-pointer \",\n                onClick: e => clickOnImage(e),\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"/searchIcon.png\",\n                  alt: \"\",\n                  id: \"search_image\",\n                  className: \"inline-block h-[4vh] mt-[3vh]\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 924,\n                  columnNumber: 146\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 924,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                ref: inputRef,\n                placeholder: \"Search\",\n                id: \"search_user\",\n                className: \" h-[10vh] rounded-r-md inline bg-gray-200\",\n                onChange: e => oninput(e),\n                style: {\n                  outline: 'None',\n                  width: '90%',\n                  paddingLeft: '5%',\n                  marginRight: '5%'\n                },\n                onClick: e => clickOnImage(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 925,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 923,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 916,\n            columnNumber: 13\n          }, this), searchbool ? /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"search_panel\",\n            className: \"searchnot overflow-auto\",\n            style: {\n              maxHeight: '480px',\n              overflowY: 'auto'\n            },\n            children: searchusers.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"text-2xl mt-[2vh]  searchnot\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-[2.2vw] text-[2vw] searchnot\",\n                children: \"Search User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 934,\n                columnNumber: 21\n              }, this), searchusers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: e => startindivimessage(e, user.username),\n                className: \"rounded-xl border-4 cursor-pointer mt-[2vh] ml-[2vw] border-gray-700 pl-[1vw] pt-[1vh]  h-[10vh]  w-[36vw]  searchnot text-[2vw]\",\n                children: user.username\n              }, user._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 936,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 933,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-[2.2vw] mt-[0.5vh] text-[2vw] searchnot\",\n              children: \"Search User not Found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 939,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 930,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overflow-auto h-[78vh] class=\\\"[&::-webkit-scrollbar]:hidden [-ms-overflow-style:none] [scrollbar-width:none]\",\n            children: intial_user_group.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: intial_user_group.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"border-4 rounded-xl cursor-pointer mt-[2vh] ml-[2vw] border-gray-700 pl-[1vw] pt-[1vh]   w-[36vw]  searchnot text-[2vw]\",\n                  children: item.groupname ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"h-[15vh] relative\",\n                    onClick: e => startgroupmessage(e, item.groupname),\n                    rig: true,\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-[3vh] font-bold text-blue-800\",\n                      children: item.groupname\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 950,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-[2vh] text-gray-600 overflow-hidden text-ellipsis whitespace-nowrap\",\n                      children: [\"Message: \", item.chat]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 951,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-[2vh] text-gray-600 float-right mr-2\",\n                      children: [\"Date: \", item.currentDate]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 952,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-[2vh] text-gray-600 float-right absolute bottom-0 right-2\",\n                      children: [\"Time: \", item.currentTime]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 953,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 949,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    onClick: e => startindivimessage(e, item.sender),\n                    className: \"h-[15vh] relative\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-[3vh] font-bold text-green-800\",\n                      children: [\"From: \", item.sender]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 958,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-[2vh] text-gray-600 overflow-hidden text-ellipsis whitespace-nowrap\",\n                      children: [\"Message: \", item.latestMessage]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 959,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-[2vh] text-gray-600 float-right mr-2\",\n                      children: [\"Date: \", item.currentDate]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 960,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-[2vh] text-gray-600 float-right absolute bottom-0  right-2\",\n                      children: [\"Time: \", item.currentTime]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 961,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 957,\n                    columnNumber: 29\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 946,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 944,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 943,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 941,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 915,\n          columnNumber: 11\n        }, this), mscreen ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-screen text-[2vw] flex justify-center items-center\",\n          style: {\n            width: '55vw',\n            backgroundColor: \"#FFDEE9\",\n            backgroundImage: \"linear-gradient(0deg, #FFDEE9 0%, #B5FFFC 100%)\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Start Messaging\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 977,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 973,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-screen\",\n          style: {\n            width: '55%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-300 pl-10 text-[6vh] h-10vh\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center w-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-[3vw]\",\n                children: senderGroupName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 984,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"inline-block mr-2 mb-2\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: toggleExit,\n                  className: \"bg-green-400 h-[8vh] w-[10vw] text-[2vw] border-black rounded-md hover:bg-green-600 border-[0.2vw]\",\n                  children: [\"Exit \", groupMessages === true ? \"Group\" : \"Chat\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 986,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 985,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 983,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 982,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 overflow-y-auto class=\\\"[&::-webkit-scrollbar]:hidden [-ms-overflow-style:none] [scrollbar-width:none]\",\n            id: \"messageDisplay\",\n            style: {\n              height: '80%',\n              backgroundImage: \"linear-gradient( 109.6deg,  rgba(112,246,255,0.33) 11.2%, rgba(221,108,241,0.26) 42%, rgba(229,106,253,0.71) 71.5%, rgba(123,183,253,1) 100.2% )\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 993,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-500\",\n            style: {\n              height: '10%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: messagetext,\n              onChange: e => messageBox(e),\n              onClick: e => messageBox(e, false),\n              name: \"\",\n              id: \"\",\n              className: \"inline-block \",\n              style: {\n                width: '75%',\n                paddingLeft: '1%',\n                marginLeft: '10%',\n                height: '70%',\n                marginTop: '1%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 996,\n              columnNumber: 70\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                width: '10%',\n                height: '50%'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/rightarrow.png\",\n                onClick: groupMessages == false ? e => sendMessage(e) : e => sendGroupmessage(e),\n                style: {\n                  width: \"50%\",\n                  height: '150%',\n                  paddingTop: '5%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 996,\n                columnNumber: 361\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 996,\n              columnNumber: 313\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 996,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 981,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 908,\n        columnNumber: 9\n      }, this), deleleCHAT && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-background fixed top-0 left-0 w-full h-full z-10 bg-black bg-opacity-50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1000,\n        columnNumber: 11\n      }, this), deleleCHAT && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-300 fixed top-[30vh] left-[25vw] h-[30vh] w-[50vw] z-20 \",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500 h-[5vh] text-[1.4vw] mx-auto w-[30vw] text-center\",\n          children: \"Are you sure you want to delete that chat?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1004,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500 h-[5vh] text-[1.4vw] w-[50vw] text-center \",\n          children: groupMessages == true ? \"On deleteting you will exit the group\" : \"On deleting message user will be delete from your homelist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1005,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"delete_result\",\n          className: \"h-[5vh] text-green-500 mt-[1vh] text-[1.5vw] text-center\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1006,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-[1vh]\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-green-500 hover:bg-green-600 h-[9vh] rounded-xl border-4 border-black w-[15vw] ml-[3vw]\",\n            onClick: deletechat,\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1007,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleExit,\n            className: \"bg-red-500 hover:bg-red-700 border-4 border-black h-[9vh] w-[15vw] rounded-xl float-right mr-[3vw]\",\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1007,\n            columnNumber: 183\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1007,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1003,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 878,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Homescreen, \"crz8Gj1tqONXgF9UdmAwzmdOgCU=\", false, function () {\n  return [useLocation];\n});\n_c = Homescreen;\nvar _c;\n$RefreshReg$(_c, \"Homescreen\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Link","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","io","require","socket","connect","Homescreen","_s","location","inputRef","groupMessages","setGroupMessage","username","password","state","searchusersgroup","setSearchUsersgroup","searchusers","setSearchsUsers","searchgroupMessages","setsearchGroupMessages","searchbool","setSearchbool","mscreen","setMscreen","senderGroupName","setSenderGroupName","currsendmessage","setCurrsendmessage","groupmessage","setGroupmessage","addgroupModal","setAddgroupModal","messagetext","setmessagetext","intial_user_group","setIntial_user_group","usersingroups","setUsersingroups","switchModal","to_add_group","document","getElementById","classList","remove","add","clickOnImage","event","searchimage","a","attributes","nodeValue","fetchintialusergroup","current","focus","stopPropagation","handleContainerClick","target","flag","contains","oninput","e","value","length","response","fetch","method","body","JSON","stringify","headers","data","json","data_users","users","data_group","handleReceiveMessage","currentDate","currentTime","sender","receiver","textToSend","loadindimess","handleGroupReceiveMessage","groupreceivename","chat","loadgroupmess","on","off","startindivimessage","u2","t1","emit","identifier1","identifier2","startgroupmessage","groupname","messageDisplayContainer","innerHTML","result","lastDate","forEach","currentEle","messageReceiver","dateHeader","createElement","className","dateContainer","innerText","append","appendChild","messageBubble","style","marginBottom","minHeight","height","display","flexDirection","messageWrapper","receiverText","messageText","messageDateTime","scrollTop","scrollHeight","sort","b","dayA","monthA","yearA","split","map","Number","dayB","monthB","yearB","timeA","timeB","whichuser","messageTime","messageBox","d","i","indexOf","m1","substring","sendGroupmessage","now","Date","day","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","sendMessage","identifier","response2","result2","submitNewGroup","group_name","val","display_res","textContent","res","res2","groupmember","user","push","setTimeout","searchusersforgroup","addingroup","preventDefault","alreadyAdded","some","element","_id","prev","removeingroup","filter","res1","data1","data2","processedData2","Promise","all","group","_data3$","_data3$2","_data3$3","res3","data3","latestMessage","n1currentDate","n1currentTime","tresult","temp","deleleCHAT","setDeleteChat","toggleExit","deletechat","delele_result","newgroupmember","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","id","name","placeholder","onChange","width","marginLeft","to","overflow","src","alt","ref","outline","paddingLeft","marginRight","maxHeight","overflowY","item","index","rig","backgroundColor","backgroundImage","marginTop","paddingTop","_c","$RefreshReg$"],"sources":["C:/Users/Siddhant/OneDrive/Something/chat_app/src/Homescreen.js"],"sourcesContent":["import { React, useState, useRef, useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nconst { io } = require(\"socket.io-client\");\r\n\r\n\r\nconst socket = io.connect(\"http://localhost:5100\")\r\n\r\nexport default function Homescreen() {\r\n  const location = useLocation();\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  const [groupMessages, setGroupMessage] = useState(false);\r\n\r\n  const { username, password } = location.state || {};\r\n\r\n  const [searchusersgroup, setSearchUsersgroup] = useState([]);\r\n\r\n  const [searchusers, setSearchsUsers] = useState([]);\r\n  const [searchgroupMessages, setsearchGroupMessages] = useState([]);\r\n\r\n  const [searchbool, setSearchbool] = useState(false);\r\n\r\n  const [mscreen, setMscreen] = useState(true);\r\n\r\n  const [senderGroupName, setSenderGroupName] = useState(\"\");\r\n\r\n  const [currsendmessage, setCurrsendmessage] = useState(\"\");\r\n\r\n\r\n  const [groupmessage, setGroupmessage] = useState(\"\");\r\n\r\n  const [addgroupModal, setAddgroupModal] = useState(false);\r\n\r\n\r\n  const [messagetext, setmessagetext] = useState(\"Type message here\");\r\n\r\n  const [intial_user_group, setIntial_user_group] = useState([]);\r\n\r\n  const [usersingroups, setUsersingroups] = useState([])\r\n\r\n\r\n\r\n  const switchModal = () => {\r\n    setAddgroupModal(!addgroupModal);\r\n    let to_add_group = document.getElementById(\"to_add_group\");\r\n    if (addgroupModal) {\r\n\r\n      to_add_group.classList.remove(\"invisible\");\r\n      to_add_group.classList.add(\"visible\");\r\n    } else {\r\n\r\n      to_add_group.classList.remove(\"visible\");\r\n      to_add_group.classList.add(\"invisible\");\r\n    }\r\n  }\r\n\r\n\r\n  const clickOnImage = (event) => {\r\n    const searchimage = document.getElementById('search_image');\r\n    let a = searchimage.attributes['src']\r\n    if (a.nodeValue == '/leftArrow.png') {\r\n      fetchintialusergroup();\r\n      a.nodeValue = '/searchIcon.png';\r\n      setSearchbool(false);\r\n      setMscreen(true);\r\n      setmessagetext(\"Type message here\");\r\n    }\r\n    else {\r\n      a.nodeValue = '/leftArrow.png';\r\n      setSearchbool(true);\r\n\r\n      if (inputRef.current) {\r\n        inputRef.current.focus();\r\n      }\r\n\r\n    }\r\n    event.stopPropagation();\r\n\r\n  }\r\n\r\n  const handleContainerClick = (event) => {\r\n    const target = event.target;\r\n    const searchimage = document.getElementById('search_image');\r\n    let a = searchimage.attributes['src']\r\n    const flag = target.classList.contains('searchnot');\r\n  }\r\n\r\n  const oninput = async (e) => {\r\n    const value = e.target.value;\r\n    setSearchbool(true);\r\n    if (value.length > 0) {\r\n      const response = await fetch('http://localhost:5010/tofetch', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ \"username\": value }),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n      const data = await response.json();\r\n      const data_users = data.users\r\n      const data_group = data.groupMessages;\r\n\r\n      setSearchsUsers(data_users || []);\r\n      setsearchGroupMessages(data_group || []);\r\n    }\r\n    else {\r\n      setSearchsUsers([]);\r\n      setsearchGroupMessages([]);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const handleReceiveMessage = (data) => {\r\n\r\n      const currentDate = data.currentDate;\r\n      const currentTime = data.currentTime;\r\n      const sender = data.sender;\r\n      const receiver = data.receiver;\r\n      const textToSend = data.textToSend;\r\n\r\n      if (currsendmessage == \"\") {\r\n        setCurrsendmessage({\r\n          \"currentDate\": currentDate,\r\n          \"currentTime\": currentTime,\r\n          \"sender\": sender,\r\n          \"receiver\": receiver,\r\n          \"textToSend\": textToSend\r\n        });\r\n\r\n        fetchintialusergroup();\r\n        if (senderGroupName == receiver) {\r\n\r\n          loadindimess(sender, receiver);\r\n        }\r\n\r\n      }\r\n      else if (currsendmessage[\"currentTime\"] != currentTime) {\r\n        setCurrsendmessage({\r\n          \"currentDate\": currentDate,\r\n          \"currentTime\": currentTime,\r\n          \"sender\": sender,\r\n          \"receiver\": receiver,\r\n          \"textToSend\": textToSend\r\n        });\r\n        fetchintialusergroup();\r\n        if (senderGroupName == receiver) {\r\n\r\n          loadindimess(sender, receiver);\r\n        }\r\n      }\r\n\r\n\r\n\r\n    };\r\n\r\n    const handleGroupReceiveMessage = (data) => {\r\n\r\n      const currentDate = data.currentDate;\r\n      const currentTime = data.currentTime;\r\n      const groupreceivename = data.sender;\r\n      const receiver = data.receiver;\r\n      const chat = data.textToSend;\r\n\r\n      if (currsendmessage == \"\") {\r\n        setGroupMessage({\r\n          \"currentDate\": currentDate,\r\n          \"currentTime\": currentTime,\r\n          \"groupname\": groupreceivename,\r\n          \"receiver\": receiver,\r\n          \"chat\": chat\r\n        })\r\n\r\n        fetchintialusergroup();\r\n\r\n        loadgroupmess(receiver, senderGroupName);\r\n\r\n\r\n      }\r\n      else if (groupmessage[\"currentTime\"] != currentTime) {\r\n        setGroupMessage({\r\n          \"currentDate\": currentDate,\r\n          \"currentTime\": currentTime,\r\n          \"groupname\": groupreceivename,\r\n          \"receiver\": receiver,\r\n          \"chat\": chat\r\n        })\r\n        fetchintialusergroup();\r\n\r\n        loadgroupmess(receiver, senderGroupName);\r\n\r\n\r\n      }\r\n\r\n\r\n\r\n    };\r\n\r\n    socket.on(\"receive_message\", handleReceiveMessage);\r\n\r\n\r\n    socket.on(\"receive_group_message\", handleGroupReceiveMessage);\r\n    return () => {\r\n      socket.off(\"receive_message\", handleReceiveMessage);\r\n    };\r\n  });\r\n\r\n\r\n\r\n\r\n\r\n  const startindivimessage = async (e, u2) => {\r\n    setMscreen(false);\r\n    const receiver = username;\r\n    const sender = u2;\r\n    setGroupMessage(false);\r\n    if (sender == receiver) {\r\n      const t1 = receiver + ' (Self)';\r\n      setSenderGroupName(t1);\r\n      socket.emit(\"join_room\", t1);\r\n    }\r\n    else {\r\n      setSenderGroupName(sender);\r\n      const identifier1 = receiver + '#' + sender;\r\n      const identifier2 = sender + '#' + receiver;\r\n      socket.emit(\"join_room\", identifier1);\r\n      socket.emit(\"join_room\", identifier2);\r\n    }\r\n    setmessagetext(\"Type message here\");\r\n    loadindimess(receiver, sender);\r\n  }\r\n\r\n  const startgroupmessage = async (e, groupname) => {\r\n    setMscreen(false);\r\n    setGroupMessage(true);\r\n    setmessagetext(\"Type message here\");\r\n    const receiver = username;\r\n    socket.emit(\"join_room_group\", groupname);\r\n    setSenderGroupName(groupname);\r\n    loadgroupmess(receiver, groupname);\r\n\r\n  }\r\n  const loadgroupmess = async (receiver, groupname) => {\r\n    const response = await fetch('http://localhost:5200/loadgroupmessage', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ \"groupname\": groupname }),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    const messageDisplayContainer = document.getElementById(\"messageDisplay\");\r\n    if (messageDisplayContainer != null) {\r\n      messageDisplayContainer.innerHTML = \"\";\r\n    }\r\n\r\n    const result = await response.json();\r\n\r\n    if (result.length === 0) {\r\n      messageDisplayContainer.innerHTML = \"\";\r\n      return;\r\n    }\r\n    let lastDate = \"28/12/2024\";\r\n\r\n    result.forEach((currentEle) => {\r\n      const { receiver: messageReceiver, chat, currentDate, currentTime } = currentEle;\r\n\r\n\r\n      if (currentDate !== lastDate) {\r\n        lastDate = currentDate;\r\n        const dateHeader = document.createElement(\"h1\");\r\n        dateHeader.className = \"flex justify-center items-center h-12\";\r\n\r\n        const dateContainer = document.createElement(\"span\");\r\n        dateContainer.className = \"bg-white border-3  border-yellow-700  text-[1.3vw] text-black h-[6vh] w-[6.5vw] py-[1vh] text-center rounded-md\";\r\n        dateContainer.innerText = currentDate;\r\n\r\n        dateHeader.append(dateContainer);\r\n        messageDisplayContainer.appendChild(dateHeader);\r\n      }\r\n\r\n      const messageBubble = document.createElement(\"div\");\r\n      messageBubble.className = `p-3 rounded-lg m-2 max-w-xs w-[20vw] ${username === messageReceiver\r\n        ? \"bg-blue-500 text-white self-end ml-auto\"\r\n        : \"bg-gray-200 text-black self-start mr-auto\"\r\n      }`;\r\n      messageBubble.style.marginBottom = \"1rem\";\r\n      messageBubble.style.minHeight = \"10vh\"; \r\n      messageBubble.style.height = \"auto\"; \r\n      messageBubble.style.display = \"flex\"; \r\n      messageBubble.style.flexDirection = \"column\";\r\n      \r\n      const messageWrapper = document.createElement(\"div\");\r\n      messageWrapper.className = \"flex flex-col h-auto\";\r\n      \r\n      const receiverText = document.createElement(\"p\");\r\n      receiverText.className = \"text-[1.1vw] font-semibold mb-1 text-gray-700 break-words\";\r\n      receiverText.innerText = `From: ${messageReceiver}`;\r\n      \r\n      const messageText = document.createElement(\"p\");\r\n      messageText.className = \"text-[1.3vw] mb-1 break-words\";\r\n      messageText.innerText = chat;\r\n      \r\n      const messageDateTime = document.createElement(\"span\");\r\n      messageDateTime.className = \"text-[1vw] text-white self-end break-words\";\r\n      messageDateTime.innerHTML = `${currentDate}<br>${currentTime}`;\r\n      \r\n      messageWrapper.appendChild(receiverText);\r\n      messageWrapper.appendChild(messageText);\r\n      messageWrapper.appendChild(messageDateTime);\r\n      \r\n      messageBubble.appendChild(messageWrapper);\r\n      \r\n      messageDisplayContainer.appendChild(messageBubble);\r\n      \r\n    });\r\n\r\n    messageDisplayContainer.scrollTop = messageDisplayContainer.scrollHeight;\r\n\r\n  };\r\n\r\n  const loadindimess = async (receiver, sender) => {\r\n\r\n\r\n    const response = await fetch('http://localhost:5100/tofetchindichat', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ \"receiver\": receiver, \"sender\": sender }),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    let messageDisplayContainer = document.getElementById(\"messageDisplay\");\r\n    if (messageDisplayContainer != null)\r\n      messageDisplayContainer.innerHTML = \"\";\r\n    const result = await response.json();\r\n    if (result.length == 0) {\r\n\r\n      messageDisplayContainer.innerHTML = \"\";\r\n      return;\r\n    }\r\n\r\n    result.sort((a, b) => {\r\n\r\n      const [dayA, monthA, yearA] = a.currentDate.split('/').map(Number);\r\n      const [dayB, monthB, yearB] = b.currentDate.split('/').map(Number);\r\n\r\n      if (yearA !== yearB) return yearA - yearB;\r\n      if (monthA !== monthB) return monthA - monthB;\r\n      if (dayA !== dayB) return dayA - dayB;\r\n\r\n      const timeA = a.currentTime.split(':').map(Number);\r\n      const timeB = b.currentTime.split(':').map(Number);\r\n\r\n\r\n      if (timeA[0] !== timeB[0]) return timeA[0] - timeB[0];\r\n      if (timeA[1] !== timeB[1]) return timeA[1] - timeB[1];\r\n      return timeA[2] - timeB[2];\r\n    });\r\n\r\n    let lastDate = \"10/12/2024\";\r\n\r\n    result.forEach((currentEle) => {\r\n      const { chat, currentDate, currentTime, receiver, sender, whichuser } = currentEle;\r\n\r\n\r\n      if (currentDate !== lastDate) {\r\n        lastDate = currentDate;\r\n        const dateHeader = document.createElement(\"h1\");\r\n        dateHeader.className = \"flex justify-center items-center h-12\";\r\n\r\n        const dateContainer = document.createElement(\"span\");\r\n        dateContainer.className = \"bg-white border-3  border-yellow-700  text-[1.3vw] text-black h-[6vh] w-[6.5vw] py-[1vh] text-center rounded-md\";\r\n        dateContainer.innerText = currentDate;\r\n\r\n        dateHeader.append(dateContainer);\r\n        messageDisplayContainer.appendChild(dateHeader);\r\n      }\r\n\r\n\r\n      const messageBubble = document.createElement(\"div\");\r\n      messageBubble.className = `p-3 rounded-lg m-2 max-w-xs w-[20vw] ${whichuser === receiver\r\n        ? \"bg-blue-500 text-black self-end ml-auto\"\r\n        : \"bg-gray-200 text-black self-start mr-auto\"\r\n        }`;\r\n        messageBubble.style.marginBottom = \"1rem\";\r\n        messageBubble.style.minHeight = \"10vh\"; \r\n        messageBubble.style.height = \"auto\"; \r\n        messageBubble.style.display = \"flex\"; \r\n        messageBubble.style.flexDirection = \"column\";\r\n\r\n\r\n\r\n      const messageWrapper = document.createElement(\"div\");\r\n      messageWrapper.className = \"flex flex-col\";\r\n\r\n      const messageText = document.createElement(\"p\");\r\n      messageText.className = \"text-[1.3vw] mb-1 break-words\";\r\n      messageText.innerText = chat;\r\n\r\n\r\n      const messageTime = document.createElement(\"span\");\r\n      messageTime.className = \"text-[1vw] text-white self-end\";\r\n      messageTime.innerText = currentTime;\r\n\r\n\r\n      messageWrapper.appendChild(messageText);\r\n      messageWrapper.appendChild(messageTime);\r\n\r\n\r\n      messageBubble.appendChild(messageWrapper);\r\n\r\n      messageDisplayContainer.appendChild(messageBubble);\r\n    });\r\n\r\n    messageDisplayContainer.scrollTop = messageDisplayContainer.scrollHeight;\r\n\r\n\r\n  };\r\n\r\n\r\n  const messageBox = async (e, flag = \"true\") => {\r\n    e.stopPropagation();\r\n    if (flag == \"true\") {\r\n      if (messagetext == \"Type message here\") {\r\n        const d = e.target.value;\r\n        const i = d.indexOf('Type message here')\r\n        const m1 = d.substring(i + ('Type message here'.length));\r\n        setmessagetext(m1);\r\n      }\r\n      else if (e.target.value && e.target.value.length > 0) {\r\n\r\n        setmessagetext(e.target.value);\r\n      }\r\n      else {\r\n\r\n        setmessagetext(\"Type message here\");\r\n      }\r\n    }\r\n    else {\r\n      if (messagetext == \"Type message here\") {\r\n        e.target.value = \"\";\r\n        setmessagetext(e.target.value);\r\n      }\r\n    }\r\n\r\n  }\r\n  const sendGroupmessage = async (e) => {\r\n    const chat = messagetext;\r\n    const groupname = senderGroupName;\r\n\r\n    const receiver = username;\r\n\r\n    const now = new Date();\r\n\r\n\r\n    const day = now.getDate();\r\n    const month = now.getMonth() + 1;\r\n    const year = now.getFullYear();\r\n\r\n    const hours = now.getHours();\r\n    const minutes = now.getMinutes();\r\n    const seconds = now.getSeconds();\r\n\r\n\r\n    const currentDate = `${day}/${month}/${year}`;\r\n    const currentTime = `${hours}:${minutes}:${seconds}`;\r\n\r\n    setmessagetext(\"Type message here\");\r\n    const response = await fetch('http://localhost:5200/savegroupmessage', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        \"receiver\": receiver,\r\n        \"groupname\": groupname,\r\n        \"chat\": chat,\r\n        \"currentDate\": currentDate,\r\n        \"currentTime\": currentTime\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    socket.emit('send_message_group', { receiver, groupname, chat, currentDate, currentTime });\r\n\r\n    setSearchbool(false);\r\n    fetchintialusergroup();\r\n    loadgroupmess(receiver, senderGroupName);\r\n  }\r\n\r\n  const sendMessage = async (e) => {\r\n    const textToSend = messagetext;\r\n    const receiver = username;\r\n    const sender = senderGroupName;\r\n\r\n    if (textToSend.length == 0) {\r\n      setmessagetext(\"Type message here\");\r\n      return;\r\n    }\r\n    if (groupMessages == false) {\r\n      const identifier = receiver + ' (Self)';\r\n      if (senderGroupName == identifier) {\r\n\r\n\r\n        const now = new Date();\r\n\r\n        const day = now.getDate();\r\n        const month = now.getMonth() + 1;\r\n        const year = now.getFullYear();\r\n\r\n        const hours = now.getHours();\r\n        const minutes = now.getMinutes();\r\n        const seconds = now.getSeconds();\r\n\r\n\r\n        const currentDate = `${day}/${month}/${year}`;\r\n        const currentTime = `${hours}:${minutes}:${seconds}`;\r\n\r\n        setmessagetext(\"Type message here\");\r\n        const response = await fetch('http://localhost:5100/saveindichat', {\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            \"receiver\": receiver,\r\n            \"sender\": receiver,\r\n            \"whichuser\": receiver,\r\n            \"textToSend\": textToSend,\r\n            \"currentDate\": currentDate,\r\n            \"currentTime\": currentTime\r\n          }),\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n        setSearchbool(false);\r\n        fetchintialusergroup();\r\n\r\n        loadindimess(receiver, receiver);\r\n\r\n\r\n\r\n      }\r\n      else {\r\n        const identifier1 = receiver + '#' + sender;\r\n        const identifier2 = sender + '#' + receiver;\r\n        const now = new Date();\r\n\r\n\r\n        const day = now.getDate();\r\n        const month = now.getMonth() + 1;\r\n        const year = now.getFullYear();\r\n\r\n        const hours = now.getHours();\r\n        const minutes = now.getMinutes();\r\n        const seconds = now.getSeconds();\r\n\r\n\r\n        const currentDate = `${day}/${month}/${year}`;\r\n        const currentTime = `${hours}:${minutes}:${seconds}`;\r\n\r\n        setmessagetext(\"Type message here\");\r\n        const response = await fetch('http://localhost:5100/saveindichat', {\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            \"receiver\": receiver,\r\n            \"sender\": sender,\r\n            \"whichuser\": receiver,\r\n            \"textToSend\": textToSend,\r\n            \"currentDate\": currentDate,\r\n            \"currentTime\": currentTime\r\n          }),\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n        const result = await response.json();\r\n        const response2 = await fetch('http://localhost:5100/saveindichat', {\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            \"receiver\": sender,\r\n            \"sender\": receiver,\r\n            \"whichuser\": receiver,\r\n            \"textToSend\": textToSend,\r\n            \"currentDate\": currentDate,\r\n            \"currentTime\": currentTime\r\n          }),\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n        const result2 = await response2.json();\r\n        socket.emit('send_message', { identifier1, identifier2, receiver, sender, textToSend, currentDate, currentTime });\r\n\r\n        setSearchbool(false);\r\n        fetchintialusergroup();\r\n        loadindimess(receiver, senderGroupName);\r\n\r\n      }\r\n    }\r\n  }\r\n  const submitNewGroup = async () => {\r\n    let group_name = document.getElementById(\"group_name\");\r\n    const val = group_name.value;\r\n    if (val.length == 0) {\r\n      let display_res = document.getElementById(\"display_res\");\r\n      display_res.textContent = \"Enter Group Name\";\r\n      return;\r\n    }\r\n    else {\r\n      let display_res = document.getElementById(\"display_res\");\r\n      display_res.textContent = \"\";\r\n    }\r\n\r\n    if (usersingroups.length <= 1) {\r\n      let display_res = document.getElementById(\"display_res\");\r\n      display_res.textContent = \"Atleast 2 users are required\";\r\n      return;\r\n    }\r\n    else {\r\n      let display_res = document.getElementById(\"display_res\");\r\n      display_res.textContent = \"\";\r\n    }\r\n\r\n    const response = await fetch('http://localhost:4000/signup', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ \"username\": val }),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    const data = await response.json();\r\n    const length = data.length;\r\n    if (length == 1) {\r\n      let display_res = document.getElementById(\"display_res\");\r\n      display_res.textContent = \"Group name matches with username\";\r\n      return;\r\n    }\r\n\r\n\r\n\r\n    const res = await fetch(\"http://localhost:5200/checkgroupexist\", {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        \"groupname\": val\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    const res2 = await res.json();\r\n    if (res2.flag == \"true\") {\r\n      let display_res = document.getElementById(\"display_res\");\r\n      display_res.textContent = \"Group name already exists\";\r\n      return;\r\n    }\r\n    else {\r\n      let display_res = document.getElementById(\"display_res\");\r\n      display_res.textContent = \"\";\r\n    }\r\n    let groupmember = [];\r\n    groupmember = usersingroups.map((user) => user.username);\r\n    groupmember.push(username);\r\n    const now = new Date();\r\n\r\n    const day = now.getDate();\r\n    const month = now.getMonth() + 1;\r\n    const year = now.getFullYear();\r\n\r\n    const hours = now.getHours();\r\n    const minutes = now.getMinutes();\r\n    const seconds = now.getSeconds();\r\n\r\n    const currentDate = `${day}/${month}/${year}`;\r\n    const currentTime = `${hours}:${minutes}:${seconds}`;\r\n    const response2 = await fetch('http://localhost:5200/savegroupinfo', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        \"receiver\": username,\r\n        \"groupname\": val,\r\n        \"groupmember\": groupmember,\r\n        \"currentDate\": currentDate,\r\n        \"currentTime\": currentTime\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    let display_res = document.getElementById(\"display_res\");\r\n    display_res.textContent = \"Group created successfully\";\r\n    setTimeout(() => {\r\n      switchModal();\r\n      setSearchUsersgroup([]);\r\n      setUsersingroups([]);\r\n      fetchintialusergroup();\r\n    }, 2000);\r\n\r\n  }\r\n\r\n  const searchusersforgroup = async (e) => {\r\n    const sender = e.target.value;\r\n\r\n    if (sender.length > 0) {\r\n      const response = await fetch('http://localhost:5010/tofetch', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ \"username\": sender }),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n      const data = await response.json();\r\n      const data_users = data.users\r\n      const data_group = data.groupMessages;\r\n\r\n      setSearchUsersgroup(data_users || []);\r\n\r\n    }\r\n    else {\r\n      setSearchUsersgroup([]);\r\n    }\r\n  }\r\n\r\n  const addingroup = (e, user) => {\r\n    e.preventDefault();\r\n    const alreadyAdded = usersingroups.some((element) => element._id === user._id);\r\n    if (alreadyAdded) return;\r\n\r\n    setUsersingroups((prev) => [...prev, user]);\r\n\r\n  }\r\n  const removeingroup = (e, user) => {\r\n    e.preventDefault();\r\n    setUsersingroups((prev) => prev.filter((element) => element._id !== user._id))\r\n  }\r\n  const fetchintialusergroup = async () => {\r\n    const res1 = await fetch('http://localhost:5100/intialindires', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ receiver: username }),\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const data1 = await res1.json();\r\n\r\n    const res2 = await fetch('http://localhost:5200/intialresultgroup', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ receiver: username }),\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const data2 = await res2.json();\r\n\r\n\r\n\r\n\r\n\r\n    const processedData2 = await Promise.all(\r\n      data2.map(async (group) => {\r\n\r\n        const { groupname, currentDate, currentTime, groupmember } = group;\r\n\r\n\r\n        const res3 = await fetch('http://localhost:5200/intialgroupres', {\r\n          method: 'POST',\r\n          body: JSON.stringify({ groupname }),\r\n          headers: { 'Content-Type': 'application/json' }\r\n        });\r\n        const data3 = await res3.json();\r\n\r\n\r\n        const latestMessage = data3[0]?.latestMessage || \"Start your messaging\";\r\n        const n1currentDate = data3[0]?.currentDate || currentDate;\r\n        const n1currentTime = data3[0]?.currentTime || currentTime;\r\n\r\n        return {\r\n          groupname,\r\n          groupmember,\r\n          \"currentDate\": n1currentDate,\r\n          \"currentTime\": n1currentTime,\r\n          chat: latestMessage\r\n        };\r\n      })\r\n    );\r\n\r\n\r\n\r\n\r\n    let tresult = [...data1, ...processedData2];\r\n\r\n\r\n    let temp = tresult.sort((b, a) => {\r\n\r\n      const [dayA, monthA, yearA] = a.currentDate.split('/').map(Number);\r\n      const [dayB, monthB, yearB] = b.currentDate.split('/').map(Number);\r\n\r\n\r\n      if (yearA !== yearB) return yearA - yearB;\r\n      if (monthA !== monthB) return monthA - monthB;\r\n      if (dayA !== dayB) return dayA - dayB;\r\n\r\n\r\n      const timeA = a.currentTime.split(':').map(Number);\r\n      const timeB = b.currentTime.split(':').map(Number);\r\n\r\n\r\n      if (timeA[0] !== timeB[0]) return timeA[0] - timeB[0];\r\n      if (timeA[1] !== timeB[1]) return timeA[1] - timeB[1];\r\n      return timeA[2] - timeB[2];\r\n    });\r\n\r\n\r\n    setIntial_user_group([...temp]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchintialusergroup();\r\n  }, []);\r\n\r\n  const [deleleCHAT, setDeleteChat] = useState(false);\r\n\r\n  const toggleExit = () => {\r\n    setDeleteChat(!deleleCHAT);\r\n    if (deleleCHAT == false) {\r\n\r\n    }\r\n  }\r\n\r\n  const deletechat = async () => {\r\n    const receiver = username;\r\n    const sender = senderGroupName;\r\n    let delele_result = document.getElementById(\"delete_result\");\r\n    if (groupMessages == true) {\r\n\r\n      delele_result.innerHTML = \"Group Chat is deleted\";\r\n      const response = await fetch('http://localhost:5200/getgroupmember', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ \"groupname\": senderGroupName }),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      const res = await response.json();\r\n      let groupmember = res[0].groupmember;\r\n      let newgroupmember = [];\r\n      groupmember.forEach((user) => {\r\n        if (user != username) {\r\n          newgroupmember.push(user)\r\n        }\r\n      })\r\n      const response2 = await fetch('http://localhost:5200/updategroupmember', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ \"groupname\": senderGroupName, \"groupmember\": newgroupmember }),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n\r\n    }\r\n    else {\r\n\r\n      delele_result.innerHTML = \"Individual Chat is deleted\";\r\n      const response = await fetch('http://localhost:5100/deleteindichat', {\r\n        method: 'DELETE',\r\n        body: JSON.stringify({ \"receiver\": receiver, \"sender\": sender }),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n    }\r\n    setTimeout(() => {\r\n      delele_result.innerHTML = \"\";\r\n      setDeleteChat(false);\r\n      setMscreen(true);\r\n      setSenderGroupName(\"\");\r\n      fetchintialusergroup();\r\n    }, 1000);\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className='100vh overflow-scroll class=\"[&::-webkit-scrollbar]:hidden [-ms-overflow-style:none] [scrollbar-width:none]'>\r\n        {addgroupModal && (\r\n          <div className=\"modal-background fixed top-0 left-0 w-full h-full border-3 border-black  z-10 bg-black bg-opacity-50\" />\r\n        )}\r\n        {addgroupModal &&\r\n          <div className='bg-gray-300 border-4 border-black fixed top-10 left-[25vw] h-[80vh] w-[50vw] z-20 '>\r\n            <button onClick={switchModal} className='bg-red-500  hover:bg-red-600 border-4 border-black rounded mt-[1vh] mr-[0.5vw] float-right text-[1.5vw] h-[8vh] w-[5vw]' >Close</button>\r\n            <input type=\"text\" id=\"group_name\" name=\"\" placeholder='Enter Group Name: ' className='relative top-4 left-4 w-[30vw] h-[6vh] p-2 border-black border-2' />\r\n            <input type=\"text\" id=\"search_user\" onChange={e => searchusersforgroup(e)} name=\"\" placeholder='Search User: ' className='relative top-7 left-4 w-[30vw] h-[6vh] p-2 border-black border-2' />\r\n            <div className='bg-white h-[45vh] mt-[7vh] w-[23vw] ml-[1vw] border-4 border-black float-left overflow-y-auto class=\"[&::-webkit-scrollbar]:hidden [-ms-overflow-style:none] [scrollbar-width:none]'>\r\n              {searchusersgroup.length > 0 ? (\r\n                <ul className='text-2xl mt-2  searchnot'>\r\n                  {searchusersgroup.map((user) => (user.username != username &&\r\n                    <li key={user._id} style={{ width: '90%', marginLeft: '5%' }} className='border-4 cursor-pointer mt-2 border-black pl-2  h-[10vh]  w-88  searchnot text-[2vw]'>{user.username} <button type=\"button\" onClick={e => addingroup(e, user)} className='bg-green-300 hover:bg-green-600 h-[6vh] border-4 border-black float-right mt-[1.3vh] mr-1 rounded w-[6vw]'>ADD</button> </li>\r\n                  ))}\r\n                </ul>\r\n              ) : (<ul className='text-[1.8vw] mt-2 ml-7 searchnot'> No Users found</ul>)}\r\n            </div>\r\n            <div className='bg-white h-[45vh] border-4 border-black mt-[7vh] w-[23vw] mr-[1vw] float-right'>\r\n              {usersingroups.length > 0 ? (\r\n                <ul className='text-2xl mt-2  searchnot'>\r\n                  {usersingroups.map((user) => (\r\n                    <li key={user._id} style={{ width: '90%', marginLeft: '5%' }} className='border-4 cursor-pointer mt-2 border-black pl-2  h-[10vh]  w-88  searchnot text-[2vw]'>{user.username} <button type=\"button\" onClick={e => removeingroup(e, user)} className='bg-red-500 hover:bg-red-600 border-4 border-black h-[6vh] float-right mt-[1.3vh] mr-1 rounded w-[8vw]'>Remove</button> </li>\r\n                  ))}\r\n                </ul>\r\n              ) : (<ul className='text-[1.8vw] mt-2 ml-7 searchnot'> No Users is added</ul>)}\r\n            </div>\r\n            <div id='display_res' className='text-red-500 h-[6vh] mt-[54vh] mx-auto w-[30vw] text-center'></div>\r\n            <button className='bg-green-500  hover:bg-green-600 rounded ml-[20vw] border-4 border-black mt-[0.5vh] text-[1.5vw] h-[6vh] w-[8vw]' onClick={e => submitNewGroup(e)} >Submit</button>\r\n          </div>}\r\n        <div className='flex flex-row h-screen' onClick={handleContainerClick} >\r\n          <div className=\"bg-gray-400 flex items-center justify-center\" style={{ width: '5vw', height: '100vh' }}>\r\n\r\n\r\n            <Link to=\"/\" className='inline mt-[85vh]'><button className='bg-white rounded-xl h-[9vh] w-[4.8vw] border-4 text-[1.1vw] border-black hover:bg-gray-500'>Log Out</button></Link>\r\n\r\n          </div>\r\n          <div style={{ width: '40vw', height: \"100vh\", overflow: \"scroll\" }} className='class=\"[&::-webkit-scrollbar]:hidden [-ms-overflow-style:none] [scrollbar-width:none]'>\r\n            <div className='bg-fixed'>\r\n              <span className='text-[2vw] font-bold relative top-3 pl-[2vw]'>\r\n                Chats\r\n              </span>\r\n\r\n              <button type=\"button\" id=\"to_add_group\" className='relative left-[13vw] text-[2vw] top-3 font-bold border-black rounded-lg border-4 border-solid visible' onClick={switchModal}>New Group Chat</button>\r\n\r\n              <div className='mt-[8vh] flex justify-center  ml-[2vw]' id='search_container' >\r\n                <span className='rounded-l-md bg-gray-200 inline-block h-[10vh] pl-[1vw] hover:cursor-pointer ' onClick={(e) => clickOnImage(e)}><img src=\"/searchIcon.png\" alt=\"\" id='search_image' className='inline-block h-[4vh] mt-[3vh]' /></span>\r\n                <input type=\"text\" ref={inputRef} placeholder='Search' id=\"search_user\" className=' h-[10vh] rounded-r-md inline bg-gray-200' onChange={(e) => oninput(e)}\r\n                  style={{ outline: 'None', width: '90%', paddingLeft: '5%', marginRight: '5%' }} onClick={(e) => clickOnImage(e)} />\r\n              </div>\r\n            </div>\r\n            {searchbool ? (\r\n              <div id='search_panel' className='searchnot overflow-auto' style={{ maxHeight: '480px', overflowY: 'auto' }}>\r\n\r\n                {searchusers.length > 0 ? (\r\n                  <ul className='text-2xl mt-[2vh]  searchnot'>\r\n                    <span className='ml-[2.2vw] text-[2vw] searchnot'>Search User</span>\r\n                    {searchusers.map((user) => (\r\n                      <li key={user._id} onClick={(e) => startindivimessage(e, user.username)} className='rounded-xl border-4 cursor-pointer mt-[2vh] ml-[2vw] border-gray-700 pl-[1vw] pt-[1vh]  h-[10vh]  w-[36vw]  searchnot text-[2vw]'>{user.username}</li>\r\n                    ))}\r\n                  </ul>\r\n                ) : <div className='ml-[2.2vw] mt-[0.5vh] text-[2vw] searchnot'>Search User not Found</div>}\r\n              </div>) :\r\n              (<div className='overflow-auto h-[78vh] class=\"[&::-webkit-scrollbar]:hidden [-ms-overflow-style:none] [scrollbar-width:none]'  >\r\n                {intial_user_group.length > 0 && (\r\n                  <ul className=''>\r\n                    <div >\r\n                      {intial_user_group.map((item, index) => (\r\n                        <li key={index} className='border-4 rounded-xl cursor-pointer mt-[2vh] ml-[2vw] border-gray-700 pl-[1vw] pt-[1vh]   w-[36vw]  searchnot text-[2vw]'>\r\n\r\n                          {item.groupname ? (\r\n                            <div className='h-[15vh] relative' onClick={(e) => startgroupmessage(e, item.groupname)} rig>\r\n                              <p className=\"text-[3vh] font-bold text-blue-800\">{item.groupname}</p>\r\n                              <p className=\"text-[2vh] text-gray-600 overflow-hidden text-ellipsis whitespace-nowrap\">Message: {item.chat}</p>\r\n                              <p className=\"text-[2vh] text-gray-600 float-right mr-2\">Date: {item.currentDate}</p>\r\n                              <p className=\"text-[2vh] text-gray-600 float-right absolute bottom-0 right-2\">Time: {item.currentTime}</p>\r\n                            </div>\r\n                          ) : (\r\n\r\n                            <div onClick={(e) => startindivimessage(e, item.sender)} className='h-[15vh] relative'>\r\n                              <p className=\"text-[3vh] font-bold text-green-800\">From: {item.sender}</p>\r\n                              <p className=\"text-[2vh] text-gray-600 overflow-hidden text-ellipsis whitespace-nowrap\">Message: {item.latestMessage}</p>\r\n                              <p className=\"text-[2vh] text-gray-600 float-right mr-2\">Date: {item.currentDate}</p>\r\n                              <p className=\"text-[2vh] text-gray-600 float-right absolute bottom-0  right-2\">Time: {item.currentTime}</p>\r\n                            </div>\r\n                          )}\r\n                        </li>\r\n                      ))}\r\n                    </div>\r\n                  </ul>\r\n                )}\r\n\r\n              </div>)}\r\n          </div>\r\n          {mscreen ? (\r\n            <div className='h-screen text-[2vw] flex justify-center items-center' style={{\r\n              width: '55vw', backgroundColor: \"#FFDEE9\",\r\n              backgroundImage: \"linear-gradient(0deg, #FFDEE9 0%, #B5FFFC 100%)\"\r\n            }}>\r\n              <div>\r\n                Start Messaging\r\n              </div>\r\n            </div>) :\r\n            (<div className='h-screen' style={{ width: '55%' }} >\r\n              <div className=\"bg-gray-300 pl-10 text-[6vh] h-10vh\" >\r\n                <div className=\"flex justify-between items-center w-full\">\r\n                  <span className=\"text-[3vw]\">{senderGroupName}</span>\r\n                  <span className=\"inline-block mr-2 mb-2\">\r\n                    <button onClick={toggleExit} className=\"bg-green-400 h-[8vh] w-[10vw] text-[2vw] border-black rounded-md hover:bg-green-600 border-[0.2vw]\">\r\n                      Exit {groupMessages === true ? \"Group\" : \"Chat\"}\r\n                    </button>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              <div className='flex-1 overflow-y-auto class=\"[&::-webkit-scrollbar]:hidden [-ms-overflow-style:none] [scrollbar-width:none]' id=\"messageDisplay\" style={{\r\n                height: '80%', backgroundImage: \"linear-gradient( 109.6deg,  rgba(112,246,255,0.33) 11.2%, rgba(221,108,241,0.26) 42%, rgba(229,106,253,0.71) 71.5%, rgba(123,183,253,1) 100.2% )\"\r\n              }} ></div>\r\n              <div className='bg-gray-500' style={{ height: '10%' }}><input type=\"text\" value={messagetext} onChange={e => messageBox(e)} onClick={e => messageBox(e, false)} name=\"\" id=\"\" className='inline-block ' style={{ width: '75%', paddingLeft: '1%', marginLeft: '10%', height: '70%', marginTop: '1%' }} /> <button style={{ width: '10%', height: '50%' }}><img src=\"/rightarrow.png\" onClick={groupMessages == false ? (e) => sendMessage(e) : (e) => sendGroupmessage(e)} style={{ width: \"50%\", height: '150%', paddingTop: '5%' }} /></button></div>\r\n            </div>)}\r\n        </div>\r\n        {deleleCHAT && (\r\n          <div className=\"modal-background fixed top-0 left-0 w-full h-full z-10 bg-black bg-opacity-50\" />\r\n        )}\r\n        {deleleCHAT &&\r\n          <div className='bg-gray-300 fixed top-[30vh] left-[25vw] h-[30vh] w-[50vw] z-20 '>\r\n            <div className='text-red-500 h-[5vh] text-[1.4vw] mx-auto w-[30vw] text-center'>Are you sure you want to delete that chat?</div>\r\n            <div className='text-red-500 h-[5vh] text-[1.4vw] w-[50vw] text-center '>{groupMessages == true ? \"On deleteting you will exit the group\" : \"On deleting message user will be delete from your homelist\"}</div>\r\n            <div id=\"delete_result\" className='h-[5vh] text-green-500 mt-[1vh] text-[1.5vw] text-center'></div>\r\n            <div className='mt-[1vh]'><button className='bg-green-500 hover:bg-green-600 h-[9vh] rounded-xl border-4 border-black w-[15vw] ml-[3vw]' onClick={deletechat}>Yes</button><button onClick={toggleExit} className='bg-red-500 hover:bg-red-700 border-4 border-black h-[9vh] w-[15vw] rounded-xl float-right mr-[3vw]'>No</button></div>\r\n\r\n          </div>}\r\n      </div >\r\n\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}