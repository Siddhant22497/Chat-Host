{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Siddhant\\\\OneDrive\\\\Something\\\\chat_app\\\\src\\\\Homescreen.js\",\n  _s = $RefreshSig$();\nimport { React, useState, useRef, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  io\n} = require(\"socket.io-client\");\nconst socket = io.connect(\"http://localhost:5100\");\nexport default function Homescreen() {\n  _s();\n  const location = useLocation();\n  const inputRef = useRef(null);\n  const [groupMessages, setGroupMessage] = useState(false);\n  const {\n    username,\n    password\n  } = location.state || {};\n  const [searchusersgroup, setSearchUsersgroup] = useState([]);\n  const [searchusers, setSearchsUsers] = useState([]);\n  const [searchgroupMessages, setsearchGroupMessages] = useState([]);\n  const [searchbool, setSearchbool] = useState(false);\n  const [mscreen, setMscreen] = useState(true);\n  const [senderGroupName, setSenderGroupName] = useState(\"\");\n  const [currsendmessage, setCurrsendmessage] = useState(\"\");\n  const [addgroupModal, setAddgroupModal] = useState(false);\n  const [messagetext, setmessagetext] = useState(\"Type message here\");\n  const [intial_user_group, setIntial_user_group] = useState([]);\n  const [usersingroups, setUsersingroups] = useState([]);\n  const switchModal = () => {\n    setAddgroupModal(!addgroupModal);\n    let to_add_group = document.getElementById(\"to_add_group\");\n    if (addgroupModal) {\n      console.log(\"If\");\n      to_add_group.classList.remove(\"invisible\");\n      to_add_group.classList.add(\"visible\");\n    } else {\n      console.log(\"Else\");\n      to_add_group.classList.remove(\"visible\");\n      to_add_group.classList.add(\"invisible\");\n    }\n  };\n  const clickOnImage = event => {\n    const searchimage = document.getElementById('search_image');\n    let a = searchimage.attributes['src'];\n    if (a.nodeValue == '/leftArrow.png') {\n      fetchintialusergroup();\n      a.nodeValue = '/searchIcon.png';\n      setSearchbool(false);\n      setMscreen(true);\n      setmessagetext(\"Type message here\");\n    } else {\n      a.nodeValue = '/leftArrow.png';\n      setSearchbool(true);\n      if (inputRef.current) {\n        inputRef.current.focus();\n      }\n    }\n    event.stopPropagation();\n  };\n  const handleContainerClick = event => {\n    const target = event.target;\n    const searchimage = document.getElementById('search_image');\n    let a = searchimage.attributes['src'];\n    const flag = target.classList.contains('searchnot');\n  };\n  const oninput = async e => {\n    const value = e.target.value;\n    setSearchbool(true);\n    if (value.length > 0) {\n      const response = await fetch('http://localhost:5010/tofetch', {\n        method: 'POST',\n        body: JSON.stringify({\n          \"username\": value\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      const data_users = data.users;\n      const data_group = data.groupMessages;\n      setSearchsUsers(data_users || []);\n      setsearchGroupMessages(data_group || []);\n    } else {\n      setSearchsUsers([]);\n      setsearchGroupMessages([]);\n    }\n  };\n  useEffect(() => {\n    const handleReceiveMessage = data => {\n      // console.log(\"In the receive message\");\n      console.log(data);\n      const currentDate = data.currentDate;\n      const currentTime = data.currentTime;\n      const sender = data.sender;\n      const receiver = data.receiver;\n      const textToSend = data.textToSend;\n      if (currsendmessage == \"\") {\n        setCurrsendmessage({\n          \"currentDate\": currentDate,\n          \"currentTime\": currentTime,\n          \"sender\": sender,\n          \"receiver\": receiver,\n          \"textToSend\": textToSend\n        });\n        fetchintialusergroup();\n        if (senderGroupName == receiver) {\n          loadindimess(sender, receiver);\n        }\n      } else if (currsendmessage[\"currentTime\"] != currentTime) {\n        setCurrsendmessage({\n          \"currentDate\": currentDate,\n          \"currentTime\": currentTime,\n          \"sender\": sender,\n          \"receiver\": receiver,\n          \"textToSend\": textToSend\n        });\n        fetchintialusergroup();\n        if (senderGroupName == receiver) {\n          loadindimess(sender, receiver);\n        }\n      }\n    };\n    socket.on(\"receive_message\", handleReceiveMessage);\n    return () => {\n      socket.off(\"receive_message\", handleReceiveMessage);\n    };\n  });\n  const startindivimessage = async (e, u2) => {\n    setMscreen(false);\n    const receiver = username;\n    const sender = u2;\n    setGroupMessage(false);\n    if (sender == receiver) {\n      const t1 = receiver + ' (Self)';\n      setSenderGroupName(t1);\n      socket.emit(\"join_room\", t1);\n    } else {\n      setSenderGroupName(sender);\n      const identifier1 = receiver + '#' + sender;\n      const identifier2 = sender + '#' + receiver;\n      socket.emit(\"join_room\", identifier1);\n      socket.emit(\"join_room\", identifier2);\n    }\n    setmessagetext(\"Type message here\");\n    loadindimess(receiver, sender);\n  };\n  const startgroupmessage = async (e, groupmember) => {};\n  const loadindimess = async (receiver, sender) => {\n    const response = await fetch('http://localhost:5100/tofetchindichat', {\n      method: 'POST',\n      body: JSON.stringify({\n        \"receiver\": receiver,\n        \"sender\": sender\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    let messageDisplayContainer = document.getElementById(\"messageDisplay\");\n    if (messageDisplayContainer != null) messageDisplayContainer.innerHTML = \"\";\n    const result = await response.json();\n    if (result.length == 0) {\n      messageDisplayContainer.innerHTML = \"\";\n      return;\n    }\n    result.sort((a, b) => {\n      // Parse dates (currentDate is in DD/MM/YYYY format)\n      const [dayA, monthA, yearA] = a.currentDate.split('/').map(Number);\n      const [dayB, monthB, yearB] = b.currentDate.split('/').map(Number);\n\n      // Compare years, months, days first\n      if (yearA !== yearB) return yearA - yearB;\n      if (monthA !== monthB) return monthA - monthB;\n      if (dayA !== dayB) return dayA - dayB;\n\n      // If the dates are the same, compare times\n      const timeA = a.currentTime.split(':').map(Number); // [hours, minutes, seconds]\n      const timeB = b.currentTime.split(':').map(Number);\n\n      // Compare hours, minutes, seconds\n      if (timeA[0] !== timeB[0]) return timeA[0] - timeB[0];\n      if (timeA[1] !== timeB[1]) return timeA[1] - timeB[1];\n      return timeA[2] - timeB[2];\n    });\n    let lastDate = \"10/12/2024\";\n    result.forEach(currentEle => {\n      const {\n        chat,\n        currentDate,\n        currentTime,\n        receiver,\n        sender,\n        whichuser\n      } = currentEle;\n\n      // Add a date header if the date changes\n      if (currentDate !== lastDate) {\n        lastDate = currentDate;\n        const dateHeader = document.createElement(\"h1\"); // Change 'h' to 'h1'\n        dateHeader.className = \"flex justify-center items-center h-12\"; // Flexbox for centering\n\n        const dateContainer = document.createElement(\"span\");\n        dateContainer.className = \"bg-red-700 border border-yellow-700 text-white px-4 py-2 rounded-md\";\n        dateContainer.innerText = currentDate;\n        dateHeader.append(dateContainer);\n        messageDisplayContainer.appendChild(dateHeader);\n      }\n\n      // Create a message bubble\n      const messageBubble = document.createElement(\"div\");\n      messageBubble.className = `p-3 rounded-lg m-2 max-w-xs ${whichuser === receiver ? \"bg-blue-500 text-white self-end ml-auto\" : \"bg-gray-200 text-black self-start mr-auto\"}`;\n      messageBubble.style.marginBottom = \"1rem\"; // This adds some space between messages\n\n      // Create a wrapper to hold both the message and the time\n      const messageWrapper = document.createElement(\"div\");\n      messageWrapper.className = \"flex flex-col h-[7vh]\"; // Stack the message and time vertically\n\n      // Message text\n      const messageText = document.createElement(\"p\");\n      messageText.className = \"text-[1.3vw] mb-1\"; // Add some bottom margin between message and time\n      messageText.innerText = chat;\n\n      // Message time\n      const messageTime = document.createElement(\"span\");\n      messageTime.className = \"text-[1vw] text-gray-600 self-end\"; // Align time to the bottom-right\n      messageTime.innerText = currentTime;\n\n      // Append text and time to the wrapper\n      messageWrapper.appendChild(messageText);\n      messageWrapper.appendChild(messageTime);\n\n      // Append the wrapper to the message bubble\n      messageBubble.appendChild(messageWrapper);\n\n      // Append bubble to container\n      messageDisplayContainer.appendChild(messageBubble);\n    });\n    messageDisplayContainer.scrollTop = messageDisplayContainer.scrollHeight;\n  };\n\n  // When click on send message arrow\n  const messageBox = async (e, flag = true) => {\n    e.stopPropagation();\n    if (flag == true) {\n      if (messagetext == \"Type message here\") {\n        const d = e.target.value;\n        const i = d.indexOf('Type message here');\n        const m1 = d.substring(i + 'Type message here'.length);\n        setmessagetext(m1);\n      } else if (e.target.value && e.target.value.length > 0) {\n        setmessagetext(e.target.value);\n      } else {\n        setmessagetext(\"Type message here\");\n      }\n    } else {\n      if (messagetext == \"Type message here\") {\n        e.target.value = \"\";\n        setmessagetext(e.target.value);\n      }\n    }\n  };\n  const sendMessage = async e => {\n    const textToSend = messagetext;\n    const receiver = username;\n    const sender = senderGroupName;\n    if (textToSend.length == 0) {\n      setmessagetext(\"Type message here\");\n      return;\n    }\n    if (groupMessages == false) {\n      const identifier = receiver + ' (Self)';\n      if (senderGroupName == identifier) {\n        // Coming soon\n        // const identifier1 = receiver + '#' + sender;\n        // const identifier2 = sender + '#' + receiver;\n        const now = new Date(); // Create a new Date object with the current date and time\n\n        // Get the date components\n        const day = now.getDate(); // Day of the month (1-31)\n        const month = now.getMonth() + 1; // Month (0-11), so add 1 for 1-12\n        const year = now.getFullYear(); // Full year (e.g., 2024)\n\n        const hours = now.getHours(); // Hours (0-23)\n        const minutes = now.getMinutes(); // Minutes (0-59)\n        const seconds = now.getSeconds(); // Seconds (0-59)\n\n        const currentDate = `${day}/${month}/${year}`;\n        const currentTime = `${hours}:${minutes}:${seconds}`;\n        setmessagetext(\"Type message here\");\n        const response = await fetch('http://localhost:5100/saveindichat', {\n          method: 'POST',\n          body: JSON.stringify({\n            \"receiver\": receiver,\n            \"sender\": receiver,\n            \"whichuser\": receiver,\n            \"textToSend\": textToSend,\n            \"currentDate\": currentDate,\n            \"currentTime\": currentTime\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        setSearchbool(false);\n        fetchintialusergroup();\n        loadindimess(receiver, receiver);\n      } else {\n        const identifier1 = receiver + '#' + sender;\n        const identifier2 = sender + '#' + receiver;\n        const now = new Date(); // Create a new Date object with the current date and time\n\n        // Get the date components\n        const day = now.getDate(); // Day of the month (1-31)\n        const month = now.getMonth() + 1; // Month (0-11), so add 1 for 1-12\n        const year = now.getFullYear(); // Full year (e.g., 2024)\n\n        const hours = now.getHours(); // Hours (0-23)\n        const minutes = now.getMinutes(); // Minutes (0-59)\n        const seconds = now.getSeconds(); // Seconds (0-59)\n\n        const currentDate = `${day}/${month}/${year}`;\n        const currentTime = `${hours}:${minutes}:${seconds}`;\n        setmessagetext(\"Type message here\");\n        const response = await fetch('http://localhost:5100/saveindichat', {\n          method: 'POST',\n          body: JSON.stringify({\n            \"receiver\": receiver,\n            \"sender\": sender,\n            \"whichuser\": receiver,\n            \"textToSend\": textToSend,\n            \"currentDate\": currentDate,\n            \"currentTime\": currentTime\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const result = await response.json();\n        const response2 = await fetch('http://localhost:5100/saveindichat', {\n          method: 'POST',\n          body: JSON.stringify({\n            \"receiver\": sender,\n            \"sender\": receiver,\n            \"whichuser\": receiver,\n            \"textToSend\": textToSend,\n            \"currentDate\": currentDate,\n            \"currentTime\": currentTime\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const result2 = await response2.json();\n        socket.emit('send_message', {\n          identifier1,\n          identifier2,\n          receiver,\n          sender,\n          textToSend,\n          currentDate,\n          currentTime\n        });\n        setSearchbool(false);\n        fetchintialusergroup();\n        loadindimess(receiver, senderGroupName);\n      }\n    } else {\n      //For group chat coming soon\n    }\n  };\n  const submitNewGroup = async () => {\n    let group_name = document.getElementById(\"group_name\");\n    const val = group_name.value;\n    if (val.length == 0) {\n      let display_res = document.getElementById(\"display_res\");\n      display_res.textContent = \"Enter Group Name\";\n      return;\n    } else {\n      let display_res = document.getElementById(\"display_res\");\n      display_res.textContent = \"\";\n    }\n    if (usersingroups.length <= 1) {\n      let display_res = document.getElementById(\"display_res\");\n      display_res.textContent = \"Atleast 2 users are required\";\n      return;\n    } else {\n      let display_res = document.getElementById(\"display_res\");\n      display_res.textContent = \"\";\n    }\n    const response = await fetch('http://localhost:4000/signup', {\n      method: 'POST',\n      body: JSON.stringify({\n        \"username\": val\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    const length = data.length;\n    if (length == 1) {\n      let display_res = document.getElementById(\"display_res\");\n      display_res.textContent = \"Group name matches with username\";\n      return;\n    }\n    const res = await fetch(\"http://localhost:5200/checkgroupexist\", {\n      method: 'POST',\n      body: JSON.stringify({\n        \"groupname\": val\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const res2 = await res.json();\n    if (res2.flag == \"true\") {\n      let display_res = document.getElementById(\"display_res\");\n      display_res.textContent = \"Group name already exists\";\n      return;\n    } else {\n      let display_res = document.getElementById(\"display_res\");\n      display_res.textContent = \"\";\n    }\n    let groupmember = [];\n    groupmember = usersingroups.map(user => user.username);\n    groupmember.push(username);\n    const now = new Date(); // Create a new Date object with the current date and time\n\n    // Get the date components\n    const day = now.getDate(); // Day of the month (1-31)\n    const month = now.getMonth() + 1; // Month (0-11), so add 1 for 1-12\n    const year = now.getFullYear(); // Full year (e.g., 2024)\n\n    const hours = now.getHours(); // Hours (0-23)\n    const minutes = now.getMinutes(); // Minutes (0-59)\n    const seconds = now.getSeconds(); // Seconds (0-59)\n\n    const currentDate = `${day}/${month}/${year}`;\n    const currentTime = `${hours}:${minutes}:${seconds}`;\n    const response2 = await fetch('http://localhost:5200/savegroupinfo', {\n      method: 'POST',\n      body: JSON.stringify({\n        \"receiver\": username,\n        \"groupname\": val,\n        \"groupmember\": groupmember,\n        \"currentDate\": currentDate,\n        \"currentTime\": currentTime\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    let display_res = document.getElementById(\"display_res\");\n    display_res.textContent = \"Group created successfully\";\n    setTimeout(() => {\n      switchModal();\n      setSearchUsersgroup([]);\n      setUsersingroups([]);\n    }, 2000);\n  };\n  const searchusersforgroup = async e => {\n    const sender = e.target.value;\n    if (sender.length > 0) {\n      const response = await fetch('http://localhost:5010/tofetch', {\n        method: 'POST',\n        body: JSON.stringify({\n          \"username\": sender\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      const data_users = data.users;\n      const data_group = data.groupMessages;\n      setSearchUsersgroup(data_users || []);\n    } else {\n      setSearchUsersgroup([]);\n    }\n  };\n  const addingroup = (e, user) => {\n    e.preventDefault();\n    const alreadyAdded = usersingroups.some(element => element._id === user._id);\n    if (alreadyAdded) return;\n    setUsersingroups(prev => [...prev, user]);\n  };\n  const removeingroup = (e, user) => {\n    e.preventDefault();\n    setUsersingroups(prev => prev.filter(element => element._id !== user._id));\n  };\n  const fetchintialusergroup = async () => {\n    const res1 = await fetch('http://localhost:5100/intialindires', {\n      method: 'POST',\n      body: JSON.stringify({\n        receiver: username\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data1 = await res1.json();\n    const res2 = await fetch('http://localhost:5200/intialresultgroup', {\n      method: 'POST',\n      body: JSON.stringify({\n        receiver: username\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data2 = await res2.json();\n    let tresult = [...data1, ...data2];\n    let temp = tresult.sort((b, a) => {\n      // Parse dates (currentDate is in DD/MM/YYYY format)\n      const [dayA, monthA, yearA] = a.currentDate.split('/').map(Number);\n      const [dayB, monthB, yearB] = b.currentDate.split('/').map(Number);\n\n      // Compare years, months, days first\n      if (yearA !== yearB) return yearA - yearB;\n      if (monthA !== monthB) return monthA - monthB;\n      if (dayA !== dayB) return dayA - dayB;\n\n      // If the dates are the same, compare times\n      const timeA = a.currentTime.split(':').map(Number); // [hours, minutes, seconds]\n      const timeB = b.currentTime.split(':').map(Number);\n\n      // Compare hours, minutes, seconds\n      if (timeA[0] !== timeB[0]) return timeA[0] - timeB[0];\n      if (timeA[1] !== timeB[1]) return timeA[1] - timeB[1];\n      return timeA[2] - timeB[2];\n    });\n    console.log(\"Sorted Array:\", temp);\n\n    // Update the state with sorted entries\n    setIntial_user_group([...temp]); // Create a new array to ensure immutability\n  };\n  useEffect(() => {\n    fetchintialusergroup();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [addgroupModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-300 fixed top-10 left-[25vw] h-[80vh] w-[50vw] z-20\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: switchModal,\n        className: \"bg-red-500  hover:bg-red-600 rounded mt-[1vh] mr-[0.5vw] float-right text-[1.5vw] h-[8vh] w-[5vw]\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"group_name\",\n        name: \"\",\n        placeholder: \"Enter Group Name: \",\n        className: \"relative top-4 left-4 w-[30vw] h-[6vh] p-2 border-black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"search_user\",\n        onChange: e => searchusersforgroup(e),\n        name: \"\",\n        placeholder: \"Search User: \",\n        className: \"relative top-7 left-4 w-[30vw] h-[6vh] p-2 border-black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white h-[45vh] mt-[7vh] w-[23vw] ml-[1vw] float-left overflow-y-auto class=\\\"[&::-webkit-scrollbar]:hidden [-ms-overflow-style:none] [scrollbar-width:none]\",\n        children: searchusersgroup.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"text-2xl mt-2  searchnot\",\n          children: searchusersgroup.map(user => user.username != username && /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              width: '90%',\n              marginLeft: '5%'\n            },\n            className: \"border-8 cursor-pointer mt-2 border-gray-700 pl-2  h-[9vh]  w-88  searchnot text-[2vw]\",\n            children: [user.username, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: e => addingroup(e, user),\n              className: \"bg-green-300 hover:bg-green-600 h-[5vh] float-right mt-1 mr-1 rounded w-[6vw]\",\n              children: \"ADD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 196\n            }, this), \" \"]\n          }, user._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"text-[1.8vw] mt-2 ml-7 searchnot\",\n          children: \" No Users found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white h-[45vh] mt-[7vh] w-[23vw] mr-[1vw] float-right\",\n        children: usersingroups.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"text-2xl mt-2  searchnot\",\n          children: usersingroups.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              width: '90%',\n              marginLeft: '5%'\n            },\n            className: \"border-8 cursor-pointer mt-2 border-gray-700 pl-2  h-[9vh]  w-88  searchnot text-[2vw]\",\n            children: [user.username, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: e => removeingroup(e, user),\n              className: \"bg-red-500 hover:bg-red-600 h-[5vh] float-right mt-1 mr-1 rounded w-[8vw]\",\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 196\n            }, this), \" \"]\n          }, user._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"text-[1.8vw] mt-2 ml-7 searchnot\",\n          children: \" No Users is added\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"display_res\",\n        className: \"text-red-500 h-[5vh] mt-[54vh] mx-auto w-[30vw] text-center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-green-500  hover:bg-green-600 rounded ml-[20vw]  mt-[1vh] text-[1.5vw] h-[6vh] w-[8vw]\",\n        onClick: e => submitNewGroup(e),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row h-screen\",\n      onClick: handleContainerClick,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" bg-gray-400\",\n        style: {\n          width: '5%',\n          height: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '40%',\n          height: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-fixed\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-[2vw] font-bold relative top-3 pl-[2vw]\",\n            children: \"Chats\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            id: \"to_add_group\",\n            className: \"relative left-[13vw] text-[2vw] top-3 font-bold border-gray-500 rounded-lg border-[0.5vw] border-solid visible\",\n            onClick: switchModal,\n            children: \"New Group Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10 flex items-center\",\n            id: \"search_container\",\n            style: {\n              marginLeft: '5%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"rounded-l-md bg-gray-200 h-10 pl-3 hover:cursor-pointer\",\n              onClick: e => clickOnImage(e),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/searchIcon.png\",\n                alt: \"\",\n                style: {\n                  height: '30px',\n                  width: '25px'\n                },\n                id: \"search_image\",\n                className: \"inline-block h-10 w-3 pt-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 665,\n                columnNumber: 122\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              ref: inputRef,\n              placeholder: \"Search\",\n              id: \"search_user\",\n              className: \" h-10 rounded-r-md inline bg-gray-200\",\n              onChange: e => oninput(e),\n              style: {\n                outline: 'None',\n                width: '90%',\n                paddingLeft: '10%',\n                marginRight: '5%'\n              },\n              onClick: e => clickOnImage(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 11\n        }, this), searchbool ? /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"search_panel\",\n          className: \"searchnot overflow-auto\",\n          style: {\n            maxHeight: '480px',\n            overflowY: 'auto'\n          },\n          children: searchusers.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"text-2xl mt-2  searchnot\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ml-[2.2vw] text-[2vw] searchnot\",\n              children: \"Search User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 675,\n              columnNumber: 19\n            }, this), searchusers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: e => startindivimessage(e, user.username),\n              className: \"border-8 cursor-pointer mt-[2vh] ml-[2vw] border-gray-700 pl-[1vw] pt-[1vh]  h-[10vh]  w-[36vw]  searchnot text-[2vw]\",\n              children: user.username\n            }, user._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 677,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ml-[2.2vw] mt-[0.5vh] text-[2vw] searchnot\",\n            children: \"Search User not Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 680,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overflow-auto h-[78vh] class=\\\"[&::-webkit-scrollbar]:hidden [-ms-overflow-style:none] [scrollbar-width:none]\",\n          children: intial_user_group.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: intial_user_group.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"border-8 cursor-pointer mt-[2vh] ml-[2vw] border-gray-700 pl-[1vw] pt-[1vh]   w-[36vw]  searchnot text-[2vw]\",\n                children: item.groupname ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"h-[12vh] relative\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-[3vh] font-bold text-blue-800\",\n                    children: item.groupname\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 691,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-[2vh] text-gray-600 float-right mr-2\",\n                    children: [\"Date: \", item.currentDate]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 692,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-[2vh] text-gray-600 float-right absolute bottom-0 right-2\",\n                    children: [\"Time: \", item.currentTime]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 693,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 690,\n                  columnNumber: 27\n                }, this) :\n                /*#__PURE__*/\n                /* Individual Message Box */\n                _jsxDEV(\"div\", {\n                  onClick: e => startindivimessage(e, item.sender),\n                  className: \"h-[15vh] relative\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-[3vh] font-bold text-green-800\",\n                    children: [\"From: \", item.sender]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 698,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-[2vh] text-gray-600\",\n                    children: [\"Message: \", item.latestMessage]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 699,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-[2vh] text-gray-600 float-right mr-2\",\n                    children: [\"Date: \", item.currentDate]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 700,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-[2vh] text-gray-600 float-right absolute bottom-0  right-2\",\n                    children: [\"Time: \", item.currentTime]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 701,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 697,\n                  columnNumber: 27\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 687,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 9\n      }, this), mscreen ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-screen text-[2vw] bg-gray-200 flex justify-center items-center\",\n        style: {\n          width: '55%'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Start Messaging\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-screen\",\n        style: {\n          width: '55%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-500 pt-1 pl-10 text-[3vw]\",\n          style: {\n            height: '10%'\n          },\n          children: senderGroupName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-300 flex-1 overflow-y-auto\",\n          id: \"messageDisplay\",\n          style: {\n            height: '80%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-red-300 \",\n          style: {\n            height: '10%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: messagetext,\n            onChange: e => messageBox(e),\n            onClick: e => messageBox(e, false),\n            name: \"\",\n            id: \"\",\n            className: \"inline-block \",\n            style: {\n              width: '75%',\n              paddingLeft: '1%',\n              marginLeft: '10%',\n              height: '70%',\n              marginTop: '1%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 721,\n            columnNumber: 68\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              width: '10%',\n              height: '50%'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/rightarrow.png\",\n              onClick: e => sendMessage(e),\n              style: {\n                width: \"50%\",\n                height: '150%',\n                paddingTop: '5%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 721,\n              columnNumber: 359\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 721,\n            columnNumber: 311\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Homescreen, \"/plAuJz7zQixli9zt5Rnihx1GOA=\", false, function () {\n  return [useLocation];\n});\n_c = Homescreen;\nvar _c;\n$RefreshReg$(_c, \"Homescreen\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","io","require","socket","connect","Homescreen","_s","location","inputRef","groupMessages","setGroupMessage","username","password","state","searchusersgroup","setSearchUsersgroup","searchusers","setSearchsUsers","searchgroupMessages","setsearchGroupMessages","searchbool","setSearchbool","mscreen","setMscreen","senderGroupName","setSenderGroupName","currsendmessage","setCurrsendmessage","addgroupModal","setAddgroupModal","messagetext","setmessagetext","intial_user_group","setIntial_user_group","usersingroups","setUsersingroups","switchModal","to_add_group","document","getElementById","console","log","classList","remove","add","clickOnImage","event","searchimage","a","attributes","nodeValue","fetchintialusergroup","current","focus","stopPropagation","handleContainerClick","target","flag","contains","oninput","e","value","length","response","fetch","method","body","JSON","stringify","headers","data","json","data_users","users","data_group","handleReceiveMessage","currentDate","currentTime","sender","receiver","textToSend","loadindimess","on","off","startindivimessage","u2","t1","emit","identifier1","identifier2","startgroupmessage","groupmember","messageDisplayContainer","innerHTML","result","sort","b","dayA","monthA","yearA","split","map","Number","dayB","monthB","yearB","timeA","timeB","lastDate","forEach","currentEle","chat","whichuser","dateHeader","createElement","className","dateContainer","innerText","append","appendChild","messageBubble","style","marginBottom","messageWrapper","messageText","messageTime","scrollTop","scrollHeight","messageBox","d","i","indexOf","m1","substring","sendMessage","identifier","now","Date","day","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","response2","result2","submitNewGroup","group_name","val","display_res","textContent","res","res2","user","push","setTimeout","searchusersforgroup","addingroup","preventDefault","alreadyAdded","some","element","_id","prev","removeingroup","filter","res1","data1","data2","tresult","temp","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","placeholder","onChange","width","marginLeft","height","src","alt","ref","outline","paddingLeft","marginRight","maxHeight","overflowY","item","index","groupname","latestMessage","marginTop","paddingTop","_c","$RefreshReg$"],"sources":["C:/Users/Siddhant/OneDrive/Something/chat_app/src/Homescreen.js"],"sourcesContent":["import { React, useState, useRef, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nconst { io } = require(\"socket.io-client\");\r\n\r\n\r\nconst socket = io.connect(\"http://localhost:5100\")\r\n\r\nexport default function Homescreen() {\r\n  const location = useLocation();\r\n\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  const [groupMessages, setGroupMessage] = useState(false);\r\n\r\n  const { username, password } = location.state || {};\r\n\r\n  const [searchusersgroup, setSearchUsersgroup] = useState([]);\r\n\r\n  const [searchusers, setSearchsUsers] = useState([]);\r\n  const [searchgroupMessages, setsearchGroupMessages] = useState([]);\r\n\r\n  const [searchbool, setSearchbool] = useState(false);\r\n\r\n  const [mscreen, setMscreen] = useState(true);\r\n\r\n  const [senderGroupName, setSenderGroupName] = useState(\"\");\r\n\r\n  const [currsendmessage, setCurrsendmessage] = useState(\"\");\r\n\r\n\r\n  const [addgroupModal, setAddgroupModal] = useState(false);\r\n\r\n\r\n  const [messagetext, setmessagetext] = useState(\"Type message here\");\r\n\r\n  const [intial_user_group, setIntial_user_group] = useState([]);\r\n\r\n  const [usersingroups, setUsersingroups] = useState([])\r\n\r\n\r\n\r\n  const switchModal = () => {\r\n    setAddgroupModal(!addgroupModal);\r\n    let to_add_group = document.getElementById(\"to_add_group\");\r\n    if (addgroupModal) {\r\n      console.log(\"If\");\r\n      to_add_group.classList.remove(\"invisible\");\r\n      to_add_group.classList.add(\"visible\");\r\n    } else {\r\n      console.log(\"Else\");\r\n      to_add_group.classList.remove(\"visible\");\r\n      to_add_group.classList.add(\"invisible\");\r\n    }\r\n  }\r\n\r\n\r\n  const clickOnImage = (event) => {\r\n    const searchimage = document.getElementById('search_image');\r\n    let a = searchimage.attributes['src']\r\n    if (a.nodeValue == '/leftArrow.png') {\r\n      fetchintialusergroup();\r\n      a.nodeValue = '/searchIcon.png';\r\n      setSearchbool(false);\r\n      setMscreen(true);\r\n      setmessagetext(\"Type message here\");\r\n    }\r\n    else {\r\n      a.nodeValue = '/leftArrow.png';\r\n      setSearchbool(true);\r\n\r\n      if (inputRef.current) {\r\n        inputRef.current.focus();\r\n      }\r\n\r\n    }\r\n    event.stopPropagation();\r\n\r\n  }\r\n\r\n  const handleContainerClick = (event) => {\r\n    const target = event.target;\r\n    const searchimage = document.getElementById('search_image');\r\n    let a = searchimage.attributes['src']\r\n    const flag = target.classList.contains('searchnot');\r\n  }\r\n\r\n  const oninput = async (e) => {\r\n    const value = e.target.value;\r\n    setSearchbool(true);\r\n    if (value.length > 0) {\r\n      const response = await fetch('http://localhost:5010/tofetch', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ \"username\": value }),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n      const data = await response.json();\r\n      const data_users = data.users\r\n      const data_group = data.groupMessages;\r\n\r\n      setSearchsUsers(data_users || []);\r\n      setsearchGroupMessages(data_group || []);\r\n    }\r\n    else {\r\n      setSearchsUsers([]);\r\n      setsearchGroupMessages([]);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const handleReceiveMessage = (data) => {\r\n      // console.log(\"In the receive message\");\r\n      console.log(data);\r\n      const currentDate = data.currentDate;\r\n      const currentTime = data.currentTime;\r\n      const sender = data.sender;\r\n      const receiver = data.receiver;\r\n      const textToSend = data.textToSend;\r\n\r\n      if (currsendmessage == \"\") {\r\n        setCurrsendmessage({\r\n          \"currentDate\": currentDate,\r\n          \"currentTime\": currentTime,\r\n          \"sender\": sender,\r\n          \"receiver\": receiver,\r\n          \"textToSend\": textToSend\r\n        });\r\n\r\n        fetchintialusergroup();\r\n        if (senderGroupName == receiver) {\r\n\r\n          loadindimess(sender, receiver);\r\n        }\r\n\r\n      }\r\n      else if (currsendmessage[\"currentTime\"] != currentTime) {\r\n        setCurrsendmessage({\r\n          \"currentDate\": currentDate,\r\n          \"currentTime\": currentTime,\r\n          \"sender\": sender,\r\n          \"receiver\": receiver,\r\n          \"textToSend\": textToSend\r\n        });\r\n        fetchintialusergroup();\r\n        if (senderGroupName == receiver) {\r\n\r\n          loadindimess(sender, receiver);\r\n        }\r\n      }\r\n\r\n    };\r\n\r\n    socket.on(\"receive_message\", handleReceiveMessage);\r\n\r\n    return () => {\r\n      socket.off(\"receive_message\", handleReceiveMessage);\r\n    };\r\n  });\r\n\r\n  \r\n\r\n\r\n\r\n  const startindivimessage = async (e, u2) => {\r\n    setMscreen(false);\r\n    const receiver = username;\r\n    const sender = u2;\r\n    setGroupMessage(false);\r\n    if (sender == receiver) {\r\n      const t1 = receiver + ' (Self)';\r\n      setSenderGroupName(t1);\r\n      socket.emit(\"join_room\", t1);\r\n    }\r\n    else {\r\n      setSenderGroupName(sender);\r\n      const identifier1 = receiver + '#' + sender;\r\n      const identifier2 = sender + '#' + receiver;\r\n      socket.emit(\"join_room\", identifier1);\r\n      socket.emit(\"join_room\", identifier2);\r\n    }\r\n    setmessagetext(\"Type message here\");\r\n    loadindimess(receiver, sender);\r\n  }\r\n\r\n  const startgroupmessage=async(e,groupmember)=>{\r\n      \r\n  }\r\n  const loadindimess = async (receiver, sender) => {\r\n\r\n\r\n    const response = await fetch('http://localhost:5100/tofetchindichat', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ \"receiver\": receiver, \"sender\": sender }),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    let messageDisplayContainer = document.getElementById(\"messageDisplay\");\r\n    if (messageDisplayContainer != null)\r\n      messageDisplayContainer.innerHTML = \"\";\r\n    const result = await response.json();\r\n    if (result.length == 0) {\r\n\r\n      messageDisplayContainer.innerHTML = \"\";\r\n      return;\r\n    }\r\n\r\n    result.sort((a, b) => {\r\n      // Parse dates (currentDate is in DD/MM/YYYY format)\r\n      const [dayA, monthA, yearA] = a.currentDate.split('/').map(Number);\r\n      const [dayB, monthB, yearB] = b.currentDate.split('/').map(Number);\r\n\r\n      // Compare years, months, days first\r\n      if (yearA !== yearB) return yearA - yearB;\r\n      if (monthA !== monthB) return monthA - monthB;\r\n      if (dayA !== dayB) return dayA - dayB;\r\n\r\n      // If the dates are the same, compare times\r\n      const timeA = a.currentTime.split(':').map(Number); // [hours, minutes, seconds]\r\n      const timeB = b.currentTime.split(':').map(Number);\r\n\r\n      // Compare hours, minutes, seconds\r\n      if (timeA[0] !== timeB[0]) return timeA[0] - timeB[0];\r\n      if (timeA[1] !== timeB[1]) return timeA[1] - timeB[1];\r\n      return timeA[2] - timeB[2];\r\n    });\r\n\r\n    let lastDate = \"10/12/2024\";\r\n\r\n    result.forEach((currentEle) => {\r\n      const { chat, currentDate, currentTime, receiver, sender, whichuser } = currentEle;\r\n\r\n      // Add a date header if the date changes\r\n      if (currentDate !== lastDate) {\r\n        lastDate = currentDate;\r\n        const dateHeader = document.createElement(\"h1\"); // Change 'h' to 'h1'\r\n        dateHeader.className = \"flex justify-center items-center h-12\"; // Flexbox for centering\r\n\r\n        const dateContainer = document.createElement(\"span\");\r\n        dateContainer.className = \"bg-red-700 border border-yellow-700 text-white px-4 py-2 rounded-md\";\r\n        dateContainer.innerText = currentDate;\r\n\r\n        dateHeader.append(dateContainer);\r\n        messageDisplayContainer.appendChild(dateHeader);\r\n      }\r\n\r\n      // Create a message bubble\r\n      const messageBubble = document.createElement(\"div\");\r\n      messageBubble.className = `p-3 rounded-lg m-2 max-w-xs ${whichuser === receiver\r\n        ? \"bg-blue-500 text-white self-end ml-auto\"\r\n        : \"bg-gray-200 text-black self-start mr-auto\"\r\n        }`;\r\n\r\n      messageBubble.style.marginBottom = \"1rem\"; // This adds some space between messages\r\n\r\n      // Create a wrapper to hold both the message and the time\r\n      const messageWrapper = document.createElement(\"div\");\r\n      messageWrapper.className = \"flex flex-col h-[7vh]\"; // Stack the message and time vertically\r\n\r\n      // Message text\r\n      const messageText = document.createElement(\"p\");\r\n      messageText.className = \"text-[1.3vw] mb-1\"; // Add some bottom margin between message and time\r\n      messageText.innerText = chat;\r\n\r\n      // Message time\r\n      const messageTime = document.createElement(\"span\");\r\n      messageTime.className = \"text-[1vw] text-gray-600 self-end\"; // Align time to the bottom-right\r\n      messageTime.innerText = currentTime;\r\n\r\n      // Append text and time to the wrapper\r\n      messageWrapper.appendChild(messageText);\r\n      messageWrapper.appendChild(messageTime);\r\n\r\n      // Append the wrapper to the message bubble\r\n      messageBubble.appendChild(messageWrapper);\r\n\r\n      // Append bubble to container\r\n      messageDisplayContainer.appendChild(messageBubble);\r\n    });\r\n    messageDisplayContainer.scrollTop = messageDisplayContainer.scrollHeight;\r\n\r\n\r\n  }\r\n    ;\r\n\r\n  // When click on send message arrow\r\n  const messageBox = async (e, flag = true) => {\r\n    e.stopPropagation();\r\n    if (flag == true) {\r\n      if (messagetext == \"Type message here\") {\r\n        const d = e.target.value;\r\n        const i = d.indexOf('Type message here')\r\n        const m1 = d.substring(i + ('Type message here'.length));\r\n        setmessagetext(m1);\r\n      }\r\n      else if (e.target.value && e.target.value.length > 0) {\r\n\r\n        setmessagetext(e.target.value);\r\n      }\r\n      else {\r\n\r\n        setmessagetext(\"Type message here\");\r\n      }\r\n    }\r\n    else {\r\n      if (messagetext == \"Type message here\") {\r\n        e.target.value = \"\";\r\n        setmessagetext(e.target.value);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  const sendMessage = async (e) => {\r\n    const textToSend = messagetext;\r\n    const receiver = username;\r\n    const sender = senderGroupName;\r\n\r\n    if (textToSend.length == 0) {\r\n      setmessagetext(\"Type message here\");\r\n      return;\r\n    }\r\n    if (groupMessages == false) {\r\n      const identifier = receiver + ' (Self)';\r\n      if (senderGroupName == identifier) {\r\n\r\n        // Coming soon\r\n        // const identifier1 = receiver + '#' + sender;\r\n        // const identifier2 = sender + '#' + receiver;\r\n        const now = new Date(); // Create a new Date object with the current date and time\r\n\r\n        // Get the date components\r\n        const day = now.getDate(); // Day of the month (1-31)\r\n        const month = now.getMonth() + 1; // Month (0-11), so add 1 for 1-12\r\n        const year = now.getFullYear(); // Full year (e.g., 2024)\r\n\r\n        const hours = now.getHours(); // Hours (0-23)\r\n        const minutes = now.getMinutes(); // Minutes (0-59)\r\n        const seconds = now.getSeconds(); // Seconds (0-59)\r\n\r\n\r\n        const currentDate = `${day}/${month}/${year}`;\r\n        const currentTime = `${hours}:${minutes}:${seconds}`;\r\n\r\n        setmessagetext(\"Type message here\");\r\n        const response = await fetch('http://localhost:5100/saveindichat', {\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            \"receiver\": receiver,\r\n            \"sender\": receiver,\r\n            \"whichuser\": receiver,\r\n            \"textToSend\": textToSend,\r\n            \"currentDate\": currentDate,\r\n            \"currentTime\": currentTime\r\n          }),\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n        setSearchbool(false);\r\n        fetchintialusergroup();\r\n\r\n        loadindimess(receiver, receiver);\r\n\r\n\r\n\r\n      }\r\n      else {\r\n        const identifier1 = receiver + '#' + sender;\r\n        const identifier2 = sender + '#' + receiver;\r\n        const now = new Date(); // Create a new Date object with the current date and time\r\n\r\n        // Get the date components\r\n        const day = now.getDate(); // Day of the month (1-31)\r\n        const month = now.getMonth() + 1; // Month (0-11), so add 1 for 1-12\r\n        const year = now.getFullYear(); // Full year (e.g., 2024)\r\n\r\n        const hours = now.getHours(); // Hours (0-23)\r\n        const minutes = now.getMinutes(); // Minutes (0-59)\r\n        const seconds = now.getSeconds(); // Seconds (0-59)\r\n\r\n\r\n        const currentDate = `${day}/${month}/${year}`;\r\n        const currentTime = `${hours}:${minutes}:${seconds}`;\r\n\r\n        setmessagetext(\"Type message here\");\r\n        const response = await fetch('http://localhost:5100/saveindichat', {\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            \"receiver\": receiver,\r\n            \"sender\": sender,\r\n            \"whichuser\": receiver,\r\n            \"textToSend\": textToSend,\r\n            \"currentDate\": currentDate,\r\n            \"currentTime\": currentTime\r\n          }),\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n        const result = await response.json();\r\n        const response2 = await fetch('http://localhost:5100/saveindichat', {\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            \"receiver\": sender,\r\n            \"sender\": receiver,\r\n            \"whichuser\": receiver,\r\n            \"textToSend\": textToSend,\r\n            \"currentDate\": currentDate,\r\n            \"currentTime\": currentTime\r\n          }),\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n        const result2 = await response2.json();\r\n        socket.emit('send_message', { identifier1, identifier2, receiver, sender, textToSend, currentDate, currentTime });\r\n      \r\n        setSearchbool(false);\r\n        fetchintialusergroup();\r\n        loadindimess(receiver, senderGroupName);\r\n\r\n      }\r\n    }\r\n    else {\r\n      //For group chat coming soon\r\n    }\r\n\r\n  }\r\n  const submitNewGroup = async () => {\r\n    let group_name = document.getElementById(\"group_name\");\r\n    const val = group_name.value;\r\n    if (val.length == 0) {\r\n      let display_res = document.getElementById(\"display_res\");\r\n      display_res.textContent = \"Enter Group Name\";\r\n      return;\r\n    }\r\n    else {\r\n      let display_res = document.getElementById(\"display_res\");\r\n      display_res.textContent = \"\";\r\n    }\r\n\r\n    if (usersingroups.length <= 1) {\r\n      let display_res = document.getElementById(\"display_res\");\r\n      display_res.textContent = \"Atleast 2 users are required\";\r\n      return;\r\n    }\r\n    else {\r\n      let display_res = document.getElementById(\"display_res\");\r\n      display_res.textContent = \"\";\r\n    }\r\n\r\n    const response = await fetch('http://localhost:4000/signup', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ \"username\": val }),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    const data = await response.json();\r\n    const length = data.length;\r\n    if (length == 1) {\r\n      let display_res = document.getElementById(\"display_res\");\r\n      display_res.textContent = \"Group name matches with username\";\r\n      return;\r\n    }\r\n\r\n\r\n\r\n    const res = await fetch(\"http://localhost:5200/checkgroupexist\", {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        \"groupname\": val\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    const res2 = await res.json();\r\n    if (res2.flag == \"true\") {\r\n      let display_res = document.getElementById(\"display_res\");\r\n      display_res.textContent = \"Group name already exists\";\r\n      return;\r\n    }\r\n    else {\r\n      let display_res = document.getElementById(\"display_res\");\r\n      display_res.textContent = \"\";\r\n    }\r\n    let groupmember = [];\r\n    groupmember = usersingroups.map((user) => user.username);\r\n    groupmember.push(username);\r\n    const now = new Date(); // Create a new Date object with the current date and time\r\n\r\n    // Get the date components\r\n    const day = now.getDate(); // Day of the month (1-31)\r\n    const month = now.getMonth() + 1; // Month (0-11), so add 1 for 1-12\r\n    const year = now.getFullYear(); // Full year (e.g., 2024)\r\n\r\n    const hours = now.getHours(); // Hours (0-23)\r\n    const minutes = now.getMinutes(); // Minutes (0-59)\r\n    const seconds = now.getSeconds(); // Seconds (0-59)\r\n\r\n    const currentDate = `${day}/${month}/${year}`;\r\n    const currentTime = `${hours}:${minutes}:${seconds}`;\r\n    const response2 = await fetch('http://localhost:5200/savegroupinfo', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        \"receiver\": username,\r\n        \"groupname\": val,\r\n        \"groupmember\": groupmember,\r\n        \"currentDate\": currentDate,\r\n        \"currentTime\": currentTime\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    let display_res = document.getElementById(\"display_res\");\r\n    display_res.textContent = \"Group created successfully\";\r\n    setTimeout(() => {\r\n      switchModal();\r\n      setSearchUsersgroup([]);\r\n      setUsersingroups([]);\r\n    }, 2000);\r\n\r\n  }\r\n\r\n  const searchusersforgroup = async (e) => {\r\n    const sender = e.target.value;\r\n\r\n    if (sender.length > 0) {\r\n      const response = await fetch('http://localhost:5010/tofetch', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ \"username\": sender }),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n      const data = await response.json();\r\n      const data_users = data.users\r\n      const data_group = data.groupMessages;\r\n\r\n      setSearchUsersgroup(data_users || []);\r\n\r\n    }\r\n    else {\r\n      setSearchUsersgroup([]);\r\n    }\r\n  }\r\n\r\n  const addingroup = (e, user) => {\r\n    e.preventDefault();\r\n    const alreadyAdded = usersingroups.some((element) => element._id === user._id);\r\n    if (alreadyAdded) return;\r\n\r\n    setUsersingroups((prev) => [...prev, user]);\r\n\r\n  }\r\n  const removeingroup = (e, user) => {\r\n    e.preventDefault();\r\n    setUsersingroups((prev) => prev.filter((element) => element._id !== user._id))\r\n  }\r\n  const fetchintialusergroup = async () => {\r\n    const res1 = await fetch('http://localhost:5100/intialindires', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ receiver: username }),\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const data1 = await res1.json();\r\n\r\n    const res2 = await fetch('http://localhost:5200/intialresultgroup', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ receiver: username }),\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const data2 = await res2.json();\r\n\r\n\r\n    let tresult = [...data1, ...data2];\r\n\r\n\r\n    let temp = tresult.sort((b, a) => {\r\n      // Parse dates (currentDate is in DD/MM/YYYY format)\r\n      const [dayA, monthA, yearA] = a.currentDate.split('/').map(Number);\r\n      const [dayB, monthB, yearB] = b.currentDate.split('/').map(Number);\r\n\r\n      // Compare years, months, days first\r\n      if (yearA !== yearB) return yearA - yearB;\r\n      if (monthA !== monthB) return monthA - monthB;\r\n      if (dayA !== dayB) return dayA - dayB;\r\n\r\n      // If the dates are the same, compare times\r\n      const timeA = a.currentTime.split(':').map(Number); // [hours, minutes, seconds]\r\n      const timeB = b.currentTime.split(':').map(Number);\r\n\r\n      // Compare hours, minutes, seconds\r\n      if (timeA[0] !== timeB[0]) return timeA[0] - timeB[0];\r\n      if (timeA[1] !== timeB[1]) return timeA[1] - timeB[1];\r\n      return timeA[2] - timeB[2];\r\n    });\r\n\r\n\r\n\r\n    console.log(\"Sorted Array:\", temp);\r\n\r\n    // Update the state with sorted entries\r\n    setIntial_user_group([...temp]); // Create a new array to ensure immutability\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchintialusergroup();\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {addgroupModal &&\r\n        <div className='bg-gray-300 fixed top-10 left-[25vw] h-[80vh] w-[50vw] z-20'>\r\n          <button onClick={switchModal} className='bg-red-500  hover:bg-red-600 rounded mt-[1vh] mr-[0.5vw] float-right text-[1.5vw] h-[8vh] w-[5vw]' >Close</button>\r\n          <input type=\"text\" id=\"group_name\" name=\"\" placeholder='Enter Group Name: ' className='relative top-4 left-4 w-[30vw] h-[6vh] p-2 border-black' />\r\n          <input type=\"text\" id=\"search_user\" onChange={e => searchusersforgroup(e)} name=\"\" placeholder='Search User: ' className='relative top-7 left-4 w-[30vw] h-[6vh] p-2 border-black' />\r\n          <div className='bg-white h-[45vh] mt-[7vh] w-[23vw] ml-[1vw] float-left overflow-y-auto class=\"[&::-webkit-scrollbar]:hidden [-ms-overflow-style:none] [scrollbar-width:none]'>\r\n            {searchusersgroup.length > 0 ? (\r\n              <ul className='text-2xl mt-2  searchnot'>\r\n                {searchusersgroup.map((user) => (user.username != username &&\r\n                  <li key={user._id} style={{ width: '90%', marginLeft: '5%' }} className='border-8 cursor-pointer mt-2 border-gray-700 pl-2  h-[9vh]  w-88  searchnot text-[2vw]'>{user.username} <button type=\"button\" onClick={e => addingroup(e, user)} className='bg-green-300 hover:bg-green-600 h-[5vh] float-right mt-1 mr-1 rounded w-[6vw]'>ADD</button> </li>\r\n                ))}\r\n              </ul>\r\n            ) : (<ul className='text-[1.8vw] mt-2 ml-7 searchnot'> No Users found</ul>)}\r\n          </div>\r\n          <div className='bg-white h-[45vh] mt-[7vh] w-[23vw] mr-[1vw] float-right'>\r\n            {usersingroups.length > 0 ? (\r\n              <ul className='text-2xl mt-2  searchnot'>\r\n                {usersingroups.map((user) => (\r\n                  <li key={user._id} style={{ width: '90%', marginLeft: '5%' }} className='border-8 cursor-pointer mt-2 border-gray-700 pl-2  h-[9vh]  w-88  searchnot text-[2vw]'>{user.username} <button type=\"button\" onClick={e => removeingroup(e, user)} className='bg-red-500 hover:bg-red-600 h-[5vh] float-right mt-1 mr-1 rounded w-[8vw]'>Remove</button> </li>\r\n                ))}\r\n              </ul>\r\n            ) : (<ul className='text-[1.8vw] mt-2 ml-7 searchnot'> No Users is added</ul>)}\r\n          </div>\r\n          <div id='display_res' className='text-red-500 h-[5vh] mt-[54vh] mx-auto w-[30vw] text-center'></div>\r\n          <button className='bg-green-500  hover:bg-green-600 rounded ml-[20vw]  mt-[1vh] text-[1.5vw] h-[6vh] w-[8vw]' onClick={e => submitNewGroup(e)} >Submit</button>\r\n        </div>}\r\n      <div className='flex flex-row h-screen' onClick={handleContainerClick} >\r\n        <div className=' bg-gray-400' style={{ width: '5%', height: '100%' }}>\r\n\r\n        </div>\r\n        <div style={{ width: '40%' ,height:\"100%\"}}>\r\n          <div className='bg-fixed'>\r\n            <span className='text-[2vw] font-bold relative top-3 pl-[2vw]'>\r\n              Chats\r\n            </span>\r\n\r\n            <button type=\"button\" id=\"to_add_group\" className='relative left-[13vw] text-[2vw] top-3 font-bold border-gray-500 rounded-lg border-[0.5vw] border-solid visible' onClick={switchModal}>New Group Chat</button>\r\n\r\n\r\n            <br />\r\n            <div className='mt-10 flex items-center' id='search_container' style={{ marginLeft: '5%' }}>\r\n              <span className='rounded-l-md bg-gray-200 h-10 pl-3 hover:cursor-pointer' onClick={(e) => clickOnImage(e)}><img src=\"/searchIcon.png\" alt=\"\" style={{ height: '30px', width: '25px' }} id='search_image' className='inline-block h-10 w-3 pt-2' /></span>\r\n              <input type=\"text\" ref={inputRef} placeholder='Search' id=\"search_user\" className=' h-10 rounded-r-md inline bg-gray-200' onChange={(e) => oninput(e)}\r\n                style={{ outline: 'None', width: '90%', paddingLeft: '10%', marginRight: '5%' }} onClick={(e) => clickOnImage(e)} />\r\n            </div>\r\n          </div>\r\n          {searchbool ? (\r\n            <div id='search_panel' className='searchnot overflow-auto' style={{ maxHeight: '480px', overflowY: 'auto' }}>\r\n\r\n              {searchusers.length>0? (\r\n                <ul className='text-2xl mt-2  searchnot'>\r\n                  <span className='ml-[2.2vw] text-[2vw] searchnot'>Search User</span>\r\n                  {searchusers.map((user) => (\r\n                    <li key={user._id} onClick={(e) => startindivimessage(e, user.username)}  className='border-8 cursor-pointer mt-[2vh] ml-[2vw] border-gray-700 pl-[1vw] pt-[1vh]  h-[10vh]  w-[36vw]  searchnot text-[2vw]'>{user.username}</li>\r\n                  ))}\r\n                </ul>\r\n              ): <div className='ml-[2.2vw] mt-[0.5vh] text-[2vw] searchnot'>Search User not Found</div>}\r\n              </div>) : \r\n            (<div className='overflow-auto h-[78vh] class=\"[&::-webkit-scrollbar]:hidden [-ms-overflow-style:none] [scrollbar-width:none]'  >\r\n              {intial_user_group.length>0 && (\r\n                <ul className=''>\r\n                  <div >\r\n                    {intial_user_group.map((item, index) => (\r\n                      <li key={index}   className='border-8 cursor-pointer mt-[2vh] ml-[2vw] border-gray-700 pl-[1vw] pt-[1vh]   w-[36vw]  searchnot text-[2vw]'>\r\n                        {/* Group Box */}\r\n                        {item.groupname ? (\r\n                          <div className='h-[12vh] relative'>\r\n                            <p className=\"text-[3vh] font-bold text-blue-800\">{item.groupname}</p>\r\n                            <p className=\"text-[2vh] text-gray-600 float-right mr-2\">Date: {item.currentDate}</p>\r\n                            <p className=\"text-[2vh] text-gray-600 float-right absolute bottom-0 right-2\">Time: {item.currentTime}</p>\r\n                          </div>\r\n                        ) : (\r\n                          /* Individual Message Box */\r\n                          <div onClick={(e) => startindivimessage(e ,item.sender)} className='h-[15vh] relative'> \r\n                            <p className=\"text-[3vh] font-bold text-green-800\">From: {item.sender}</p>\r\n                            <p className=\"text-[2vh] text-gray-600\">Message: {item.latestMessage}</p>\r\n                            <p className=\"text-[2vh] text-gray-600 float-right mr-2\">Date: {item.currentDate}</p>\r\n                            <p className=\"text-[2vh] text-gray-600 float-right absolute bottom-0  right-2\">Time: {item.currentTime}</p>\r\n                          </div>\r\n                        )}\r\n                      </li>\r\n                    ))}\r\n                  </div>\r\n                </ul>\r\n              )}\r\n\r\n            </div>)}\r\n        </div>\r\n        {mscreen ? (\r\n          <div className='h-screen text-[2vw] bg-gray-200 flex justify-center items-center' style={{ width: '55%' }}>\r\n            <div>\r\n              Start Messaging\r\n            </div>\r\n          </div>) :\r\n          (<div className='h-screen' style={{ width: '55%' }} >\r\n            <div className='bg-gray-500 pt-1 pl-10 text-[3vw]' style={{ height: '10%' }}>{senderGroupName}</div>\r\n            <div className='bg-gray-300 flex-1 overflow-y-auto' id=\"messageDisplay\" style={{ height: '80%' }} ></div>\r\n            <div className='bg-red-300 ' style={{ height: '10%' }}><input type=\"text\" value={messagetext} onChange={e => messageBox(e)} onClick={e => messageBox(e, false)} name=\"\" id=\"\" className='inline-block ' style={{ width: '75%', paddingLeft: '1%', marginLeft: '10%', height: '70%', marginTop: '1%' }} /> <button style={{ width: '10%', height: '50%' }}><img src=\"/rightarrow.png\" onClick={(e) => sendMessage(e)} style={{ width: \"50%\", height: '150%', paddingTop: '5%' }} /></button></div>\r\n          </div>)}\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAC/C,MAAM;EAAEC;AAAG,CAAC,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAG1C,MAAMC,MAAM,GAAGF,EAAE,CAACG,OAAO,CAAC,uBAAuB,CAAC;AAElD,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAG9B,MAAMY,QAAQ,GAAGd,MAAM,CAAC,IAAI,CAAC;EAE7B,MAAM,CAACe,aAAa,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAExD,MAAM;IAAEkB,QAAQ;IAAEC;EAAS,CAAC,GAAGL,QAAQ,CAACM,KAAK,IAAI,CAAC,CAAC;EAEnD,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAE5D,MAAM,CAACuB,WAAW,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACnD,MAAM,CAACyB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAElE,MAAM,CAAC2B,UAAU,EAAEC,aAAa,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAM,CAAC6B,OAAO,EAAEC,UAAU,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAM,CAAC+B,eAAe,EAAEC,kBAAkB,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAM,CAACiC,eAAe,EAAEC,kBAAkB,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EAG1D,MAAM,CAACmC,aAAa,EAAEC,gBAAgB,CAAC,GAAGpC,QAAQ,CAAC,KAAK,CAAC;EAGzD,MAAM,CAACqC,WAAW,EAAEC,cAAc,CAAC,GAAGtC,QAAQ,CAAC,mBAAmB,CAAC;EAEnE,MAAM,CAACuC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EAE9D,MAAM,CAACyC,aAAa,EAAEC,gBAAgB,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC;EAItD,MAAM2C,WAAW,GAAGA,CAAA,KAAM;IACxBP,gBAAgB,CAAC,CAACD,aAAa,CAAC;IAChC,IAAIS,YAAY,GAAGC,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;IAC1D,IAAIX,aAAa,EAAE;MACjBY,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;MACjBJ,YAAY,CAACK,SAAS,CAACC,MAAM,CAAC,WAAW,CAAC;MAC1CN,YAAY,CAACK,SAAS,CAACE,GAAG,CAAC,SAAS,CAAC;IACvC,CAAC,MAAM;MACLJ,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnBJ,YAAY,CAACK,SAAS,CAACC,MAAM,CAAC,SAAS,CAAC;MACxCN,YAAY,CAACK,SAAS,CAACE,GAAG,CAAC,WAAW,CAAC;IACzC;EACF,CAAC;EAGD,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAMC,WAAW,GAAGT,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;IAC3D,IAAIS,CAAC,GAAGD,WAAW,CAACE,UAAU,CAAC,KAAK,CAAC;IACrC,IAAID,CAAC,CAACE,SAAS,IAAI,gBAAgB,EAAE;MACnCC,oBAAoB,CAAC,CAAC;MACtBH,CAAC,CAACE,SAAS,GAAG,iBAAiB;MAC/B7B,aAAa,CAAC,KAAK,CAAC;MACpBE,UAAU,CAAC,IAAI,CAAC;MAChBQ,cAAc,CAAC,mBAAmB,CAAC;IACrC,CAAC,MACI;MACHiB,CAAC,CAACE,SAAS,GAAG,gBAAgB;MAC9B7B,aAAa,CAAC,IAAI,CAAC;MAEnB,IAAIb,QAAQ,CAAC4C,OAAO,EAAE;QACpB5C,QAAQ,CAAC4C,OAAO,CAACC,KAAK,CAAC,CAAC;MAC1B;IAEF;IACAP,KAAK,CAACQ,eAAe,CAAC,CAAC;EAEzB,CAAC;EAED,MAAMC,oBAAoB,GAAIT,KAAK,IAAK;IACtC,MAAMU,MAAM,GAAGV,KAAK,CAACU,MAAM;IAC3B,MAAMT,WAAW,GAAGT,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;IAC3D,IAAIS,CAAC,GAAGD,WAAW,CAACE,UAAU,CAAC,KAAK,CAAC;IACrC,MAAMQ,IAAI,GAAGD,MAAM,CAACd,SAAS,CAACgB,QAAQ,CAAC,WAAW,CAAC;EACrD,CAAC;EAED,MAAMC,OAAO,GAAG,MAAOC,CAAC,IAAK;IAC3B,MAAMC,KAAK,GAAGD,CAAC,CAACJ,MAAM,CAACK,KAAK;IAC5BxC,aAAa,CAAC,IAAI,CAAC;IACnB,IAAIwC,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MACpB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QAC5DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAE,UAAU,EAAEP;QAAM,CAAC,CAAC;QAC3CQ,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACF,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClC,MAAMC,UAAU,GAAGF,IAAI,CAACG,KAAK;MAC7B,MAAMC,UAAU,GAAGJ,IAAI,CAAC7D,aAAa;MAErCQ,eAAe,CAACuD,UAAU,IAAI,EAAE,CAAC;MACjCrD,sBAAsB,CAACuD,UAAU,IAAI,EAAE,CAAC;IAC1C,CAAC,MACI;MACHzD,eAAe,CAAC,EAAE,CAAC;MACnBE,sBAAsB,CAAC,EAAE,CAAC;IAC5B;EACF,CAAC;EAEDxB,SAAS,CAAC,MAAM;IACd,MAAMgF,oBAAoB,GAAIL,IAAI,IAAK;MACrC;MACA9B,OAAO,CAACC,GAAG,CAAC6B,IAAI,CAAC;MACjB,MAAMM,WAAW,GAAGN,IAAI,CAACM,WAAW;MACpC,MAAMC,WAAW,GAAGP,IAAI,CAACO,WAAW;MACpC,MAAMC,MAAM,GAAGR,IAAI,CAACQ,MAAM;MAC1B,MAAMC,QAAQ,GAAGT,IAAI,CAACS,QAAQ;MAC9B,MAAMC,UAAU,GAAGV,IAAI,CAACU,UAAU;MAElC,IAAItD,eAAe,IAAI,EAAE,EAAE;QACzBC,kBAAkB,CAAC;UACjB,aAAa,EAAEiD,WAAW;UAC1B,aAAa,EAAEC,WAAW;UAC1B,QAAQ,EAAEC,MAAM;UAChB,UAAU,EAAEC,QAAQ;UACpB,YAAY,EAAEC;QAChB,CAAC,CAAC;QAEF7B,oBAAoB,CAAC,CAAC;QACtB,IAAI3B,eAAe,IAAIuD,QAAQ,EAAE;UAE/BE,YAAY,CAACH,MAAM,EAAEC,QAAQ,CAAC;QAChC;MAEF,CAAC,MACI,IAAIrD,eAAe,CAAC,aAAa,CAAC,IAAImD,WAAW,EAAE;QACtDlD,kBAAkB,CAAC;UACjB,aAAa,EAAEiD,WAAW;UAC1B,aAAa,EAAEC,WAAW;UAC1B,QAAQ,EAAEC,MAAM;UAChB,UAAU,EAAEC,QAAQ;UACpB,YAAY,EAAEC;QAChB,CAAC,CAAC;QACF7B,oBAAoB,CAAC,CAAC;QACtB,IAAI3B,eAAe,IAAIuD,QAAQ,EAAE;UAE/BE,YAAY,CAACH,MAAM,EAAEC,QAAQ,CAAC;QAChC;MACF;IAEF,CAAC;IAED5E,MAAM,CAAC+E,EAAE,CAAC,iBAAiB,EAAEP,oBAAoB,CAAC;IAElD,OAAO,MAAM;MACXxE,MAAM,CAACgF,GAAG,CAAC,iBAAiB,EAAER,oBAAoB,CAAC;IACrD,CAAC;EACH,CAAC,CAAC;EAMF,MAAMS,kBAAkB,GAAG,MAAAA,CAAOxB,CAAC,EAAEyB,EAAE,KAAK;IAC1C9D,UAAU,CAAC,KAAK,CAAC;IACjB,MAAMwD,QAAQ,GAAGpE,QAAQ;IACzB,MAAMmE,MAAM,GAAGO,EAAE;IACjB3E,eAAe,CAAC,KAAK,CAAC;IACtB,IAAIoE,MAAM,IAAIC,QAAQ,EAAE;MACtB,MAAMO,EAAE,GAAGP,QAAQ,GAAG,SAAS;MAC/BtD,kBAAkB,CAAC6D,EAAE,CAAC;MACtBnF,MAAM,CAACoF,IAAI,CAAC,WAAW,EAAED,EAAE,CAAC;IAC9B,CAAC,MACI;MACH7D,kBAAkB,CAACqD,MAAM,CAAC;MAC1B,MAAMU,WAAW,GAAGT,QAAQ,GAAG,GAAG,GAAGD,MAAM;MAC3C,MAAMW,WAAW,GAAGX,MAAM,GAAG,GAAG,GAAGC,QAAQ;MAC3C5E,MAAM,CAACoF,IAAI,CAAC,WAAW,EAAEC,WAAW,CAAC;MACrCrF,MAAM,CAACoF,IAAI,CAAC,WAAW,EAAEE,WAAW,CAAC;IACvC;IACA1D,cAAc,CAAC,mBAAmB,CAAC;IACnCkD,YAAY,CAACF,QAAQ,EAAED,MAAM,CAAC;EAChC,CAAC;EAED,MAAMY,iBAAiB,GAAC,MAAAA,CAAM9B,CAAC,EAAC+B,WAAW,KAAG,CAE9C,CAAC;EACD,MAAMV,YAAY,GAAG,MAAAA,CAAOF,QAAQ,EAAED,MAAM,KAAK;IAG/C,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;MACpEC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAE,UAAU,EAAEW,QAAQ;QAAE,QAAQ,EAAED;MAAO,CAAC,CAAC;MAChET,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,IAAIuB,uBAAuB,GAAGtD,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC;IACvE,IAAIqD,uBAAuB,IAAI,IAAI,EACjCA,uBAAuB,CAACC,SAAS,GAAG,EAAE;IACxC,MAAMC,MAAM,GAAG,MAAM/B,QAAQ,CAACQ,IAAI,CAAC,CAAC;IACpC,IAAIuB,MAAM,CAAChC,MAAM,IAAI,CAAC,EAAE;MAEtB8B,uBAAuB,CAACC,SAAS,GAAG,EAAE;MACtC;IACF;IAEAC,MAAM,CAACC,IAAI,CAAC,CAAC/C,CAAC,EAAEgD,CAAC,KAAK;MACpB;MACA,MAAM,CAACC,IAAI,EAAEC,MAAM,EAAEC,KAAK,CAAC,GAAGnD,CAAC,CAAC4B,WAAW,CAACwB,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;MAClE,MAAM,CAACC,IAAI,EAAEC,MAAM,EAAEC,KAAK,CAAC,GAAGT,CAAC,CAACpB,WAAW,CAACwB,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;;MAElE;MACA,IAAIH,KAAK,KAAKM,KAAK,EAAE,OAAON,KAAK,GAAGM,KAAK;MACzC,IAAIP,MAAM,KAAKM,MAAM,EAAE,OAAON,MAAM,GAAGM,MAAM;MAC7C,IAAIP,IAAI,KAAKM,IAAI,EAAE,OAAON,IAAI,GAAGM,IAAI;;MAErC;MACA,MAAMG,KAAK,GAAG1D,CAAC,CAAC6B,WAAW,CAACuB,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC,CAAC,CAAC;MACpD,MAAMK,KAAK,GAAGX,CAAC,CAACnB,WAAW,CAACuB,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;;MAElD;MACA,IAAII,KAAK,CAAC,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,CAAC,EAAE,OAAOD,KAAK,CAAC,CAAC,CAAC,GAAGC,KAAK,CAAC,CAAC,CAAC;MACrD,IAAID,KAAK,CAAC,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,CAAC,EAAE,OAAOD,KAAK,CAAC,CAAC,CAAC,GAAGC,KAAK,CAAC,CAAC,CAAC;MACrD,OAAOD,KAAK,CAAC,CAAC,CAAC,GAAGC,KAAK,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC;IAEF,IAAIC,QAAQ,GAAG,YAAY;IAE3Bd,MAAM,CAACe,OAAO,CAAEC,UAAU,IAAK;MAC7B,MAAM;QAAEC,IAAI;QAAEnC,WAAW;QAAEC,WAAW;QAAEE,QAAQ;QAAED,MAAM;QAAEkC;MAAU,CAAC,GAAGF,UAAU;;MAElF;MACA,IAAIlC,WAAW,KAAKgC,QAAQ,EAAE;QAC5BA,QAAQ,GAAGhC,WAAW;QACtB,MAAMqC,UAAU,GAAG3E,QAAQ,CAAC4E,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;QACjDD,UAAU,CAACE,SAAS,GAAG,uCAAuC,CAAC,CAAC;;QAEhE,MAAMC,aAAa,GAAG9E,QAAQ,CAAC4E,aAAa,CAAC,MAAM,CAAC;QACpDE,aAAa,CAACD,SAAS,GAAG,qEAAqE;QAC/FC,aAAa,CAACC,SAAS,GAAGzC,WAAW;QAErCqC,UAAU,CAACK,MAAM,CAACF,aAAa,CAAC;QAChCxB,uBAAuB,CAAC2B,WAAW,CAACN,UAAU,CAAC;MACjD;;MAEA;MACA,MAAMO,aAAa,GAAGlF,QAAQ,CAAC4E,aAAa,CAAC,KAAK,CAAC;MACnDM,aAAa,CAACL,SAAS,GAAG,+BAA+BH,SAAS,KAAKjC,QAAQ,GAC3E,yCAAyC,GACzC,2CAA2C,EAC3C;MAEJyC,aAAa,CAACC,KAAK,CAACC,YAAY,GAAG,MAAM,CAAC,CAAC;;MAE3C;MACA,MAAMC,cAAc,GAAGrF,QAAQ,CAAC4E,aAAa,CAAC,KAAK,CAAC;MACpDS,cAAc,CAACR,SAAS,GAAG,uBAAuB,CAAC,CAAC;;MAEpD;MACA,MAAMS,WAAW,GAAGtF,QAAQ,CAAC4E,aAAa,CAAC,GAAG,CAAC;MAC/CU,WAAW,CAACT,SAAS,GAAG,mBAAmB,CAAC,CAAC;MAC7CS,WAAW,CAACP,SAAS,GAAGN,IAAI;;MAE5B;MACA,MAAMc,WAAW,GAAGvF,QAAQ,CAAC4E,aAAa,CAAC,MAAM,CAAC;MAClDW,WAAW,CAACV,SAAS,GAAG,mCAAmC,CAAC,CAAC;MAC7DU,WAAW,CAACR,SAAS,GAAGxC,WAAW;;MAEnC;MACA8C,cAAc,CAACJ,WAAW,CAACK,WAAW,CAAC;MACvCD,cAAc,CAACJ,WAAW,CAACM,WAAW,CAAC;;MAEvC;MACAL,aAAa,CAACD,WAAW,CAACI,cAAc,CAAC;;MAEzC;MACA/B,uBAAuB,CAAC2B,WAAW,CAACC,aAAa,CAAC;IACpD,CAAC,CAAC;IACF5B,uBAAuB,CAACkC,SAAS,GAAGlC,uBAAuB,CAACmC,YAAY;EAG1E,CAAC;;EAGD;EACA,MAAMC,UAAU,GAAG,MAAAA,CAAOpE,CAAC,EAAEH,IAAI,GAAG,IAAI,KAAK;IAC3CG,CAAC,CAACN,eAAe,CAAC,CAAC;IACnB,IAAIG,IAAI,IAAI,IAAI,EAAE;MAChB,IAAI3B,WAAW,IAAI,mBAAmB,EAAE;QACtC,MAAMmG,CAAC,GAAGrE,CAAC,CAACJ,MAAM,CAACK,KAAK;QACxB,MAAMqE,CAAC,GAAGD,CAAC,CAACE,OAAO,CAAC,mBAAmB,CAAC;QACxC,MAAMC,EAAE,GAAGH,CAAC,CAACI,SAAS,CAACH,CAAC,GAAI,mBAAmB,CAACpE,MAAO,CAAC;QACxD/B,cAAc,CAACqG,EAAE,CAAC;MACpB,CAAC,MACI,IAAIxE,CAAC,CAACJ,MAAM,CAACK,KAAK,IAAID,CAAC,CAACJ,MAAM,CAACK,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;QAEpD/B,cAAc,CAAC6B,CAAC,CAACJ,MAAM,CAACK,KAAK,CAAC;MAChC,CAAC,MACI;QAEH9B,cAAc,CAAC,mBAAmB,CAAC;MACrC;IACF,CAAC,MACI;MACH,IAAID,WAAW,IAAI,mBAAmB,EAAE;QACtC8B,CAAC,CAACJ,MAAM,CAACK,KAAK,GAAG,EAAE;QACnB9B,cAAc,CAAC6B,CAAC,CAACJ,MAAM,CAACK,KAAK,CAAC;MAChC;IACF;EAEF,CAAC;EAED,MAAMyE,WAAW,GAAG,MAAO1E,CAAC,IAAK;IAC/B,MAAMoB,UAAU,GAAGlD,WAAW;IAC9B,MAAMiD,QAAQ,GAAGpE,QAAQ;IACzB,MAAMmE,MAAM,GAAGtD,eAAe;IAE9B,IAAIwD,UAAU,CAAClB,MAAM,IAAI,CAAC,EAAE;MAC1B/B,cAAc,CAAC,mBAAmB,CAAC;MACnC;IACF;IACA,IAAItB,aAAa,IAAI,KAAK,EAAE;MAC1B,MAAM8H,UAAU,GAAGxD,QAAQ,GAAG,SAAS;MACvC,IAAIvD,eAAe,IAAI+G,UAAU,EAAE;QAEjC;QACA;QACA;QACA,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC,CAAC,CAAC;;QAExB;QACA,MAAMC,GAAG,GAAGF,GAAG,CAACG,OAAO,CAAC,CAAC,CAAC,CAAC;QAC3B,MAAMC,KAAK,GAAGJ,GAAG,CAACK,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAClC,MAAMC,IAAI,GAAGN,GAAG,CAACO,WAAW,CAAC,CAAC,CAAC,CAAC;;QAEhC,MAAMC,KAAK,GAAGR,GAAG,CAACS,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC9B,MAAMC,OAAO,GAAGV,GAAG,CAACW,UAAU,CAAC,CAAC,CAAC,CAAC;QAClC,MAAMC,OAAO,GAAGZ,GAAG,CAACa,UAAU,CAAC,CAAC,CAAC,CAAC;;QAGlC,MAAMzE,WAAW,GAAG,GAAG8D,GAAG,IAAIE,KAAK,IAAIE,IAAI,EAAE;QAC7C,MAAMjE,WAAW,GAAG,GAAGmE,KAAK,IAAIE,OAAO,IAAIE,OAAO,EAAE;QAEpDrH,cAAc,CAAC,mBAAmB,CAAC;QACnC,MAAMgC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;UACjEC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnB,UAAU,EAAEW,QAAQ;YACpB,QAAQ,EAAEA,QAAQ;YAClB,WAAW,EAAEA,QAAQ;YACrB,YAAY,EAAEC,UAAU;YACxB,aAAa,EAAEJ,WAAW;YAC1B,aAAa,EAAEC;UACjB,CAAC,CAAC;UACFR,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QACFhD,aAAa,CAAC,KAAK,CAAC;QACpB8B,oBAAoB,CAAC,CAAC;QAEtB8B,YAAY,CAACF,QAAQ,EAAEA,QAAQ,CAAC;MAIlC,CAAC,MACI;QACH,MAAMS,WAAW,GAAGT,QAAQ,GAAG,GAAG,GAAGD,MAAM;QAC3C,MAAMW,WAAW,GAAGX,MAAM,GAAG,GAAG,GAAGC,QAAQ;QAC3C,MAAMyD,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC,CAAC,CAAC;;QAExB;QACA,MAAMC,GAAG,GAAGF,GAAG,CAACG,OAAO,CAAC,CAAC,CAAC,CAAC;QAC3B,MAAMC,KAAK,GAAGJ,GAAG,CAACK,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAClC,MAAMC,IAAI,GAAGN,GAAG,CAACO,WAAW,CAAC,CAAC,CAAC,CAAC;;QAEhC,MAAMC,KAAK,GAAGR,GAAG,CAACS,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC9B,MAAMC,OAAO,GAAGV,GAAG,CAACW,UAAU,CAAC,CAAC,CAAC,CAAC;QAClC,MAAMC,OAAO,GAAGZ,GAAG,CAACa,UAAU,CAAC,CAAC,CAAC,CAAC;;QAGlC,MAAMzE,WAAW,GAAG,GAAG8D,GAAG,IAAIE,KAAK,IAAIE,IAAI,EAAE;QAC7C,MAAMjE,WAAW,GAAG,GAAGmE,KAAK,IAAIE,OAAO,IAAIE,OAAO,EAAE;QAEpDrH,cAAc,CAAC,mBAAmB,CAAC;QACnC,MAAMgC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;UACjEC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnB,UAAU,EAAEW,QAAQ;YACpB,QAAQ,EAAED,MAAM;YAChB,WAAW,EAAEC,QAAQ;YACrB,YAAY,EAAEC,UAAU;YACxB,aAAa,EAAEJ,WAAW;YAC1B,aAAa,EAAEC;UACjB,CAAC,CAAC;UACFR,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QACF,MAAMyB,MAAM,GAAG,MAAM/B,QAAQ,CAACQ,IAAI,CAAC,CAAC;QACpC,MAAM+E,SAAS,GAAG,MAAMtF,KAAK,CAAC,oCAAoC,EAAE;UAClEC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnB,UAAU,EAAEU,MAAM;YAClB,QAAQ,EAAEC,QAAQ;YAClB,WAAW,EAAEA,QAAQ;YACrB,YAAY,EAAEC,UAAU;YACxB,aAAa,EAAEJ,WAAW;YAC1B,aAAa,EAAEC;UACjB,CAAC,CAAC;UACFR,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QACF,MAAMkF,OAAO,GAAG,MAAMD,SAAS,CAAC/E,IAAI,CAAC,CAAC;QACtCpE,MAAM,CAACoF,IAAI,CAAC,cAAc,EAAE;UAAEC,WAAW;UAAEC,WAAW;UAAEV,QAAQ;UAAED,MAAM;UAAEE,UAAU;UAAEJ,WAAW;UAAEC;QAAY,CAAC,CAAC;QAEjHxD,aAAa,CAAC,KAAK,CAAC;QACpB8B,oBAAoB,CAAC,CAAC;QACtB8B,YAAY,CAACF,QAAQ,EAAEvD,eAAe,CAAC;MAEzC;IACF,CAAC,MACI;MACH;IAAA;EAGJ,CAAC;EACD,MAAMgI,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAIC,UAAU,GAAGnH,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;IACtD,MAAMmH,GAAG,GAAGD,UAAU,CAAC5F,KAAK;IAC5B,IAAI6F,GAAG,CAAC5F,MAAM,IAAI,CAAC,EAAE;MACnB,IAAI6F,WAAW,GAAGrH,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;MACxDoH,WAAW,CAACC,WAAW,GAAG,kBAAkB;MAC5C;IACF,CAAC,MACI;MACH,IAAID,WAAW,GAAGrH,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;MACxDoH,WAAW,CAACC,WAAW,GAAG,EAAE;IAC9B;IAEA,IAAI1H,aAAa,CAAC4B,MAAM,IAAI,CAAC,EAAE;MAC7B,IAAI6F,WAAW,GAAGrH,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;MACxDoH,WAAW,CAACC,WAAW,GAAG,8BAA8B;MACxD;IACF,CAAC,MACI;MACH,IAAID,WAAW,GAAGrH,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;MACxDoH,WAAW,CAACC,WAAW,GAAG,EAAE;IAC9B;IAEA,MAAM7F,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;MAC3DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAE,UAAU,EAAEsF;MAAI,CAAC,CAAC;MACzCrF,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,MAAMT,MAAM,GAAGQ,IAAI,CAACR,MAAM;IAC1B,IAAIA,MAAM,IAAI,CAAC,EAAE;MACf,IAAI6F,WAAW,GAAGrH,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;MACxDoH,WAAW,CAACC,WAAW,GAAG,kCAAkC;MAC5D;IACF;IAIA,MAAMC,GAAG,GAAG,MAAM7F,KAAK,CAAC,uCAAuC,EAAE;MAC/DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnB,WAAW,EAAEsF;MACf,CAAC,CAAC;MACFrF,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,MAAMyF,IAAI,GAAG,MAAMD,GAAG,CAACtF,IAAI,CAAC,CAAC;IAC7B,IAAIuF,IAAI,CAACrG,IAAI,IAAI,MAAM,EAAE;MACvB,IAAIkG,WAAW,GAAGrH,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;MACxDoH,WAAW,CAACC,WAAW,GAAG,2BAA2B;MACrD;IACF,CAAC,MACI;MACH,IAAID,WAAW,GAAGrH,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;MACxDoH,WAAW,CAACC,WAAW,GAAG,EAAE;IAC9B;IACA,IAAIjE,WAAW,GAAG,EAAE;IACpBA,WAAW,GAAGzD,aAAa,CAACmE,GAAG,CAAE0D,IAAI,IAAKA,IAAI,CAACpJ,QAAQ,CAAC;IACxDgF,WAAW,CAACqE,IAAI,CAACrJ,QAAQ,CAAC;IAC1B,MAAM6H,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC,CAAC,CAAC;;IAExB;IACA,MAAMC,GAAG,GAAGF,GAAG,CAACG,OAAO,CAAC,CAAC,CAAC,CAAC;IAC3B,MAAMC,KAAK,GAAGJ,GAAG,CAACK,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAClC,MAAMC,IAAI,GAAGN,GAAG,CAACO,WAAW,CAAC,CAAC,CAAC,CAAC;;IAEhC,MAAMC,KAAK,GAAGR,GAAG,CAACS,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC9B,MAAMC,OAAO,GAAGV,GAAG,CAACW,UAAU,CAAC,CAAC,CAAC,CAAC;IAClC,MAAMC,OAAO,GAAGZ,GAAG,CAACa,UAAU,CAAC,CAAC,CAAC,CAAC;;IAElC,MAAMzE,WAAW,GAAG,GAAG8D,GAAG,IAAIE,KAAK,IAAIE,IAAI,EAAE;IAC7C,MAAMjE,WAAW,GAAG,GAAGmE,KAAK,IAAIE,OAAO,IAAIE,OAAO,EAAE;IACpD,MAAME,SAAS,GAAG,MAAMtF,KAAK,CAAC,qCAAqC,EAAE;MACnEC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnB,UAAU,EAAEzD,QAAQ;QACpB,WAAW,EAAE+I,GAAG;QAChB,aAAa,EAAE/D,WAAW;QAC1B,aAAa,EAAEf,WAAW;QAC1B,aAAa,EAAEC;MACjB,CAAC,CAAC;MACFR,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,IAAIsF,WAAW,GAAGrH,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;IACxDoH,WAAW,CAACC,WAAW,GAAG,4BAA4B;IACtDK,UAAU,CAAC,MAAM;MACf7H,WAAW,CAAC,CAAC;MACbrB,mBAAmB,CAAC,EAAE,CAAC;MACvBoB,gBAAgB,CAAC,EAAE,CAAC;IACtB,CAAC,EAAE,IAAI,CAAC;EAEV,CAAC;EAED,MAAM+H,mBAAmB,GAAG,MAAOtG,CAAC,IAAK;IACvC,MAAMkB,MAAM,GAAGlB,CAAC,CAACJ,MAAM,CAACK,KAAK;IAE7B,IAAIiB,MAAM,CAAChB,MAAM,GAAG,CAAC,EAAE;MACrB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QAC5DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAE,UAAU,EAAEU;QAAO,CAAC,CAAC;QAC5CT,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACF,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClC,MAAMC,UAAU,GAAGF,IAAI,CAACG,KAAK;MAC7B,MAAMC,UAAU,GAAGJ,IAAI,CAAC7D,aAAa;MAErCM,mBAAmB,CAACyD,UAAU,IAAI,EAAE,CAAC;IAEvC,CAAC,MACI;MACHzD,mBAAmB,CAAC,EAAE,CAAC;IACzB;EACF,CAAC;EAED,MAAMoJ,UAAU,GAAGA,CAACvG,CAAC,EAAEmG,IAAI,KAAK;IAC9BnG,CAAC,CAACwG,cAAc,CAAC,CAAC;IAClB,MAAMC,YAAY,GAAGnI,aAAa,CAACoI,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACC,GAAG,KAAKT,IAAI,CAACS,GAAG,CAAC;IAC9E,IAAIH,YAAY,EAAE;IAElBlI,gBAAgB,CAAEsI,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEV,IAAI,CAAC,CAAC;EAE7C,CAAC;EACD,MAAMW,aAAa,GAAGA,CAAC9G,CAAC,EAAEmG,IAAI,KAAK;IACjCnG,CAAC,CAACwG,cAAc,CAAC,CAAC;IAClBjI,gBAAgB,CAAEsI,IAAI,IAAKA,IAAI,CAACE,MAAM,CAAEJ,OAAO,IAAKA,OAAO,CAACC,GAAG,KAAKT,IAAI,CAACS,GAAG,CAAC,CAAC;EAChF,CAAC;EACD,MAAMrH,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,MAAMyH,IAAI,GAAG,MAAM5G,KAAK,CAAC,qCAAqC,EAAE;MAC9DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEW,QAAQ,EAAEpE;MAAS,CAAC,CAAC;MAC5C0D,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CAAC,CAAC;IACF,MAAMwG,KAAK,GAAG,MAAMD,IAAI,CAACrG,IAAI,CAAC,CAAC;IAE/B,MAAMuF,IAAI,GAAG,MAAM9F,KAAK,CAAC,yCAAyC,EAAE;MAClEC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEW,QAAQ,EAAEpE;MAAS,CAAC,CAAC;MAC5C0D,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CAAC,CAAC;IACF,MAAMyG,KAAK,GAAG,MAAMhB,IAAI,CAACvF,IAAI,CAAC,CAAC;IAG/B,IAAIwG,OAAO,GAAG,CAAC,GAAGF,KAAK,EAAE,GAAGC,KAAK,CAAC;IAGlC,IAAIE,IAAI,GAAGD,OAAO,CAAChF,IAAI,CAAC,CAACC,CAAC,EAAEhD,CAAC,KAAK;MAChC;MACA,MAAM,CAACiD,IAAI,EAAEC,MAAM,EAAEC,KAAK,CAAC,GAAGnD,CAAC,CAAC4B,WAAW,CAACwB,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;MAClE,MAAM,CAACC,IAAI,EAAEC,MAAM,EAAEC,KAAK,CAAC,GAAGT,CAAC,CAACpB,WAAW,CAACwB,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;;MAElE;MACA,IAAIH,KAAK,KAAKM,KAAK,EAAE,OAAON,KAAK,GAAGM,KAAK;MACzC,IAAIP,MAAM,KAAKM,MAAM,EAAE,OAAON,MAAM,GAAGM,MAAM;MAC7C,IAAIP,IAAI,KAAKM,IAAI,EAAE,OAAON,IAAI,GAAGM,IAAI;;MAErC;MACA,MAAMG,KAAK,GAAG1D,CAAC,CAAC6B,WAAW,CAACuB,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC,CAAC,CAAC;MACpD,MAAMK,KAAK,GAAGX,CAAC,CAACnB,WAAW,CAACuB,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;;MAElD;MACA,IAAII,KAAK,CAAC,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,CAAC,EAAE,OAAOD,KAAK,CAAC,CAAC,CAAC,GAAGC,KAAK,CAAC,CAAC,CAAC;MACrD,IAAID,KAAK,CAAC,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,CAAC,EAAE,OAAOD,KAAK,CAAC,CAAC,CAAC,GAAGC,KAAK,CAAC,CAAC,CAAC;MACrD,OAAOD,KAAK,CAAC,CAAC,CAAC,GAAGC,KAAK,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC;IAIFnE,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEuI,IAAI,CAAC;;IAElC;IACA/I,oBAAoB,CAAC,CAAC,GAAG+I,IAAI,CAAC,CAAC,CAAC,CAAC;EAKnC,CAAC;EAEDrL,SAAS,CAAC,MAAM;IACdwD,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAIN,oBACErD,OAAA,CAAAE,SAAA;IAAAiL,QAAA,GACGrJ,aAAa,iBACZ9B,OAAA;MAAKqH,SAAS,EAAC,6DAA6D;MAAA8D,QAAA,gBAC1EnL,OAAA;QAAQoL,OAAO,EAAE9I,WAAY;QAAC+E,SAAS,EAAC,mGAAmG;QAAA8D,QAAA,EAAE;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3JxL,OAAA;QAAOyL,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC,YAAY;QAACC,IAAI,EAAC,EAAE;QAACC,WAAW,EAAC,oBAAoB;QAACvE,SAAS,EAAC;MAAyD;QAAAgE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClJxL,OAAA;QAAOyL,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC,aAAa;QAACG,QAAQ,EAAE/H,CAAC,IAAIsG,mBAAmB,CAACtG,CAAC,CAAE;QAAC6H,IAAI,EAAC,EAAE;QAACC,WAAW,EAAC,eAAe;QAACvE,SAAS,EAAC;MAAyD;QAAAgE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrLxL,OAAA;QAAKqH,SAAS,EAAC,gKAA+J;QAAA8D,QAAA,EAC3KnK,gBAAgB,CAACgD,MAAM,GAAG,CAAC,gBAC1BhE,OAAA;UAAIqH,SAAS,EAAC,0BAA0B;UAAA8D,QAAA,EACrCnK,gBAAgB,CAACuF,GAAG,CAAE0D,IAAI,IAAMA,IAAI,CAACpJ,QAAQ,IAAIA,QAAQ,iBACxDb,OAAA;YAAmB2H,KAAK,EAAE;cAAEmE,KAAK,EAAE,KAAK;cAAEC,UAAU,EAAE;YAAK,CAAE;YAAC1E,SAAS,EAAC,wFAAwF;YAAA8D,QAAA,GAAElB,IAAI,CAACpJ,QAAQ,EAAC,GAAC,eAAAb,OAAA;cAAQyL,IAAI,EAAC,QAAQ;cAACL,OAAO,EAAEtH,CAAC,IAAIuG,UAAU,CAACvG,CAAC,EAAEmG,IAAI,CAAE;cAAC5C,SAAS,EAAC,+EAA+E;cAAA8D,QAAA,EAAC;YAAG;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC;UAAA,GAAxUvB,IAAI,CAACS,GAAG;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAoU,CACtV;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,gBACFxL,OAAA;UAAIqH,SAAS,EAAC,kCAAkC;UAAA8D,QAAA,EAAC;QAAe;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxE,CAAC,eACNxL,OAAA;QAAKqH,SAAS,EAAC,0DAA0D;QAAA8D,QAAA,EACtE/I,aAAa,CAAC4B,MAAM,GAAG,CAAC,gBACvBhE,OAAA;UAAIqH,SAAS,EAAC,0BAA0B;UAAA8D,QAAA,EACrC/I,aAAa,CAACmE,GAAG,CAAE0D,IAAI,iBACtBjK,OAAA;YAAmB2H,KAAK,EAAE;cAAEmE,KAAK,EAAE,KAAK;cAAEC,UAAU,EAAE;YAAK,CAAE;YAAC1E,SAAS,EAAC,wFAAwF;YAAA8D,QAAA,GAAElB,IAAI,CAACpJ,QAAQ,EAAC,GAAC,eAAAb,OAAA;cAAQyL,IAAI,EAAC,QAAQ;cAACL,OAAO,EAAEtH,CAAC,IAAI8G,aAAa,CAAC9G,CAAC,EAAEmG,IAAI,CAAE;cAAC5C,SAAS,EAAC,2EAA2E;cAAA8D,QAAA,EAAC;YAAM;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC;UAAA,GAA1UvB,IAAI,CAACS,GAAG;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAsU,CACxV;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,gBACFxL,OAAA;UAAIqH,SAAS,EAAC,kCAAkC;UAAA8D,QAAA,EAAC;QAAkB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3E,CAAC,eACNxL,OAAA;QAAK0L,EAAE,EAAC,aAAa;QAACrE,SAAS,EAAC;MAA6D;QAAAgE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACpGxL,OAAA;QAAQqH,SAAS,EAAC,2FAA2F;QAAC+D,OAAO,EAAEtH,CAAC,IAAI4F,cAAc,CAAC5F,CAAC,CAAE;QAAAqH,QAAA,EAAE;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5J,CAAC,eACRxL,OAAA;MAAKqH,SAAS,EAAC,wBAAwB;MAAC+D,OAAO,EAAE3H,oBAAqB;MAAA0H,QAAA,gBACpEnL,OAAA;QAAKqH,SAAS,EAAC,cAAc;QAACM,KAAK,EAAE;UAAEmE,KAAK,EAAE,IAAI;UAAEE,MAAM,EAAE;QAAO;MAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhE,CAAC,eACNxL,OAAA;QAAK2H,KAAK,EAAE;UAAEmE,KAAK,EAAE,KAAK;UAAEE,MAAM,EAAC;QAAM,CAAE;QAAAb,QAAA,gBACzCnL,OAAA;UAAKqH,SAAS,EAAC,UAAU;UAAA8D,QAAA,gBACvBnL,OAAA;YAAMqH,SAAS,EAAC,8CAA8C;YAAA8D,QAAA,EAAC;UAE/D;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAEPxL,OAAA;YAAQyL,IAAI,EAAC,QAAQ;YAACC,EAAE,EAAC,cAAc;YAACrE,SAAS,EAAC,gHAAgH;YAAC+D,OAAO,EAAE9I,WAAY;YAAA6I,QAAA,EAAC;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAGhNxL,OAAA;YAAAqL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACNxL,OAAA;YAAKqH,SAAS,EAAC,yBAAyB;YAACqE,EAAE,EAAC,kBAAkB;YAAC/D,KAAK,EAAE;cAAEoE,UAAU,EAAE;YAAK,CAAE;YAAAZ,QAAA,gBACzFnL,OAAA;cAAMqH,SAAS,EAAC,yDAAyD;cAAC+D,OAAO,EAAGtH,CAAC,IAAKf,YAAY,CAACe,CAAC,CAAE;cAAAqH,QAAA,eAACnL,OAAA;gBAAKiM,GAAG,EAAC,iBAAiB;gBAACC,GAAG,EAAC,EAAE;gBAACvE,KAAK,EAAE;kBAAEqE,MAAM,EAAE,MAAM;kBAAEF,KAAK,EAAE;gBAAO,CAAE;gBAACJ,EAAE,EAAC,cAAc;gBAACrE,SAAS,EAAC;cAA4B;gBAAAgE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACzPxL,OAAA;cAAOyL,IAAI,EAAC,MAAM;cAACU,GAAG,EAAEzL,QAAS;cAACkL,WAAW,EAAC,QAAQ;cAACF,EAAE,EAAC,aAAa;cAACrE,SAAS,EAAC,uCAAuC;cAACwE,QAAQ,EAAG/H,CAAC,IAAKD,OAAO,CAACC,CAAC,CAAE;cACpJ6D,KAAK,EAAE;gBAAEyE,OAAO,EAAE,MAAM;gBAAEN,KAAK,EAAE,KAAK;gBAAEO,WAAW,EAAE,KAAK;gBAAEC,WAAW,EAAE;cAAK,CAAE;cAAClB,OAAO,EAAGtH,CAAC,IAAKf,YAAY,CAACe,CAAC;YAAE;cAAAuH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,EACLlK,UAAU,gBACTtB,OAAA;UAAK0L,EAAE,EAAC,cAAc;UAACrE,SAAS,EAAC,yBAAyB;UAACM,KAAK,EAAE;YAAE4E,SAAS,EAAE,OAAO;YAAEC,SAAS,EAAE;UAAO,CAAE;UAAArB,QAAA,EAEzGjK,WAAW,CAAC8C,MAAM,GAAC,CAAC,gBACnBhE,OAAA;YAAIqH,SAAS,EAAC,0BAA0B;YAAA8D,QAAA,gBACtCnL,OAAA;cAAMqH,SAAS,EAAC,iCAAiC;cAAA8D,QAAA,EAAC;YAAW;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,EACnEtK,WAAW,CAACqF,GAAG,CAAE0D,IAAI,iBACpBjK,OAAA;cAAmBoL,OAAO,EAAGtH,CAAC,IAAKwB,kBAAkB,CAACxB,CAAC,EAAEmG,IAAI,CAACpJ,QAAQ,CAAE;cAAEwG,SAAS,EAAC,uHAAuH;cAAA8D,QAAA,EAAElB,IAAI,CAACpJ;YAAQ,GAAjNoJ,IAAI,CAACS,GAAG;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA8M,CAChO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,gBACJxL,OAAA;YAAKqH,SAAS,EAAC,4CAA4C;YAAA8D,QAAA,EAAC;UAAqB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrF,CAAC,gBACPxL,OAAA;UAAKqH,SAAS,EAAC,+GAA8G;UAAA8D,QAAA,EAC3HjJ,iBAAiB,CAAC8B,MAAM,GAAC,CAAC,iBACzBhE,OAAA;YAAIqH,SAAS,EAAC,EAAE;YAAA8D,QAAA,eACdnL,OAAA;cAAAmL,QAAA,EACGjJ,iBAAiB,CAACqE,GAAG,CAAC,CAACkG,IAAI,EAAEC,KAAK,kBACjC1M,OAAA;gBAAkBqH,SAAS,EAAC,8GAA8G;gBAAA8D,QAAA,EAEvIsB,IAAI,CAACE,SAAS,gBACb3M,OAAA;kBAAKqH,SAAS,EAAC,mBAAmB;kBAAA8D,QAAA,gBAChCnL,OAAA;oBAAGqH,SAAS,EAAC,oCAAoC;oBAAA8D,QAAA,EAAEsB,IAAI,CAACE;kBAAS;oBAAAtB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACtExL,OAAA;oBAAGqH,SAAS,EAAC,2CAA2C;oBAAA8D,QAAA,GAAC,QAAM,EAACsB,IAAI,CAAC3H,WAAW;kBAAA;oBAAAuG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACrFxL,OAAA;oBAAGqH,SAAS,EAAC,gEAAgE;oBAAA8D,QAAA,GAAC,QAAM,EAACsB,IAAI,CAAC1H,WAAW;kBAAA;oBAAAsG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACvG,CAAC;gBAAA;gBAEN;gBACAxL,OAAA;kBAAKoL,OAAO,EAAGtH,CAAC,IAAKwB,kBAAkB,CAACxB,CAAC,EAAE2I,IAAI,CAACzH,MAAM,CAAE;kBAACqC,SAAS,EAAC,mBAAmB;kBAAA8D,QAAA,gBACpFnL,OAAA;oBAAGqH,SAAS,EAAC,qCAAqC;oBAAA8D,QAAA,GAAC,QAAM,EAACsB,IAAI,CAACzH,MAAM;kBAAA;oBAAAqG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eAC1ExL,OAAA;oBAAGqH,SAAS,EAAC,0BAA0B;oBAAA8D,QAAA,GAAC,WAAS,EAACsB,IAAI,CAACG,aAAa;kBAAA;oBAAAvB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACzExL,OAAA;oBAAGqH,SAAS,EAAC,2CAA2C;oBAAA8D,QAAA,GAAC,QAAM,EAACsB,IAAI,CAAC3H,WAAW;kBAAA;oBAAAuG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACrFxL,OAAA;oBAAGqH,SAAS,EAAC,iEAAiE;oBAAA8D,QAAA,GAAC,QAAM,EAACsB,IAAI,CAAC1H,WAAW;kBAAA;oBAAAsG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACxG;cACN,GAhBMkB,KAAK;gBAAArB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAiBV,CACL;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ;QACL;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEE,CAAE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EACLhK,OAAO,gBACNxB,OAAA;QAAKqH,SAAS,EAAC,kEAAkE;QAACM,KAAK,EAAE;UAAEmE,KAAK,EAAE;QAAM,CAAE;QAAAX,QAAA,eACxGnL,OAAA;UAAAmL,QAAA,EAAK;QAEL;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,gBACLxL,OAAA;QAAKqH,SAAS,EAAC,UAAU;QAACM,KAAK,EAAE;UAAEmE,KAAK,EAAE;QAAM,CAAE;QAAAX,QAAA,gBACjDnL,OAAA;UAAKqH,SAAS,EAAC,mCAAmC;UAACM,KAAK,EAAE;YAAEqE,MAAM,EAAE;UAAM,CAAE;UAAAb,QAAA,EAAEzJ;QAAe;UAAA2J,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACpGxL,OAAA;UAAKqH,SAAS,EAAC,oCAAoC;UAACqE,EAAE,EAAC,gBAAgB;UAAC/D,KAAK,EAAE;YAAEqE,MAAM,EAAE;UAAM;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzGxL,OAAA;UAAKqH,SAAS,EAAC,aAAa;UAACM,KAAK,EAAE;YAAEqE,MAAM,EAAE;UAAM,CAAE;UAAAb,QAAA,gBAACnL,OAAA;YAAOyL,IAAI,EAAC,MAAM;YAAC1H,KAAK,EAAE/B,WAAY;YAAC6J,QAAQ,EAAE/H,CAAC,IAAIoE,UAAU,CAACpE,CAAC,CAAE;YAACsH,OAAO,EAAEtH,CAAC,IAAIoE,UAAU,CAACpE,CAAC,EAAE,KAAK,CAAE;YAAC6H,IAAI,EAAC,EAAE;YAACD,EAAE,EAAC,EAAE;YAACrE,SAAS,EAAC,eAAe;YAACM,KAAK,EAAE;cAAEmE,KAAK,EAAE,KAAK;cAAEO,WAAW,EAAE,IAAI;cAAEN,UAAU,EAAE,KAAK;cAAEC,MAAM,EAAE,KAAK;cAAEa,SAAS,EAAE;YAAK;UAAE;YAAAxB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,KAAC,eAAAxL,OAAA;YAAQ2H,KAAK,EAAE;cAAEmE,KAAK,EAAE,KAAK;cAAEE,MAAM,EAAE;YAAM,CAAE;YAAAb,QAAA,eAACnL,OAAA;cAAKiM,GAAG,EAAC,iBAAiB;cAACb,OAAO,EAAGtH,CAAC,IAAK0E,WAAW,CAAC1E,CAAC,CAAE;cAAC6D,KAAK,EAAE;gBAAEmE,KAAK,EAAE,KAAK;gBAAEE,MAAM,EAAE,MAAM;gBAAEc,UAAU,EAAE;cAAK;YAAE;cAAAzB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9d,CAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA,eAEN,CAAC;AAEP;AAAChL,EAAA,CA/sBuBD,UAAU;EAAA,QACfT,WAAW;AAAA;AAAAiN,EAAA,GADNxM,UAAU;AAAA,IAAAwM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}